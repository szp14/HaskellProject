
==================== FINAL INTERFACE ====================
2017-01-14 01:49:59.25583 UTC

interface Compiler-0.1.0.0-57coiQcmnJXARK4xYqZ5Rd:AST 8001
  interface hash: 5067be99a1d82bd10eedc2fe5807b539
  ABI hash: eb1c12a750a9193e09956e0eb6a60f4e
  export-list hash: 67eb7d487a347549833e17b2a65e88b5
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: db082111cc32dd58ed548dcc273abe68
  sig of: Nothing
  used TH splices: False
  where
exports:
  AST.parseAST
module dependencies: Lexical
package dependencies: array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43
                      base-4.9.0.0 binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-Ctl752zbguF6QanxurLOm2
                      integer-gmp-1.0.0.1
                      integer-logarithms-1@integer-logarithms-1-E6LvTbkhTkGIa6wPB3rtJw
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      scientific-0.3.4.10@scientific-0.3.4.10-2Y658Wts4fDGgAkWhKOJwC
                      text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs
                      transformers-0.5.2.0@transformers-0.5.2.0
                      vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43:Data.Attoparsec.Text.Internal
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-Ctl752zbguF6QanxurLOm2:Data.Hashable.Generic
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Fusion.Bundle
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43:Data.Attoparsec.Internal.Types
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Functor.Identity base-4.9.0.0:Data.List.NonEmpty
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Semigroup
                         base-4.9.0.0:Data.Type.Equality base-4.9.0.0:Data.Version
                         base-4.9.0.0:Data.Void base-4.9.0.0:GHC.Exts
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text
                         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Lazy
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector
import  -/  Lexical efb96b2e98754a1c7f4596b930a82d44
  exports: 6031e673bb203ba7d49321f533aafb93
  Stmt 33346d2223bbd5ee71d81807aa14585c
  stmtParser dedf3286f5111231b112f7a6389d0e23
import  -/  attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43:Data.Attoparsec.Text d3cff0ad187398020adcebc8a0709b72
import  -/  attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43:Data.Attoparsec.Text.Internal fd0d5edacc9a9428b223517c76c5dd06
import  -/  base-4.9.0.0:Control.Applicative 7728b33d6969dce59e89474349eb1397
import  -/  base-4.9.0.0:Data.Either bd9f099b82d4ed2d98c56d7144ac6957
import  -/  base-4.9.0.0:Data.Functor 6fc476505db88d678632a4a838125f13
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text 1e73069de2859bae8530c14767b0c6af
import  -/  text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Internal bfb0ec5fde448272375be97e2314e47b
ce899432cd374c7908f44732445f8b8a
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module AST.$trModule2 AST.$trModule1) -}
f2631b0302c3cd41ab9c0ccb7facf7fb
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "AST"#) -}
5217d6dc03231d0a0d669f82e0a3dc7d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Compiler-0.1.0.0-57coiQcmnJXARK4xYqZ5Rd"#) -}
6dc8846c26bf258f58ceb139a27f5c88
  $wouter ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
a326ae8c5ccb52edfb6a08700a01ee5b
  parseAST ::
    GHC.Base.String -> Data.Either.Either GHC.Base.String Lexical.Stmt
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (str :: GHC.Base.String) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds1 { (#,#) ipv ipv1 ->
                         AST.$wouter
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           AST.parseAST3
                           str
                           0#
                           ipv }) of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Data.Text.Internal.Text dt dt1 dt2 ->
                 case Lexical.$wstmtParser
                        @ Lexical.Stmt
                        dt
                        dt1
                        dt2
                        dt2
                        0#
                        0#
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.Text.Internal.failK @ Lexical.Stmt)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateText[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.Text.Internal.Text Lexical.Stmt>_R)
                        (Data.Attoparsec.Text.Internal.successK @ Lexical.Stmt)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateText[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> Lexical.Stmt
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.Text.Internal.Text Lexical.Stmt>_R) of wild1 {
                   Data.Attoparsec.Internal.Types.Fail ds ds2 err
                   -> case ds2 of wild2 {
                        [] -> Data.Either.Left @ [GHC.Types.Char] @ Lexical.Stmt err
                        : ipv2 ipv3
                        -> Data.Either.Left
                             @ [GHC.Types.Char]
                             @ Lexical.Stmt
                             (GHC.Base.++
                                @ GHC.Types.Char
                                (Data.OldList.intercalate_$spoly_go
                                   @ GHC.Types.Char
                                   ipv2
                                   (Data.OldList.prependToAll
                                      @ [GHC.Types.Char]
                                      AST.parseAST2
                                      ipv3))
                                (GHC.CString.unpackAppendCString# ": "# err)) }
                   Data.Attoparsec.Internal.Types.Partial ipv2 -> AST.parseAST1
                   Data.Attoparsec.Internal.Types.Done ds a1
                   -> Data.Either.Right @ [GHC.Types.Char] @ Lexical.Stmt a1 } } }) -}
f6319afabd925fe3096e1de73e2cc3be
  parseAST1 :: Data.Either.Either GHC.Base.String Lexical.Stmt
  {- Strictness: x -}
0a1a56a5011d186c4a027816d1a98df4
  parseAST2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# " > "#) -}
c0337fc1e06fba82fb0734d6da489e09
  parseAST3 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 4#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

