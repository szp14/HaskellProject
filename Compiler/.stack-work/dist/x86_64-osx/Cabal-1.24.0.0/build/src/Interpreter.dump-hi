
==================== FINAL INTERFACE ====================
2017-01-15 08:49:33.300904 UTC

interface Compiler-0.1.0.0-5UkU68CXfZM1FpQsH03UZ5:Interpreter 8001
  interface hash: ce98de1ef6e9ca0a7e60a7a39e84d95c
  ABI hash: 1d2546acb9d902b0a9307f3b0507bb74
  export-list hash: 7f6578cba9942dbda76ab84dd604c8dd
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: db082111cc32dd58ed548dcc273abe68
  sig of: Nothing
  used TH splices: False
  where
exports:
  Interpreter.eval
  Interpreter.getBool
  Interpreter.getExpr
  Interpreter.getList
  Interpreter.getNum
  Interpreter.interpreter
  Interpreter.Env
  Interpreter.Value{Interpreter.BoolVal Interpreter.CharVal Interpreter.ListVal Interpreter.NumVal Interpreter.VectorVal boolVal charVal listVal numVal vecLen vecVal}
module dependencies: Grammar
package dependencies: array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43
                      base-4.9.0.0 binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-Ctl752zbguF6QanxurLOm2
                      integer-gmp-1.0.0.1
                      integer-logarithms-1@integer-logarithms-1-E6LvTbkhTkGIa6wPB3rtJw
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      scientific-0.3.4.10@scientific-0.3.4.10-2Y658Wts4fDGgAkWhKOJwC
                      text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs
                      transformers-0.5.2.0@transformers-0.5.2.0
                      vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43:Data.Attoparsec.Text.Internal
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-Ctl752zbguF6QanxurLOm2:Data.Hashable.Generic
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Fusion.Bundle
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43:Data.Attoparsec.Internal.Types
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Functor.Identity base-4.9.0.0:Data.List.NonEmpty
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Semigroup
                         base-4.9.0.0:Data.Type.Equality base-4.9.0.0:Data.Version
                         base-4.9.0.0:Data.Void base-4.9.0.0:GHC.Exts
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text
                         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Lazy
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector
import  -/  Grammar c8061553502f022a04564e232ae9b458
  exports: 1350f875d0a40aa853f67f4d5395bf88
  Add 02ffe8ae482a2e823abdb10cf5daeb15
  And 8182603d5fdb828773e749ef15cfd34d
  Assign 65685e9466684d9cf2975bf2bfa07b41
  BExp 83afdb5dd8a54a685f557232e95e4957
  BVar ddb9cfb06bba139d6ea9b9a10b93c14e
  BoolExpr 0ab60214c669ea5b34bb5276af01520f
  Car 9a2ba8416fbfcbb13b843c81af636c90
  Cdr d5a908a3eaf67f494de236ff9e1a55df
  CharLit 876e71b41bb233265d58d30e0af7bd9e
  Cons 71c6fb9713f8481eb675fe2bd0f86df4
  Cycle 9980404884ec23d042e4de1612e2b94b
  Div 434e9a9c996a9d685d56fd9864dad03b
  E 4d609c767afefcd355f319f019be70b9
  EVar bc9f40668069c1613cc44a87a8b6767b
  Exp a418cbc73e5e4e8ac0a8df5dc3f75852
  Expr 0ab60214c669ea5b34bb5276af01520f
  FalseLit c2f809a6309b45c8ed3d95578eaae980
  G ff85c5698714fe23f3fbd7a2d5691566
  GE d7cc997c5dd0222a56daa1807c30bd0d
  If 610642bfd3717dbcbf3bceee60c5652f
  L 0ebb81ebd2baf75bc19fc990f723e1f3
  LE f0686d4ca66665ecdf903e3500ce7fcb
  LExp e0f51234986b521d75566d0fcb018b77
  LVar e968e7846f9060399476c93cfa2642ce
  ListExpr 0ab60214c669ea5b34bb5276af01520f
  Mul 9e53942963dd1cec170f49594563f08b
  NExp bcf7002436e718536441023240b75a75
  NVar e92e9d426eabcb0e1dd25f6a5e487246
  New_vec d676e3715c7dbec57fd9ad855bf5071d
  Nil ff939892725c6b8a9634b14a89c5e15f
  Not 62b2a03557ddc9c94639fca3b35de699
  NumExpr 0ab60214c669ea5b34bb5276af01520f
  Number e5d6d623b8cd425dd14b697444f0a5a0
  One 0e12df0dd9ca00e4d5e25cd83bfabeba
  Or 5a7826f44b52d55596477d8bfc7b5f66
  Set_vec e1e0c55474c2b67392574e57dec1cca6
  Skip 1ef2c6e0b1699a22cb20ceb920c62d73
  Stmt 9318de9adc155175705f6cef46b99c35
  Stmt_cycle 2ad6ab751a12956872390f07d153a84e
  StringLit b0a78c5fb12727453b86f26cbd949ac1
  Sub 2aab8846af09cec45998ab4524612c99
  TrueLit 36329013255bd43ad86e4dc4a2f36db2
  TypeBool f5bf9da4c46b461e521bfe441a320a68
  TypeList 2ac91060ef3acfcd5d44422c155888ec
  TypeNum 558941becaeec7034f90d9e55ca1c115
  TypeUnknown 1fbd6682892079e207c2b9ff590e911d
  TypeVector 5ba58ab9b8b4c3b1a319347d0336420d
  While 8b70241fa5247e4e27eee92d470439e8
  parse b3170b25484e5ad439cbf4b8577ce7ec
import  -/  base-4.9.0.0:Data.Either bd9f099b82d4ed2d98c56d7144ac6957
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Real 08bf4acb5f2508f89d6fbcd57fe232e9
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.IO ad985d7a3fc986e9b9c610fb344d9106
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 8f3eaf1368a7ea27857993e3febae6a3
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base 8d095ad71634b5551ba5dc1307b7f9e5
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text 1e73069de2859bae8530c14767b0c6af
import  -/  vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector c1e986e414fb06d8c78b2ec9a85e2dfc
9e8f2b3c33afeb92224e4d6ba637d895
  $fShowValue :: GHC.Show.Show Interpreter.Value
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Interpreter.Value
                  Interpreter.$fShowValue_$cshowsPrec
                  Interpreter.$fShowValue_$cshow
                  Interpreter.$fShowValue_$cshowList -}
9e8f2b3c33afeb92224e4d6ba637d895
  $fShowValue1 ::
    Interpreter.Value -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ (x :: Interpreter.Value)
                   (s :: GHC.Base.String)[OneShot] ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (Interpreter.$fShowValue_$cshow x)
                   s) -}
9e8f2b3c33afeb92224e4d6ba637d895
  $fShowValue_$cshow :: Interpreter.Value -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
9e8f2b3c33afeb92224e4d6ba637d895
  $fShowValue_$cshowList :: [Interpreter.Value] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (ls :: [Interpreter.Value]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Interpreter.Value
                   Interpreter.$fShowValue1
                   ls
                   s) -}
9e8f2b3c33afeb92224e4d6ba637d895
  $fShowValue_$cshowsPrec ::
    GHC.Types.Int -> Interpreter.Value -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Interpreter.Value)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (Interpreter.$fShowValue_$cshow x))
                   s) -}
980fc06f3f05b99ad13ad8e7fbcf7626
  $sinsert_$sgo10 ::
    GHC.Base.String
    -> a1
    -> Data.Map.Base.Map GHC.Base.String a1
    -> Data.Map.Base.Map GHC.Base.String a1
  {- Arity: 3, Strictness: <S,1*U><L,U><S,1*U> -}
ddbfaa74494ddb86bde13806ab73d174
  $slookup1 ::
    GHC.Base.String
    -> Data.Map.Base.Map GHC.Base.String a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
b9390393075a8413cacc54e26816792f
  $tc'BoolVal :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   778035693402722285##
                   18434580379669198998##
                   Interpreter.$trModule
                   Interpreter.$tc'BoolVal1) -}
e6ebcae3dc89e24a8a92eca722d85e57
  $tc'BoolVal1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'BoolVal"#) -}
8e5a57a3e2513bcf09c01c22a11a8742
  $tc'CharVal :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5533034633182046921##
                   9085124186981951287##
                   Interpreter.$trModule
                   Interpreter.$tc'CharVal1) -}
ccd20c957b8012c992f63fba4c077cbb
  $tc'CharVal1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CharVal"#) -}
ebc6ab9316388040f5da9f4c7afec93e
  $tc'ListVal :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10879284498268236133##
                   3455918447161639053##
                   Interpreter.$trModule
                   Interpreter.$tc'ListVal1) -}
65108b5c16da36833d697b6637c70acc
  $tc'ListVal1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ListVal"#) -}
a340c231d83382be2d44f35cdefe3570
  $tc'NumVal :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17676748604743905612##
                   7687921797126581086##
                   Interpreter.$trModule
                   Interpreter.$tc'NumVal1) -}
224b6447f82dedd8998804bbf9493c93
  $tc'NumVal1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'NumVal"#) -}
be10201e8fb3bc5b34bb47281b9939b0
  $tc'VectorVal :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13561445409090365139##
                   12164808382729325314##
                   Interpreter.$trModule
                   Interpreter.$tc'VectorVal1) -}
9f68624a3d9e64c981d39a0d9e95dbd0
  $tc'VectorVal1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'VectorVal"#) -}
c03248aecf4d77c42114667ec269a29e
  $tcValue :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2464362674942205972##
                   887933511705024317##
                   Interpreter.$trModule
                   Interpreter.$tcValue1) -}
c12f24b5022d23592b01572b1ae75066
  $tcValue1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Value"#) -}
76a9ef570c9bd55160ba39e596e8ad82
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Interpreter.$trModule2
                   Interpreter.$trModule1) -}
c42f53d4a81a14131bfcb1cd85b3e759
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Interpreter"#) -}
3bc73ddf2a5198a84e4ca2f721e3ebae
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Compiler-0.1.0.0-5UkU68CXfZM1FpQsH03UZ5"#) -}
8d9fef3470637f33ea8ac3028561842e
  $weval ::
    Grammar.Stmt
    -> [GHC.Base.String]
    -> Interpreter.Env
    -> Data.Either.Either
         GHC.Base.String ([GHC.Base.String], Interpreter.Env)
  {- Arity: 3, Strictness: <S,1*U><L,U><L,U>, Inline: [0] -}
6c35f9a0234afb75f9694ed1ea33b62b
  type Env = Data.Map.Base.Map GHC.Base.String Interpreter.Value
9e8f2b3c33afeb92224e4d6ba637d895
  data Value
    = BoolVal {boolVal :: GHC.Types.Bool}
    | NumVal {numVal :: GHC.Types.Double}
    | CharVal {charVal :: GHC.Types.Char}
    | ListVal {listVal :: [Interpreter.Value]}
    | VectorVal {vecVal :: Data.Vector.Vector Interpreter.Value,
                 vecLen :: GHC.Types.Int}
4f00d8fca64e8ad0c7b9e0dc1b170cab
  boolVal :: Interpreter.Value -> GHC.Types.Bool
  RecSel Left Interpreter.Value
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Interpreter.Value) ->
                 case ds of wild {
                   DEFAULT -> Interpreter.boolVal1
                   Interpreter.BoolVal ds1 -> ds1 }) -}
9a91bedd6e564491bfceff914685c316
  boolVal1 :: GHC.Types.Bool
  {- Strictness: x -}
03f6f4e26ff0fe71df6a9320c1fdbe61
  charVal :: Interpreter.Value -> GHC.Types.Char
  RecSel Left Interpreter.Value
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Interpreter.Value) ->
                 case ds of wild {
                   DEFAULT -> Interpreter.charVal1
                   Interpreter.CharVal ds1 -> ds1 }) -}
c70484d454e5325dcbe43ce36910d5be
  charVal1 :: GHC.Types.Char
  {- Strictness: x -}
5e0730a8b78b30cf9c9a9f71df355b69
  eval ::
    Grammar.Stmt
    -> ([GHC.Base.String], Interpreter.Env)
    -> Data.Either.Either
         GHC.Base.String ([GHC.Base.String], Interpreter.Env)
  {- Arity: 2, Strictness: <S,1*U><S,1*U(U,U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Grammar.Stmt)
                   (w1 :: ([GHC.Base.String], Interpreter.Env)) ->
                 case w1 of ww { (,) ww1 ww2 -> Interpreter.$weval w ww1 ww2 }) -}
e9bb665b4da4d21d434debfd0b8c9bfe
  getBool ::
    Grammar.BoolExpr
    -> Interpreter.Env
    -> Data.Either.Either GHC.Base.String Interpreter.Value
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
73668bae07c64e0ba3600dc2f0aa5004
  getExpr ::
    Grammar.Expr
    -> Interpreter.Env
    -> Data.Either.Either GHC.Base.String Interpreter.Value
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
a1870affc5c6e26ffd064b0cb02cbb5e
  getList ::
    Grammar.ListExpr
    -> Interpreter.Env
    -> Data.Either.Either GHC.Base.String Interpreter.Value
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
e370ad10f86d4763ac49895280a165ef
  getNum ::
    Grammar.NumExpr
    -> Interpreter.Env
    -> Data.Either.Either GHC.Base.String Interpreter.Value
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
f2f490c31f32e627fb18015b11be183d
  interpreter ::
    [GHC.Base.String]
    -> Interpreter.Env
    -> Data.Either.Either GHC.Base.String [GHC.Base.String]
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
6998bd42b0f359bde478c381e27afef7
  listVal :: Interpreter.Value -> [Interpreter.Value]
  RecSel Left Interpreter.Value
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Interpreter.Value) ->
                 case ds of wild {
                   DEFAULT -> Interpreter.listVal1
                   Interpreter.ListVal ds1 -> ds1 }) -}
d97ea086a220c28a387a509588926554
  listVal1 :: [Interpreter.Value]
  {- Strictness: x -}
8f5de9578a765ea5d6b9931a53bab3b9
  numVal :: Interpreter.Value -> GHC.Types.Double
  RecSel Left Interpreter.Value
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Interpreter.Value) ->
                 case ds of wild {
                   DEFAULT -> Interpreter.numVal1 Interpreter.NumVal ds1 -> ds1 }) -}
d83b6ea919f8445cf37259df2ced3640
  numVal1 :: GHC.Types.Double
  {- Strictness: x -}
c8bdc8683f89e5d30bd64d832553eaf1
  vecLen :: Interpreter.Value -> GHC.Types.Int
  RecSel Left Interpreter.Value
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Interpreter.Value) ->
                 case ds of wild {
                   DEFAULT -> Interpreter.vecLen1
                   Interpreter.VectorVal ds1 ds2 -> ds2 }) -}
c321bfb33bb1f72f9149e30785271eea
  vecLen1 :: GHC.Types.Int
  {- Strictness: x -}
c27329b2892ade9dfa7cbaa8a44c66e9
  vecVal :: Interpreter.Value -> Data.Vector.Vector Interpreter.Value
  RecSel Left Interpreter.Value
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Interpreter.Value) ->
                 case ds of wild {
                   DEFAULT -> Interpreter.vecVal1
                   Interpreter.VectorVal ds1 ds2 -> ds1 }) -}
ffe10171e24184da428f17e0f30a6d59
  vecVal1 :: Data.Vector.Vector Interpreter.Value
  {- Strictness: x -}
instance GHC.Show.Show [Interpreter.Value]
  = Interpreter.$fShowValue
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

