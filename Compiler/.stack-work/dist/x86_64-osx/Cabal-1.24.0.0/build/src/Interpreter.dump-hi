
==================== FINAL INTERFACE ====================
2017-01-15 02:16:50.3374 UTC

interface Compiler-0.1.0.0-57coiQcmnJXARK4xYqZ5Rd:Interpreter 8001
  interface hash: 7d6e13ff8139dba734419a1d540d2c22
  ABI hash: 2017a2b0cf73cf6a36a89828d70c41dd
  export-list hash: 23cb7ab98af56ee8dae95c05c887ae4f
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: db082111cc32dd58ed548dcc273abe68
  sig of: Nothing
  used TH splices: False
  where
exports:
  Interpreter.eval
  Interpreter.getBool
  Interpreter.getExpr
  Interpreter.getList
  Interpreter.getNum
  Interpreter.interpreter
  Interpreter.Env
  Interpreter.Value{Interpreter.BoolVal Interpreter.CharVal Interpreter.ListVal Interpreter.NumVal Interpreter.VectorVal boolVal charVal listVal numVal vecLen vecVal}
module dependencies: Grammar
package dependencies: array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43
                      base-4.9.0.0 binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-Ctl752zbguF6QanxurLOm2
                      integer-gmp-1.0.0.1
                      integer-logarithms-1@integer-logarithms-1-E6LvTbkhTkGIa6wPB3rtJw
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      scientific-0.3.4.10@scientific-0.3.4.10-2Y658Wts4fDGgAkWhKOJwC
                      text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs
                      transformers-0.5.2.0@transformers-0.5.2.0
                      vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43:Data.Attoparsec.Text.Internal
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-Ctl752zbguF6QanxurLOm2:Data.Hashable.Generic
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Fusion.Bundle
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43:Data.Attoparsec.Internal.Types
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Functor.Identity base-4.9.0.0:Data.List.NonEmpty
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Semigroup
                         base-4.9.0.0:Data.Type.Equality base-4.9.0.0:Data.Version
                         base-4.9.0.0:Data.Void base-4.9.0.0:GHC.Exts
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text
                         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Lazy
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector
import  -/  Grammar 0e49269890a957871754979fc1cf94a7
  exports: 5a094fe8ecb7bd19ccbd179c56554a95
  Add 38b3c83707acfecda9cbc6924ebf67fc
  And 156422e1a089255131ecb070bd133709
  Assign 77fb038b2b41456029741afc130adde8
  BExp 91e31d55bae37d3765d68f74bcb93d70
  BVar 91d59379b3ab3247db630db76ea742f1
  BoolExpr 916f14c0d0e4787bb81877d92017786a
  Car 125222f7d16360ba2681cf409a8ed81e
  Cdr b0c722752bb1226256db9fce3038cb81
  CharLit 77f79bfbf25ecdbadeabeaac51cc66ae
  Cons 2230ba11749f7a317c5343eaac8abf3a
  Cycle c972101dc1d866874033d4e92d6cd539
  Div 3a79c7dcf305617768c8723ac3dc449b
  E 02fdb3084092a345575bf624a3f68929
  EVar 4bee3979415ff3ac17732e109c259710
  Exp 46c6a3cb406f57d5fd85c210b6e3d093
  Expr 916f14c0d0e4787bb81877d92017786a
  FalseLit b189796f629d14ed3ef4567617cf5f78
  G 01c581bcc12b25773200316c5a057616
  GE 057d12ef1f9618aa625a2870f5eb5bcd
  If ea8bcadd9b5e4310f68084221ef92bb4
  L 51908d6978b753b7d9bf8eed535ccd82
  LE f6167a3abd06653208a76c890c545737
  LExp 8efd4499e60d2b320d2e8fb12f0dc92c
  LVar 478ad56636e1f32fc0bb1cc99e7aa401
  ListExpr 916f14c0d0e4787bb81877d92017786a
  Mul f9133dc7bc88ca2593989ab9d690f92f
  NExp ad8fdbe97161412762d2ce40784d05e9
  NVar c103b90c80a00de799221fdf6f2ecf91
  New_vec 55f9328748df227ca1822948a8297fc2
  Nil 4cca6176dc56bc79b617b84624ecc51b
  Not 48ae145b482f55c348fe385c61b79bd9
  NumExpr 916f14c0d0e4787bb81877d92017786a
  Number 5f59d2443e8595ac827d6ad7b3561c84
  One 9430388d72ea9c0ae1c981f133e45c44
  Or 7c673e9004d9f3deb469ecae6660228a
  Set_vec b5301e1e4078631bc74b620f4d326d09
  Skip a72dd419f53156e56a02cf4dcabb38ae
  Stmt 498941a077b90556297a5f3954be9f70
  Stmt_cycle 20ec3c4650c77315863a021d0f78333e
  StringLit 7591db41b72703450233a6a4c40379d8
  Sub 6a224b0292cf8ce49cfbdb0f8a0db9aa
  TrueLit b5229c6abf3bd50e0bba4963104e417c
  TypeBool 3473da46b6c7c4c3c303bb94c7b0bf7c
  TypeList 149e47331c78a1d5e4721cd4b6b7aed5
  TypeNum 4653b61dcb1e42e24b95c2d8ab381166
  TypeUnknown dd833c95391913e9df58d75288b023a4
  TypeVector c46567ff45fd48bfef0190425e9b3dfa
  While 0a690d30f4a938ffc8ee5595a4b3b5ec
  parse 72a0f204bbaffec576aa075481b3eeef
import  -/  base-4.9.0.0:Data.Either bd9f099b82d4ed2d98c56d7144ac6957
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Real 08bf4acb5f2508f89d6fbcd57fe232e9
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.IO ad985d7a3fc986e9b9c610fb344d9106
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 8f3eaf1368a7ea27857993e3febae6a3
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base 8d095ad71634b5551ba5dc1307b7f9e5
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text 1e73069de2859bae8530c14767b0c6af
import  -/  vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector c1e986e414fb06d8c78b2ec9a85e2dfc
ab783aa739a318ec67a48f48665d8232
  $fShowValue :: GHC.Show.Show Interpreter.Value
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Interpreter.Value
                  Interpreter.$fShowValue_$cshowsPrec
                  Interpreter.$fShowValue_$cshow
                  Interpreter.$fShowValue_$cshowList -}
ab783aa739a318ec67a48f48665d8232
  $fShowValue1 ::
    Interpreter.Value -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ (x :: Interpreter.Value)
                   (s :: GHC.Base.String)[OneShot] ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (Interpreter.$fShowValue_$cshow x)
                   s) -}
ab783aa739a318ec67a48f48665d8232
  $fShowValue_$cshow :: Interpreter.Value -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
ab783aa739a318ec67a48f48665d8232
  $fShowValue_$cshowList :: [Interpreter.Value] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (ls :: [Interpreter.Value]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Interpreter.Value
                   Interpreter.$fShowValue1
                   ls
                   s) -}
ab783aa739a318ec67a48f48665d8232
  $fShowValue_$cshowsPrec ::
    GHC.Types.Int -> Interpreter.Value -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Interpreter.Value)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (Interpreter.$fShowValue_$cshow x))
                   s) -}
cbfd2780ce8211afd5c26895249aa7b2
  $sinsert_$sgo10 ::
    GHC.Base.String
    -> a1
    -> Data.Map.Base.Map GHC.Base.String a1
    -> Data.Map.Base.Map GHC.Base.String a1
  {- Arity: 3, Strictness: <S,1*U><L,U><S,1*U> -}
d6261796652a20b1435e35c4cb9b8108
  $slookup1 ::
    GHC.Base.String
    -> Data.Map.Base.Map GHC.Base.String a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
0e716e76cfbdd075a60228eabb2ba94a
  $tc'BoolVal :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1573971050723938861##
                   13297152413550033854##
                   Interpreter.$trModule
                   Interpreter.$tc'BoolVal1) -}
95a34309b10e64c11491f44383216e1c
  $tc'BoolVal1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'BoolVal"#) -}
df75be9975bbd095b1c5447a8b82fc3c
  $tc'CharVal :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15827394265121148606##
                   18416197231548288403##
                   Interpreter.$trModule
                   Interpreter.$tc'CharVal1) -}
7b9ef6bd6a03e08fa0a78ac1d31d4965
  $tc'CharVal1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CharVal"#) -}
321c8b75644684c639d98a50c693eeb3
  $tc'ListVal :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10723812421518520142##
                   13442277648153644589##
                   Interpreter.$trModule
                   Interpreter.$tc'ListVal1) -}
0da28795d3a5dd0c2dab9ada94430219
  $tc'ListVal1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ListVal"#) -}
f1946661c941aefd6ea41a50bebfa778
  $tc'NumVal :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4741981046586783911##
                   10406402378806120652##
                   Interpreter.$trModule
                   Interpreter.$tc'NumVal1) -}
6af285a7cb5d79073311b885af627b1f
  $tc'NumVal1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'NumVal"#) -}
ffd5a1586bb5ebb7581d202304ff3452
  $tc'VectorVal :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8159630605655315197##
                   11568208017471327360##
                   Interpreter.$trModule
                   Interpreter.$tc'VectorVal1) -}
0ad244718fa0cd0ec9984b5565b6ecc5
  $tc'VectorVal1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'VectorVal"#) -}
3e9ab0c69fc6c1c038d3f7fd789ef80f
  $tcValue :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10314163069021500700##
                   7655305605986220695##
                   Interpreter.$trModule
                   Interpreter.$tcValue1) -}
8d7bceab639ce19e663f8cc027ed12be
  $tcValue1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Value"#) -}
9b59692164ca4e25522725d59c8f50b9
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Interpreter.$trModule2
                   Interpreter.$trModule1) -}
16ba59282e508bf5cc1720c22355d71d
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Interpreter"#) -}
2afd7b318e725fa63c5f6ca54fb4dc28
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Compiler-0.1.0.0-57coiQcmnJXARK4xYqZ5Rd"#) -}
c086c883cf11c4f8ac1662196a1446da
  $weval ::
    Grammar.Stmt
    -> [GHC.Base.String]
    -> Interpreter.Env
    -> Data.Either.Either
         GHC.Base.String ([GHC.Base.String], Interpreter.Env)
  {- Arity: 3, Strictness: <S,1*U><L,U><L,U>, Inline: [0] -}
73f300f14da41fea9ff035e3de67f989
  type Env = Data.Map.Base.Map GHC.Base.String Interpreter.Value
ab783aa739a318ec67a48f48665d8232
  data Value
    = BoolVal {boolVal :: GHC.Types.Bool}
    | NumVal {numVal :: GHC.Types.Double}
    | CharVal {charVal :: GHC.Types.Char}
    | ListVal {listVal :: [Interpreter.Value]}
    | VectorVal {vecVal :: Data.Vector.Vector Interpreter.Value,
                 vecLen :: GHC.Types.Int}
318848c27bce7d31cec53b5a4f13d357
  boolVal :: Interpreter.Value -> GHC.Types.Bool
  RecSel Left Interpreter.Value
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Interpreter.Value) ->
                 case ds of wild {
                   DEFAULT -> Interpreter.boolVal1
                   Interpreter.BoolVal ds1 -> ds1 }) -}
5eebd6b4df343d31697f519598b8834b
  boolVal1 :: GHC.Types.Bool
  {- Strictness: x -}
a4c66fbed1bfb6486a1ced798bf3f486
  charVal :: Interpreter.Value -> GHC.Types.Char
  RecSel Left Interpreter.Value
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Interpreter.Value) ->
                 case ds of wild {
                   DEFAULT -> Interpreter.charVal1
                   Interpreter.CharVal ds1 -> ds1 }) -}
0f78291717bba1ec6e8a2f4109ed9ed0
  charVal1 :: GHC.Types.Char
  {- Strictness: x -}
2480d5d3e79cb2c9cf1fdb4816965ff7
  eval ::
    Grammar.Stmt
    -> ([GHC.Base.String], Interpreter.Env)
    -> Data.Either.Either
         GHC.Base.String ([GHC.Base.String], Interpreter.Env)
  {- Arity: 2, Strictness: <S,1*U><S,1*U(U,U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Grammar.Stmt)
                   (w1 :: ([GHC.Base.String], Interpreter.Env)) ->
                 case w1 of ww { (,) ww1 ww2 -> Interpreter.$weval w ww1 ww2 }) -}
81142f7f189617e613d3dff853f89a29
  getBool ::
    Grammar.BoolExpr
    -> Interpreter.Env
    -> Data.Either.Either GHC.Base.String Interpreter.Value
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
cc007da7100afce1fc84aa1800f780af
  getExpr ::
    Grammar.Expr
    -> Interpreter.Env
    -> Data.Either.Either GHC.Base.String Interpreter.Value
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
9bfc8100b8d0645c3c0cca5015549c59
  getList ::
    Grammar.ListExpr
    -> Interpreter.Env
    -> Data.Either.Either GHC.Base.String Interpreter.Value
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
177ea06d85ca86dbcb1734773407b406
  getNum ::
    Grammar.NumExpr
    -> Interpreter.Env
    -> Data.Either.Either GHC.Base.String Interpreter.Value
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
0f25d898f977cdb4c9047952ebb66963
  interpreter ::
    [GHC.Base.String]
    -> Interpreter.Env
    -> Data.Either.Either GHC.Base.String [GHC.Base.String]
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
e00417657c7a564f436412763be7dd49
  listVal :: Interpreter.Value -> [Interpreter.Value]
  RecSel Left Interpreter.Value
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Interpreter.Value) ->
                 case ds of wild {
                   DEFAULT -> Interpreter.listVal1
                   Interpreter.ListVal ds1 -> ds1 }) -}
5fc4b7496ce64579dbaf161ef7263c4c
  listVal1 :: [Interpreter.Value]
  {- Strictness: x -}
127ac2aecfaada6b8266166bc7714b1f
  numVal :: Interpreter.Value -> GHC.Types.Double
  RecSel Left Interpreter.Value
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Interpreter.Value) ->
                 case ds of wild {
                   DEFAULT -> Interpreter.numVal1 Interpreter.NumVal ds1 -> ds1 }) -}
e055ce794100779e23912a496f2dcfaf
  numVal1 :: GHC.Types.Double
  {- Strictness: x -}
98f56a6ab328f2cf8259593bacc70210
  vecLen :: Interpreter.Value -> GHC.Types.Int
  RecSel Left Interpreter.Value
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Interpreter.Value) ->
                 case ds of wild {
                   DEFAULT -> Interpreter.vecLen1
                   Interpreter.VectorVal ds1 ds2 -> ds2 }) -}
bcd52084c7cf5a791acbd889a66f9149
  vecLen1 :: GHC.Types.Int
  {- Strictness: x -}
f673e6ae18d7f7f74e0749e795778983
  vecVal :: Interpreter.Value -> Data.Vector.Vector Interpreter.Value
  RecSel Left Interpreter.Value
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Interpreter.Value) ->
                 case ds of wild {
                   DEFAULT -> Interpreter.vecVal1
                   Interpreter.VectorVal ds1 ds2 -> ds1 }) -}
29cc5d2887d2ed798e53f6dee0889a0e
  vecVal1 :: Data.Vector.Vector Interpreter.Value
  {- Strictness: x -}
instance GHC.Show.Show [Interpreter.Value]
  = Interpreter.$fShowValue
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

