
==================== FINAL INTERFACE ====================
2017-01-14 03:51:59.658005 UTC

interface Compiler-0.1.0.0-57coiQcmnJXARK4xYqZ5Rd:Lexical 8001
  interface hash: de9b5b157a336f5d5a17d7c514f036f8
  ABI hash: ad58eb66817460544fc0f66b1abe6359
  export-list hash: 6031e673bb203ba7d49321f533aafb93
  orphan hash: a7140978494091572335b62e7319089d
  flag hash: db082111cc32dd58ed548dcc273abe68
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lexical.addParser
  Lexical.andParser
  Lexical.assignParser
  Lexical.bexpParser
  Lexical.boolExprParser
  Lexical.boolVarParser
  Lexical.carParser
  Lexical.cdrParser
  Lexical.charParser
  Lexical.conParser
  Lexical.divParser
  Lexical.equalParser
  Lexical.exprParser
  Lexical.exprVarParser
  Lexical.falseParser
  Lexical.floatParser
  Lexical.geParser
  Lexical.greatParser
  Lexical.ifParser
  Lexical.keywords
  Lexical.leParser
  Lexical.lessParser
  Lexical.lexeme
  Lexical.lexpParser
  Lexical.listExprParser
  Lexical.listToStmt_list
  Lexical.listVarParser
  Lexical.mulParser
  Lexical.new_vecParser
  Lexical.nexpParser
  Lexical.notParser
  Lexical.nullParser
  Lexical.numExprParser
  Lexical.numVarParser
  Lexical.orParser
  Lexical.set_vecParser
  Lexical.skipParser
  Lexical.stmtExprParser
  Lexical.stmtListParser
  Lexical.stmtParser
  Lexical.stmt_listParser
  Lexical.stringParser
  Lexical.subParser
  Lexical.trueParser
  Lexical.varParser
  Lexical.vectorParser
  Lexical.whileParser
  Lexical.BoolExpr{Lexical.And Lexical.BVar Lexical.FalseLit Lexical.Not Lexical.Or Lexical.TrueLit}
  Lexical.Expr{Lexical.BExp Lexical.EVar Lexical.LExp Lexical.NExp}
  Lexical.ListExpr{Lexical.Car Lexical.Cdr Lexical.CharLit Lexical.Cons Lexical.LVar Lexical.Nil Lexical.StringLit}
  Lexical.NumExpr{Lexical.Add Lexical.Div Lexical.E Lexical.G Lexical.GE Lexical.L Lexical.LE Lexical.Mul Lexical.NVar Lexical.Number Lexical.Sub}
  Lexical.Stmt{Lexical.Assign Lexical.Exp Lexical.If Lexical.New_vec Lexical.Set_vec Lexical.Skip Lexical.Stmt_cycle Lexical.While}
  Lexical.Stmt_list{Lexical.Cycle Lexical.One}
  Lexical.Var{Lexical.TypeBool Lexical.TypeList Lexical.TypeNum Lexical.TypeUnknown Lexical.TypeVector}
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43
                      base-4.9.0.0 binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-Ctl752zbguF6QanxurLOm2
                      integer-gmp-1.0.0.1
                      integer-logarithms-1@integer-logarithms-1-E6LvTbkhTkGIa6wPB3rtJw
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      scientific-0.3.4.10@scientific-0.3.4.10-2Y658Wts4fDGgAkWhKOJwC
                      text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs
                      transformers-0.5.2.0@transformers-0.5.2.0
                      vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43:Data.Attoparsec.Text.Internal
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-Ctl752zbguF6QanxurLOm2:Data.Hashable.Generic
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Fusion.Bundle
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43:Data.Attoparsec.Internal.Types
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Functor.Identity base-4.9.0.0:Data.List.NonEmpty
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Semigroup
                         base-4.9.0.0:Data.Type.Equality base-4.9.0.0:Data.Version
                         base-4.9.0.0:Data.Void base-4.9.0.0:GHC.Exts
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text
                         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Lazy
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector
import  -/  attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43:Data.Attoparsec.Combinator 1a39284ebbaf658e3583ff14a7addafc
import  -/  attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43:Data.Attoparsec.Text d3cff0ad187398020adcebc8a0709b72
import  -/  attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43:Data.Attoparsec.Text.Internal fd0d5edacc9a9428b223517c76c5dd06
import  -/  base-4.9.0.0:Control.Applicative 7728b33d6969dce59e89474349eb1397
import  -/  base-4.9.0.0:Data.Functor 6fc476505db88d678632a4a838125f13
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Set 3ed2324fd1e757464a8ac2b636a64e5a
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base a8d226a906391942317c3409714bd02d
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text 1e73069de2859bae8530c14767b0c6af
import  -/  text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Internal bfb0ec5fde448272375be97e2314e47b
import  -/  text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Show f1f9b8deb132e3cc6c9369ebd9da68d2
4734be74f3e74f5eed8b8b43c63b8e76
  $fEqVar :: GHC.Classes.Eq Lexical.Var
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lexical.Var Lexical.$fEqVar_$c== Lexical.$fEqVar_$c/= -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fEqVar_$c/= :: Lexical.Var -> Lexical.Var -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Lexical.Var) (y :: Lexical.Var) ->
                 GHC.Classes.not (Lexical.$fEqVar_$c== x y)) -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fEqVar_$c== :: Lexical.Var -> Lexical.Var -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lexical.Var) (b :: Lexical.Var) ->
                 GHC.Base.eqString
                   (Lexical.$fEqVar_$cshow a)
                   (Lexical.$fEqVar_$cshow b)) -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fEqVar_$cshow :: Lexical.Var -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fShowBoolExpr :: GHC.Show.Show Lexical.BoolExpr
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lexical.BoolExpr
                  Lexical.$fShowBoolExpr_$cshowsPrec
                  Lexical.$fShowBoolExpr_$cshow
                  Lexical.$fShowBoolExpr_$cshowList -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fShowBoolExpr1 :: Lexical.BoolExpr -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Lexical.$fShowBoolExpr_$cshowsPrec
                   Lexical.$fShowBoolExpr2) -}
678b3e7db374dfc1924ffafbea665594
  $fShowBoolExpr2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fShowBoolExpr_$cshow :: Lexical.BoolExpr -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lexical.BoolExpr) ->
                 Lexical.$fShowBoolExpr_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fShowBoolExpr_$cshowList :: [Lexical.BoolExpr] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lexical.BoolExpr
                   Lexical.$fShowBoolExpr1) -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fShowBoolExpr_$cshowsPrec ::
    GHC.Types.Int -> Lexical.BoolExpr -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fShowExpr :: GHC.Show.Show Lexical.Expr
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lexical.Expr
                  Lexical.$fShowExpr_$cshowsPrec1
                  Lexical.$fShowExpr_$cshow
                  Lexical.$fShowExpr_$cshowList -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fShowExpr1 :: Lexical.Expr -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Lexical.Expr) -> Lexical.$w$cshowsPrec 0# w) -}
009c63d9d9b0cd8932c37db3802cb421
  $fShowExpr2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LExp "#) -}
5dbd229bd837f7b729bb2220098ca4ba
  $fShowExpr3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NExp "#) -}
c5a06aa41844dabc906df86ad593e23a
  $fShowExpr4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 11#) -}
ce78b27b32e828ebcda44b871057bad9
  $fShowExpr5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "BExp "#) -}
7fe5f752ee68a0ec510fa397c2d4e9e5
  $fShowExpr6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "EVar "#) -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fShowExpr_$cshow :: Lexical.Expr -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Lexical.Expr) ->
                 case x of wild {
                   Lexical.EVar b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Lexical.$fShowExpr6
                        (GHC.Base.++
                           @ GHC.Types.Char
                           (Lexical.$fEqVar_$cshow b1)
                           (GHC.Types.[] @ GHC.Types.Char))
                   Lexical.BExp b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Lexical.$fShowExpr5
                        (Lexical.$fShowBoolExpr_$cshowsPrec
                           Lexical.$fShowExpr4
                           b1
                           (GHC.Types.[] @ GHC.Types.Char))
                   Lexical.NExp b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Lexical.$fShowExpr3
                        (Lexical.$w$cshowsPrec1 11# b1 (GHC.Types.[] @ GHC.Types.Char))
                   Lexical.LExp b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Lexical.$fShowExpr2
                        (Lexical.$fShowExpr_$cshowsPrec
                           Lexical.$fShowExpr4
                           b1
                           (GHC.Types.[] @ GHC.Types.Char)) }) -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fShowExpr_$cshowList :: [Lexical.Expr] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lexical.Expr
                   Lexical.$fShowExpr1) -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fShowExpr_$cshowsPrec ::
    GHC.Types.Int -> Lexical.ListExpr -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fShowExpr_$cshowsPrec1 ::
    GHC.Types.Int -> Lexical.Expr -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lexical.Expr) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Lexical.$w$cshowsPrec ww1 w1 }) -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fShowListExpr :: GHC.Show.Show Lexical.ListExpr
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lexical.ListExpr
                  Lexical.$fShowExpr_$cshowsPrec
                  Lexical.$fShowListExpr_$cshow
                  Lexical.$fShowListExpr_$cshowList -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fShowListExpr1 :: Lexical.ListExpr -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Lexical.$fShowExpr_$cshowsPrec
                   Lexical.$fShowBoolExpr2) -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fShowListExpr_$cshow :: Lexical.ListExpr -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lexical.ListExpr) ->
                 Lexical.$fShowExpr_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fShowListExpr_$cshowList :: [Lexical.ListExpr] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lexical.ListExpr
                   Lexical.$fShowListExpr1) -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fShowNumExpr :: GHC.Show.Show Lexical.NumExpr
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lexical.NumExpr
                  Lexical.$fShowNumExpr_$cshowsPrec
                  Lexical.$fShowNumExpr_$cshow
                  Lexical.$fShowNumExpr_$cshowList -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fShowNumExpr1 :: Lexical.NumExpr -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Lexical.NumExpr) ->
                 Lexical.$w$cshowsPrec1 0# w) -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fShowNumExpr_$cshow :: Lexical.NumExpr -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lexical.NumExpr) ->
                 Lexical.$fShowNumExpr_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fShowNumExpr_$cshowList :: [Lexical.NumExpr] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lexical.NumExpr
                   Lexical.$fShowNumExpr1) -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fShowNumExpr_$cshowsPrec ::
    GHC.Types.Int -> Lexical.NumExpr -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lexical.NumExpr) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Lexical.$w$cshowsPrec1 ww1 w1 }) -}
33346d2223bbd5ee71d81807aa14585c
  $fShowStmt :: GHC.Show.Show Lexical.Stmt
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lexical.Stmt
                  Lexical.$fShowStmt_$cshowsPrec
                  Lexical.$fShowStmt_$cshow
                  Lexical.$fShowStmt_$cshowList -}
33346d2223bbd5ee71d81807aa14585c
  $fShowStmt1 :: Lexical.Stmt -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (Lexical.$fShowStmt_$cshowsPrec
                   Lexical.$fShowBoolExpr2) -}
33346d2223bbd5ee71d81807aa14585c
  $fShowStmt_$cshow :: Lexical.Stmt -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lexical.Stmt) ->
                 Lexical.$fShowStmt_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
33346d2223bbd5ee71d81807aa14585c
  $fShowStmt_$cshowList :: [Lexical.Stmt] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lexical.Stmt
                   Lexical.$fShowStmt1) -}
33346d2223bbd5ee71d81807aa14585c
  $fShowStmt_$cshowsPrec ::
    GHC.Types.Int -> Lexical.Stmt -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U> -}
33346d2223bbd5ee71d81807aa14585c
  $fShowStmt_list :: GHC.Show.Show Lexical.Stmt_list
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lexical.Stmt_list
                  Lexical.$fShowStmt_list_$cshowsPrec
                  Lexical.$fShowStmt_list_$cshow
                  Lexical.$fShowStmt_list_$cshowList -}
33346d2223bbd5ee71d81807aa14585c
  $fShowStmt_list1 :: Lexical.Stmt_list -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Lexical.Stmt_list) ->
                 Lexical.$w$cshowsPrec2 0# w) -}
33346d2223bbd5ee71d81807aa14585c
  $fShowStmt_list_$cshow :: Lexical.Stmt_list -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lexical.Stmt_list) ->
                 Lexical.$fShowStmt_list_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
33346d2223bbd5ee71d81807aa14585c
  $fShowStmt_list_$cshowList :: [Lexical.Stmt_list] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lexical.Stmt_list
                   Lexical.$fShowStmt_list1) -}
33346d2223bbd5ee71d81807aa14585c
  $fShowStmt_list_$cshowsPrec ::
    GHC.Types.Int -> Lexical.Stmt_list -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lexical.Stmt_list) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Lexical.$w$cshowsPrec2 ww1 w1 }) -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fShowVar :: GHC.Show.Show Lexical.Var
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lexical.Var
                  Lexical.$fShowVar_$cshowsPrec
                  Lexical.$fEqVar_$cshow
                  Lexical.$fShowVar_$cshowList -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fShowVar1 :: Lexical.Var -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ (x :: Lexical.Var) (s :: GHC.Base.String)[OneShot] ->
                 GHC.Base.++ @ GHC.Types.Char (Lexical.$fEqVar_$cshow x) s) -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fShowVar_$cshowList :: [Lexical.Var] -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (ls :: [Lexical.Var]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Lexical.Var Lexical.$fShowVar1 ls s) -}
4734be74f3e74f5eed8b8b43c63b8e76
  $fShowVar_$cshowsPrec ::
    GHC.Types.Int -> Lexical.Var -> GHC.Show.ShowS
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Lexical.Var)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c n (Lexical.$fEqVar_$cshow x))
                   s) -}
ea60b15bd4f1eae468b9a4d5c66dc53a
  $sfromList ::
    [GHC.Base.String] -> Data.Set.Base.Set GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [GHC.Base.String]) ->
                 case ds of wild {
                   [] -> Data.Set.Base.Tip @ GHC.Base.String
                   : x ds1
                   -> case ds1 of wild1 {
                        []
                        -> case x of dt { DEFAULT ->
                           Data.Set.Base.Bin
                             @ GHC.Base.String
                             1#
                             dt
                             (Data.Set.Base.Tip @ GHC.Base.String)
                             (Data.Set.Base.Tip @ GHC.Base.String) }
                        : ipv ipv1
                        -> case GHC.Classes.$fOrd[]_$s$ccompare1 x ipv of wild2 {
                             DEFAULT
                             -> case x of dt { DEFAULT ->
                                Lexical.$sfromList_go5
                                  (Data.Set.Base.Bin
                                     @ GHC.Base.String
                                     1#
                                     dt
                                     (Data.Set.Base.Tip @ GHC.Base.String)
                                     (Data.Set.Base.Tip @ GHC.Base.String))
                                  wild1 }
                             GHC.Types.LT
                             -> case x of dt { DEFAULT ->
                                Lexical.$wgo5
                                  1#
                                  (Data.Set.Base.Bin
                                     @ GHC.Base.String
                                     1#
                                     dt
                                     (Data.Set.Base.Tip @ GHC.Base.String)
                                     (Data.Set.Base.Tip @ GHC.Base.String))
                                  wild1 } } } }) -}
5f30d2be267771a7550a092072ccff8f
  $sfromList_go5 ::
    Data.Set.Base.Set GHC.Base.String
    -> [GHC.Base.String] -> Data.Set.Base.Set GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
e5d4b7e6435ffca660e2788d17e9a0df
  $sinsert_$sgo5 ::
    GHC.Base.String
    -> Data.Set.Base.Set GHC.Base.String
    -> Data.Set.Base.Set GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
c2d60fb08df51ce22570c9d44ac9e75a
  $smember_go5 ::
    GHC.Base.String
    -> Data.Set.Base.Set GHC.Base.String -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
56a1075f0b32a53c97c625c386a811e5
  $tc'Add :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14728109412659142004##
                   15064757462905557894##
                   Lexical.$trModule
                   Lexical.$tc'Add1) -}
ef8f716876bc34dd17e3477d7182ae1b
  $tc'Add1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Add"#) -}
25058a82b60c2b75e41bfdc97c52ea37
  $tc'And :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1777249295911905168##
                   1518742761707874117##
                   Lexical.$trModule
                   Lexical.$tc'And1) -}
d250c0f964aa9c423224abeac839eb75
  $tc'And1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'And"#) -}
9ce0f1c9f0b1b2589c0ea5e488f84a3a
  $tc'Assign :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16974500991709883631##
                   13005800457462489517##
                   Lexical.$trModule
                   Lexical.$tc'Assign1) -}
58baa750df459e817b9002d856c2f81e
  $tc'Assign1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Assign"#) -}
8acd1d6826d36a3834002c38a7548516
  $tc'BExp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14650938192889687553##
                   575176493457227672##
                   Lexical.$trModule
                   Lexical.$tc'BExp1) -}
113a40163039cffb9000c3dfe1c28883
  $tc'BExp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'BExp"#) -}
c9a385564422de06ce5c13757c912f5b
  $tc'BVar :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7813814712505074116##
                   4656259821838398553##
                   Lexical.$trModule
                   Lexical.$tc'BVar1) -}
f7eba83c7cfecd5a37cc822195dba850
  $tc'BVar1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'BVar"#) -}
2797a7eace466533646bd195650986f7
  $tc'Car :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2467096367601194062##
                   5936472619564469359##
                   Lexical.$trModule
                   Lexical.$tc'Car1) -}
42f7ad8487f96db69964c64099096865
  $tc'Car1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Car"#) -}
9d1af5ad88b94dfb4797b3315c981397
  $tc'Cdr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3129709403321666635##
                   7166809361616049286##
                   Lexical.$trModule
                   Lexical.$tc'Cdr1) -}
5fac716ff1583d75f42525353cd5b27c
  $tc'Cdr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Cdr"#) -}
e226e3fc0fc0c04500fca397e12e86d0
  $tc'CharLit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16866024397839321816##
                   13837967283755899649##
                   Lexical.$trModule
                   Lexical.$tc'CharLit1) -}
86c6f77b346d93a9021fd919386dea8b
  $tc'CharLit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CharLit"#) -}
7ecadcbb5a5c26b6acddf406252b0773
  $tc'Cons :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4262793817873468587##
                   514893697839078220##
                   Lexical.$trModule
                   Lexical.$tc'Cons1) -}
80ce389ed7e117bdd890a086d61ccc33
  $tc'Cons1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Cons"#) -}
3ab8d5ed5c7d50b8f18946654c1cec98
  $tc'Cycle :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18384723707867670992##
                   7096610494935190265##
                   Lexical.$trModule
                   Lexical.$tc'Cycle1) -}
07a4a737377c2ad91fc832072ccce478
  $tc'Cycle1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Cycle"#) -}
4b0b764918f416874de93eaa915f8b91
  $tc'Div :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15095390748468986577##
                   13906827478279740705##
                   Lexical.$trModule
                   Lexical.$tc'Div1) -}
fa89610e081ac01a733dc3eecb5c19fc
  $tc'Div1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Div"#) -}
41ddf69cae5f819635e66aa9e2af4338
  $tc'E :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14261180669004559871##
                   15154128908560446169##
                   Lexical.$trModule
                   Lexical.$tc'E1) -}
37e1eef32ee50a1f532dc5163fd9c0ac
  $tc'E1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'E"#) -}
15463d732b862887d1bf497b44578f08
  $tc'EVar :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1020614846777937653##
                   2308868984253406868##
                   Lexical.$trModule
                   Lexical.$tc'EVar1) -}
81067e0670e086a6651c05ee625a5f05
  $tc'EVar1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'EVar"#) -}
ec547413cccfcdf9087ade3a09cb5cfd
  $tc'Exp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3297603917503425959##
                   458923732429044958##
                   Lexical.$trModule
                   Lexical.$tc'Exp1) -}
8d9f17a56d7d1255a82e726241f948f1
  $tc'Exp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Exp"#) -}
6faff372c2364ff2dc938e76252472ae
  $tc'FalseLit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   483746503121834388##
                   1906157852809883557##
                   Lexical.$trModule
                   Lexical.$tc'FalseLit1) -}
13b94f4fc5e6dabf25bb23e5b8befabb
  $tc'FalseLit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'FalseLit"#) -}
de42108919f5779bf21504df2ef8a037
  $tc'G :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1984638464177971515##
                   5793591390644207551##
                   Lexical.$trModule
                   Lexical.$tc'G1) -}
108d1a1a17add61405bfeedff649d730
  $tc'G1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'G"#) -}
5713df6fdc5d1a9b20cb845adf163a55
  $tc'GE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   465935319754908859##
                   6677887889265986107##
                   Lexical.$trModule
                   Lexical.$tc'GE1) -}
ce5fa688894cf1436b2053f0d29227b1
  $tc'GE1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GE"#) -}
45aaee8feeebe6ec53efd7db3f783e2f
  $tc'If :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11309859226611947628##
                   8866927334741580993##
                   Lexical.$trModule
                   Lexical.$tc'If1) -}
aeb25cf93b1e9aedd357d8ec2e3e51a4
  $tc'If1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'If"#) -}
30fd6f137f892b37350fd32b2f649408
  $tc'L :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4611659371903022057##
                   15658285915974316567##
                   Lexical.$trModule
                   Lexical.$tc'L1) -}
a7f7cc508fb7a8400deb112658e541ca
  $tc'L1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'L"#) -}
ae8cda893d95bf3bafaf89fcc842b018
  $tc'LE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1000465770248716585##
                   2006219441648800440##
                   Lexical.$trModule
                   Lexical.$tc'LE1) -}
d8cdf2201c382fdbe34993e2f7652440
  $tc'LE1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'LE"#) -}
f5710665bbc42ece4b529079daf06ab5
  $tc'LExp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11800156834788852651##
                   6553848721454273033##
                   Lexical.$trModule
                   Lexical.$tc'LExp1) -}
ce128d91afc1cd480ec39b1ed9f55e39
  $tc'LExp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'LExp"#) -}
6982b18bb20e7a93ad0d68a8127ac6c5
  $tc'LVar :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   473913075892250478##
                   11351747018302597967##
                   Lexical.$trModule
                   Lexical.$tc'LVar1) -}
4187eb40e4a670f97e6019d5bb518b8e
  $tc'LVar1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'LVar"#) -}
03a67062f82dafba3bc68216b17bb1a2
  $tc'Mul :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15412472345365336144##
                   2862502453374022963##
                   Lexical.$trModule
                   Lexical.$tc'Mul1) -}
250dcfbf6774e6c920287fda3650449f
  $tc'Mul1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Mul"#) -}
b4fb3dff703c10b4a4e864eba1e98a48
  $tc'NExp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1121783809748122347##
                   3954868751431681952##
                   Lexical.$trModule
                   Lexical.$tc'NExp1) -}
2608e529830676db05f23e9d5b9960fb
  $tc'NExp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'NExp"#) -}
c333bf7c1b1fb517a7a281eb4b507af8
  $tc'NVar :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3901363889147009557##
                   11723408227276140130##
                   Lexical.$trModule
                   Lexical.$tc'NVar1) -}
f7320bddc07148912ec2141e6236ae16
  $tc'NVar1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'NVar"#) -}
edc64b8cca29a0f11a1b20b8c6072d6e
  $tc'New_vec :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   703962436851462481##
                   9801384119805204209##
                   Lexical.$trModule
                   Lexical.$tc'New_vec1) -}
7546fe2610704f4876d1026360a406bb
  $tc'New_vec1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'New_vec"#) -}
f9548ac321577f781d78068da1ade687
  $tc'Nil :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2106103412293806157##
                   18367545042484177175##
                   Lexical.$trModule
                   Lexical.$tc'Nil1) -}
b8e1d41409bdb7455ee77f452b7794fd
  $tc'Nil1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Nil"#) -}
a392a925eb1c50f9d10782dce9038962
  $tc'Not :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13093268279970766825##
                   14408998027715772191##
                   Lexical.$trModule
                   Lexical.$tc'Not1) -}
6ec3006db285ba3c0380a090957e47ee
  $tc'Not1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Not"#) -}
d582a94aa444c505401cec3be24aedc6
  $tc'Number :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10342933420698034073##
                   13362757345467613412##
                   Lexical.$trModule
                   Lexical.$tc'Number1) -}
783c3eb5dd9f2730a575b393245e01d0
  $tc'Number1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Number"#) -}
08c1275b2fddd9736b5f62ca0880b2b4
  $tc'One :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6049458222905359623##
                   15988673751375362784##
                   Lexical.$trModule
                   Lexical.$tc'One1) -}
ef482a5b65e1c96472a0eed2552e7a7a
  $tc'One1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'One"#) -}
2d78164b487a6ee390d825824ec36c80
  $tc'Or :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6207217802793618599##
                   14072433722781980953##
                   Lexical.$trModule
                   Lexical.$tc'Or1) -}
56b1f0bba2b656f32c28bf9a0cc3c8b9
  $tc'Or1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Or"#) -}
549bc43d607d9058d8fbf077e58a6e3c
  $tc'Set_vec :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13088493845291727389##
                   4239774947118832598##
                   Lexical.$trModule
                   Lexical.$tc'Set_vec1) -}
5b750b1533c368551c069852801147cd
  $tc'Set_vec1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Set_vec"#) -}
6a1e1735001a36cf09019648486d50c4
  $tc'Skip :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6818023081958196166##
                   13144668771107565645##
                   Lexical.$trModule
                   Lexical.$tc'Skip1) -}
4bf06d8e5518b32e69670196c9288135
  $tc'Skip1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Skip"#) -}
ae48f812d372edc602be07890ed5f176
  $tc'Stmt_cycle :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10871976020071769952##
                   9782305018878399929##
                   Lexical.$trModule
                   Lexical.$tc'Stmt_cycle1) -}
e0e458e3de5356dfb5e218586c78fe08
  $tc'Stmt_cycle1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Stmt_cycle"#) -}
bcf85ad9bdc5dc642dcccc5ed58dc80d
  $tc'StringLit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6949670183539443850##
                   5645420184502565292##
                   Lexical.$trModule
                   Lexical.$tc'StringLit1) -}
74c86fadfb1e678413ff7cf55dc3fdc7
  $tc'StringLit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'StringLit"#) -}
d3da7aa888d606f19118e6bf99281ffb
  $tc'Sub :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17534188508463714919##
                   15491754685757240277##
                   Lexical.$trModule
                   Lexical.$tc'Sub1) -}
a868f9bfe36c7acb01c8a27f8451b22f
  $tc'Sub1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Sub"#) -}
5ef3bf07ee8da32751ddc2552ffb56b1
  $tc'TrueLit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17689218610952154497##
                   2124790082085282332##
                   Lexical.$trModule
                   Lexical.$tc'TrueLit1) -}
de218f20e4357b80a5f7c13d4b262dc7
  $tc'TrueLit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TrueLit"#) -}
0b5eb5ff5ac2083af2a5c3a252088159
  $tc'TypeBool :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1996078809936091819##
                   12010188345765131133##
                   Lexical.$trModule
                   Lexical.$tc'TypeBool1) -}
d36e7c93f83f8b9d591e2ae4c948379c
  $tc'TypeBool1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TypeBool"#) -}
b36a784ecdf0808a48ea117d11b6ee3e
  $tc'TypeList :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8264124618082724118##
                   2767462526066824528##
                   Lexical.$trModule
                   Lexical.$tc'TypeList1) -}
0fc836e725ca0dbc014d5325055f5ee7
  $tc'TypeList1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TypeList"#) -}
d9bd27f74acbb681356278592ff3347a
  $tc'TypeNum :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10109263656493007526##
                   16934490480621358096##
                   Lexical.$trModule
                   Lexical.$tc'TypeNum1) -}
89209f0c844c31c1f068f17771be67de
  $tc'TypeNum1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TypeNum"#) -}
a80f05738b63b560967c82b01355e7b7
  $tc'TypeUnknown :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1069420502204502008##
                   8112451042404775862##
                   Lexical.$trModule
                   Lexical.$tc'TypeUnknown1) -}
914b68d695c9bb98b75416aba7b88eb9
  $tc'TypeUnknown1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TypeUnknown"#) -}
7b7edae1d6fc48e156969ff56caf1e5a
  $tc'TypeVector :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18109132775677899117##
                   14742045373601415050##
                   Lexical.$trModule
                   Lexical.$tc'TypeVector1) -}
0e4b4e60a641d26abd2a05965fa8acac
  $tc'TypeVector1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TypeVector"#) -}
29bfb7d725f689e7119910a3d005a888
  $tc'While :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17440877848081871191##
                   18315148379949645079##
                   Lexical.$trModule
                   Lexical.$tc'While1) -}
62de6197be2b965529047a4a12f1dae6
  $tc'While1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'While"#) -}
613a635cb595a55370f0947195268fe4
  $tcBoolExpr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14702033034934612652##
                   4801220762278395827##
                   Lexical.$trModule
                   Lexical.$tcBoolExpr1) -}
40293a7ed769d2e76415e21e3b546cc5
  $tcBoolExpr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "BoolExpr"#) -}
43347bf5b0981488b57e6268e2725c6e
  $tcExpr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2699148126276935299##
                   17207944219226996530##
                   Lexical.$trModule
                   Lexical.$tcExpr1) -}
19de1e74ebfdc073566932351c4d9216
  $tcExpr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Expr"#) -}
399212b182c66825031b45921a5fbb2e
  $tcListExpr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4620874342624212987##
                   15416852636514671285##
                   Lexical.$trModule
                   Lexical.$tcListExpr1) -}
697531766217f18d0544410c4ffe7935
  $tcListExpr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "ListExpr"#) -}
cf37ecc51798dafb1d272f31ec645b35
  $tcNumExpr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2786706489517148979##
                   17661949718894991698##
                   Lexical.$trModule
                   Lexical.$tcNumExpr1) -}
2f21f6e85c46336643a31da7c39dd6fa
  $tcNumExpr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "NumExpr"#) -}
e15944758bf7ad27bffef3e63638cc87
  $tcStmt :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14797791543375660054##
                   12168606170460535549##
                   Lexical.$trModule
                   Lexical.$tcStmt1) -}
5f85465d768f4a09250cbd778c7fd1b5
  $tcStmt1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Stmt"#) -}
35c65c1065e54381252d7f56b55cd951
  $tcStmt_list :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13544515048492694439##
                   1427436471737262323##
                   Lexical.$trModule
                   Lexical.$tcStmt_list1) -}
1968baebd9b8753d0655339f5cab4faa
  $tcStmt_list1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Stmt_list"#) -}
713c2e9c2671aa81e675ec21fa49c853
  $tcVar :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16464646308701208564##
                   2095879651535287945##
                   Lexical.$trModule
                   Lexical.$tcVar1) -}
3080fce711a69f50a369d7822ee30742
  $tcVar1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Var"#) -}
b1178df25990fcaa30ddae3a3f429236
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Lexical.$trModule2
                   Lexical.$trModule1) -}
c19048305a122b2aab57c2bbe1441c38
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Lexical"#) -}
080e0e35d23bea3b6f7e148ef7fc0958
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Compiler-0.1.0.0-57coiQcmnJXARK4xYqZ5Rd"#) -}
4734be74f3e74f5eed8b8b43c63b8e76
  $w$cshowsPrec :: GHC.Prim.Int# -> Lexical.Expr -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) (w :: Lexical.Expr) ->
                 case w of wild {
                   Lexical.EVar b1
                   -> let {
                        lvl51 :: GHC.Base.String = Lexical.$fEqVar_$cshow b1
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Lexical.$fShowExpr6
                             (GHC.Base.++ @ GHC.Types.Char lvl51 x)
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Lexical.$fShowExpr6
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   lvl51
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 x))) }
                   Lexical.BExp b1
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Lexical.$fShowExpr5
                             (Lexical.$fShowBoolExpr_$cshowsPrec Lexical.$fShowExpr4 b1 x)
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Lexical.$fShowExpr5
                                (Lexical.$fShowBoolExpr_$cshowsPrec
                                   Lexical.$fShowExpr4
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 x))) }
                   Lexical.NExp b1
                   -> let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = Lexical.$w$cshowsPrec1 11# b1
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++ @ GHC.Types.Char Lexical.$fShowExpr3 (g x)
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Lexical.$fShowExpr3
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 x))) }
                   Lexical.LExp b1
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Lexical.$fShowExpr2
                             (Lexical.$fShowExpr_$cshowsPrec Lexical.$fShowExpr4 b1 x)
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Lexical.$fShowExpr2
                                (Lexical.$fShowExpr_$cshowsPrec
                                   Lexical.$fShowExpr4
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 x))) } }) -}
4734be74f3e74f5eed8b8b43c63b8e76
  $w$cshowsPrec1 ::
    GHC.Prim.Int# -> Lexical.NumExpr -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
33346d2223bbd5ee71d81807aa14585c
  $w$cshowsPrec2 ::
    GHC.Prim.Int# -> Lexical.Stmt_list -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
24c280499204480f27e6466dd85cb7f0
  $waddParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
8e6051f1c5140c5b8ebfd0b953bc8b3a
  $wandParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
ce173d3de1e7508929f83101a5eb30a5
  $wassignParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
dee8a1ca6049fb6aa56e7bb7666c34a5
  $wbexpParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Expr
                            r) ->
                 Lexical.$wboolExprParser
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)
                      (more' :: Data.Attoparsec.Internal.Types.More)
                      (a1 :: Lexical.BoolExpr) ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    w2
                      t'
                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      (Lexical.BExp a1) })) -}
be6ef79152a524844238bbb91d09fd96
  $wboolExprParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,U>,
     Inline: [0] -}
791e80298574c5eb5dc3eecaa2fad0e4
  $wboolVarParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.BoolExpr
                            r) ->
                 Lexical.$wvarParser
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Lexical.Var)[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    case a1 of wild {
                      DEFAULT
                      -> w1
                           t'
                           nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                           more'
                           (GHC.Types.[] @ GHC.Base.String)
                           Lexical.boolVarParser_msg3
                      Lexical.TypeUnknown var
                      -> w2
                           t'
                           nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                           more'
                           (Lexical.BVar (Lexical.TypeBool var)) } })) -}
633dbb55a26d48dbebc2731d54720de5
  $wcarParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
91db8da12645c15c087816c1c18898cd
  $wcdrParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
b01feefea7c1096abc573e85811c674f
  $wcharParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
a919d279282a605c263cf4c61420c2b2
  $wconParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
d2e543546a5d2b7bcd876e04083971c8
  $wdivParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
221399f57a30b72be3a287a49a4300f3
  $wequalParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
49054eaaf489dcfd6b90180241fdf093
  $wexprParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
74ab1ce22674906e4a17665cb5bf0023
  $wexprVarParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Expr
                            r) ->
                 Lexical.$wvarParser
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Lexical.Var)[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    w2
                      t'
                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      (Lexical.EVar a1) })) -}
d57e673910fceff73a339367ffe3d062
  $wfalseParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
cf3acdbf60eb8584281cff722e7f0405
  $wfloatParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 let {
                   lvl51 :: Data.Attoparsec.Internal.Types.State
                              Data.Text.Internal.Text
                            -> Data.Attoparsec.Internal.Types.Pos
                            -> Data.Attoparsec.Internal.Types.More
                            -> GHC.Types.Double
                            -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
                     {- Arity: 4 -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.Text.Internal.Text)
                       (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                       (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                       (a1 :: GHC.Types.Double)[OneShot] ->
                     case pos'
                            `cast`
                          (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                     w2
                       t'
                       nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                       more'
                       (Lexical.Number a1) }
                 } in
                 Lexical.$wgo2
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: ())[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    Data.Attoparsec.Text.$wdouble @ r t' ipv1 more' w1 lvl51 })) -}
64f75893fba99f925138847f435a3036
  $wgeParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
15235bc045461d203e24eff4450619d8
  $wgo1 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         ()
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 8,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
cd0cc6f0d7151004e5ece26f05316a81
  $wgo2 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         ()
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 8,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
17cc9ebeb9fc01c15ae124903d5d68d0
  $wgo5 ::
    GHC.Prim.Int#
    -> Data.Set.Base.Set GHC.Base.String
    -> [GHC.Base.String]
    -> Data.Set.Base.Set GHC.Base.String
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
533d51a53a74b8eb2e6f77456f2aae07
  $wgreatParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
20a44afc49b1c38e5b7830f56de59a8b
  $wifParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
47708607f2bf985c8cecc1cc43470799
  $wleParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
ee5413fc3e3913c04b6ee60d2c49d246
  $wlessParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
952e93823d29b16ff732ad39ff370d7e
  $wlexeme ::
    Data.Attoparsec.Text.Internal.Parser a
    -> forall r.
       GHC.Prim.ByteArray#
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> Data.Attoparsec.Internal.Types.More
       -> Data.Attoparsec.Internal.Types.Failure
            Data.Text.Internal.Text
            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
            r
       -> Data.Attoparsec.Internal.Types.Success
            Data.Text.Internal.Text
            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
            a
            r
       -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 10,
     Strictness: <L,C(C1(C1(C1(C1(U)))))><S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: Data.Attoparsec.Text.Internal.Parser a)
                   @ r
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (w1 :: Data.Attoparsec.Internal.Types.More)
                   (w2 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w3 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            a
                            r) ->
                 Lexical.$wgo1
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: ())[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    w `cast`
                    (Data.Attoparsec.Internal.Types.N:Parser[0]
                         <Data.Text.Internal.Text>_N <a>_R)
                      @ r
                      t'
                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      w2
                      w3 })) -}
bdcfacdfc64c755e5db2658fb21a40f1
  $wlexpParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Expr
                            r) ->
                 Lexical.$wlistExprParser
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Lexical.ListExpr)[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    w2
                      t'
                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      (Lexical.LExp a1) })) -}
a156793e5e2fd8ddaae572ca8ad290e7
  $wlistExprParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
b9c168ef603c3fddba333360abbb8a9f
  $wlistVarParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.ListExpr
                            r) ->
                 Lexical.$wvarParser
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Lexical.Var)[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    case a1 of wild {
                      DEFAULT
                      -> w1
                           t'
                           nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                           more'
                           (GHC.Types.[] @ GHC.Base.String)
                           Lexical.listVarParser_msg3
                      Lexical.TypeUnknown var
                      -> w2
                           t'
                           nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                           more'
                           (Lexical.LVar (Lexical.TypeList var)) } })) -}
9774954c8f3e58e35ff0c4f1802875de
  $wmulParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
a282c352ae8e80ca4fb8dd0696ef5a11
  $wnew_vecParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
e3b2695d62eef11afc5643d977ce4008
  $wnexpParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Expr
                            r) ->
                 Lexical.$wnumExprParser
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Lexical.NumExpr)[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    w2
                      t'
                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      (Lexical.NExp a1) })) -}
da2635cdc1071ada89994debc24e4657
  $wnotParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
e9a165a69f9226ae4f8feb11dbf6b255
  $wnullParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
98e32886db94d2f7049e46d6bdd9999d
  $wnumExprParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
8d1c9afc7b4d0de3df5f0a370618a9cb
  $wnumVarParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 Lexical.$wvarParser
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Lexical.Var)[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    case a1 of wild {
                      DEFAULT
                      -> w1
                           t'
                           nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                           more'
                           (GHC.Types.[] @ GHC.Base.String)
                           Lexical.numVarParser_msg3
                      Lexical.TypeUnknown var
                      -> w2
                           t'
                           nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                           more'
                           (Lexical.NVar (Lexical.TypeNum var)) } })) -}
8c86ceae962849e9f9853350c1e2ed49
  $worParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
5cddbf05d880c5011f45029139e95d74
  $wset_vecParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
ce6ff7f2840818b9ba0bd6b6f5a9918d
  $wskipParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
f114bce2b46210d6e38308415086ffd0
  $wstmtExprParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Stmt
                            r) ->
                 Lexical.$wexprParser
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Lexical.Expr)[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    w2
                      t'
                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      (Lexical.Exp a1) })) -}
474ebfe5350ea0b31d5e88ea35da3c55
  $wstmtListParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Stmt
                            r) ->
                 Lexical.$wstmt_listParser
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Lexical.Stmt_list)[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    w2
                      t'
                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      (Lexical.Stmt_cycle a1) })) -}
a44a8373043a872d67fa8f6821304f1e
  $wstmtParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
0cd49e73fc8220bc7946398e13c371fe
  $wstmt_listParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt_list
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
e4fe5d44df332b02d8498ed8e5db3d03
  $wstringParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
dd0e72f512e7c37dc05b4c1736509398
  $wsubParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
dbb57c00e1cd57361c43ffc25fc26992
  $wtrueParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
649137ded0ab852fcf93cb45a3ecd86c
  $wvarParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Var
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
2b406d5bc823e3238e671eb594e88069
  $wvectorParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
20f597b28eb3237e4dfdaf212e608675
  $wwhileParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
4734be74f3e74f5eed8b8b43c63b8e76
  data BoolExpr
    = BVar Lexical.Var
    | FalseLit
    | TrueLit
    | Not Lexical.BoolExpr
    | And Lexical.BoolExpr Lexical.BoolExpr
    | Or Lexical.BoolExpr Lexical.BoolExpr
4734be74f3e74f5eed8b8b43c63b8e76
  data Expr
    = EVar Lexical.Var
    | BExp Lexical.BoolExpr
    | NExp Lexical.NumExpr
    | LExp Lexical.ListExpr
4734be74f3e74f5eed8b8b43c63b8e76
  data ListExpr
    = LVar Lexical.Var
    | Nil
    | Cons Lexical.ListExpr Lexical.ListExpr
    | Car Lexical.ListExpr
    | Cdr Lexical.ListExpr
    | CharLit GHC.Types.Char
    | StringLit GHC.Base.String
4734be74f3e74f5eed8b8b43c63b8e76
  data NumExpr
    = NVar Lexical.Var
    | Number GHC.Types.Double
    | Add Lexical.NumExpr Lexical.NumExpr
    | Sub Lexical.NumExpr Lexical.NumExpr
    | Mul Lexical.NumExpr Lexical.NumExpr
    | Div Lexical.NumExpr Lexical.NumExpr
    | E Lexical.NumExpr Lexical.NumExpr
    | L Lexical.NumExpr Lexical.NumExpr
    | LE Lexical.NumExpr Lexical.NumExpr
    | G Lexical.NumExpr Lexical.NumExpr
    | GE Lexical.NumExpr Lexical.NumExpr
33346d2223bbd5ee71d81807aa14585c
  data Stmt
    = Exp Lexical.Expr
    | Stmt_cycle Lexical.Stmt_list
    | Assign Lexical.Var Lexical.Expr
    | Skip
    | If Lexical.Expr Lexical.Stmt Lexical.Stmt
    | While Lexical.Expr Lexical.Stmt
    | New_vec Lexical.Var Lexical.Expr
    | Set_vec Lexical.Var Lexical.Expr Lexical.Expr
33346d2223bbd5ee71d81807aa14585c
  data Stmt_list
    = One Lexical.Stmt | Cycle Lexical.Stmt Lexical.Stmt_list
4734be74f3e74f5eed8b8b43c63b8e76
  data Var
    = TypeBool Data.Text.Internal.Text
    | TypeNum Data.Text.Internal.Text
    | TypeList Data.Text.Internal.Text
    | TypeVector Data.Text.Internal.Text Lexical.Expr
    | TypeUnknown Data.Text.Internal.Text
172601c7c15685cbe1e34102be79e3f8
  addParser :: Data.Attoparsec.Text.Internal.Parser Lexical.NumExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.addParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.NumExpr>_R)) -}
a8659f0d2804d395d0818923f9872524
  addParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$waddParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
fe16848383ad4bcefc20b09a463d4d95
  andParser :: Data.Attoparsec.Text.Internal.Parser Lexical.BoolExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.andParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.BoolExpr>_R)) -}
e518c16b6c112240f9c52dbb8e973e2c
  andParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.BoolExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wandParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
65cc932f52aa10bbd87e5f1282d7ba16
  assignParser :: Data.Attoparsec.Text.Internal.Parser Lexical.Stmt
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.assignParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.Stmt>_R)) -}
b2cb1c78f3c71d9d4af69ecb9e20b920
  assignParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Stmt
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wassignParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
8a2901898da94041297ea4cc31dfe003
  bexpParser :: Data.Attoparsec.Text.Internal.Parser Lexical.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.bexpParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.Expr>_R)) -}
25f0da40f61a64581fad32ae055eb8a1
  bexpParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wbexpParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
8143fdaf1fa8809ff15f552cf2f808c6
  boolExprParser ::
    Data.Attoparsec.Text.Internal.Parser Lexical.BoolExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),U(U)><L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lexical.boolExprParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.BoolExpr>_R)) -}
3b9aff55845daa8af9685b544cf74281
  boolExprParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),U(U)><L,U><L,U><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.BoolExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wboolExprParser
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   w2
                   w3
                   w4 } }) -}
95eb7d519472f21577867b34f904bc0c
  boolVarParser ::
    Data.Attoparsec.Text.Internal.Parser Lexical.BoolExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.boolVarParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.BoolExpr>_R)) -}
41b1ee6339a60a1fcb75870989b4f513
  boolVarParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.BoolExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wboolVarParser
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   w2
                   w3
                   w4 } }) -}
0d0e272f988616dfcff617d456de5ffc
  boolVarParser_msg3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Failed reading: Pattern match failure in do expression at src/Lexical.hs:60:5-21"#) -}
da660d6c520fef5d733533fe16bfb8fc
  carParser :: Data.Attoparsec.Text.Internal.Parser Lexical.ListExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.carParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.ListExpr>_R)) -}
7ccc74ac59e89cdd6cb16b79e973b7b5
  carParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.ListExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wcarParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
6e49603166c545ec501d2ec8ab7d0282
  cdrParser :: Data.Attoparsec.Text.Internal.Parser Lexical.ListExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.cdrParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.ListExpr>_R)) -}
3d0d1188e46b92610cf6181e8cf81eba
  cdrParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.ListExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wcdrParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
09e149a436bed82f29cf0391af45d1c8
  charParser :: Data.Attoparsec.Text.Internal.Parser Lexical.ListExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.charParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.ListExpr>_R)) -}
f4009f50a93f442901c8249dd0f02ae1
  charParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.ListExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wcharParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
bbe25d915d33029ec4d0699b05534e5c
  conParser :: Data.Attoparsec.Text.Internal.Parser Lexical.ListExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.conParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.ListExpr>_R)) -}
271c6269b10b1860c576d67d8c5cc0b5
  conParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.ListExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wconParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
a97017f26eeaba82721b321b1b66073d
  divParser :: Data.Attoparsec.Text.Internal.Parser Lexical.NumExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.divParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.NumExpr>_R)) -}
f3654ce5004093ebf2eecab6967fd377
  divParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wdivParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
1c79b50c137e7a8d0a719abd0ebdf3d9
  equalParser :: Data.Attoparsec.Text.Internal.Parser Lexical.NumExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.equalParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.NumExpr>_R)) -}
7165fb255ee229a5fc79fc9d994cca13
  equalParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wequalParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
a94dcc9038f5f3e4efe06cdab1591d08
  exprParser :: Data.Attoparsec.Text.Internal.Parser Lexical.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.exprParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.Expr>_R)) -}
4750b16be9980992520a319bd0dc8634
  exprParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wexprParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
251f4c62795bfd90f57310444cc89fb0
  exprVarParser :: Data.Attoparsec.Text.Internal.Parser Lexical.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.exprVarParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.Expr>_R)) -}
a29f2db71c7f5ca367cec64239bb5019
  exprVarParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wexprVarParser
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   w2
                   w3
                   w4 } }) -}
21c3271a47b1d54500ce631889e70c21
  falseParser ::
    Data.Attoparsec.Text.Internal.Parser Lexical.BoolExpr
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Lexical.falseParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.BoolExpr>_R)) -}
238a8941e20dc51e0d74db46b6af6215
  falseParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Unfolding: (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.BoolExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wgo1
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   w2
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: ())[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww8 { Data.Attoparsec.Text.Buffer.Buf ww9 ww10 ww11 ww12 ww13 ->
                    Lexical.$wfalseParser
                      @ r
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ipv1
                      more'
                      w3
                      w4 } }) } }) -}
a13115e21a6f14791c6d6fec31fe7d2a
  floatParser :: Data.Attoparsec.Text.Internal.Parser Lexical.NumExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.floatParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.NumExpr>_R)) -}
6d78daf9a0c42ff00ede05159bc30629
  floatParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wfloatParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
c2018013abc3abc791b0905d3f3e3cb4
  geParser :: Data.Attoparsec.Text.Internal.Parser Lexical.NumExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.geParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.NumExpr>_R)) -}
d75b85e62d45865a07c9889829c1518b
  geParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wgeParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
e74becb4c7e1a59de070ff423cef6bad
  greatParser :: Data.Attoparsec.Text.Internal.Parser Lexical.NumExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.greatParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.NumExpr>_R)) -}
5823ce8c5770c79899e73177977a0bfb
  greatParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wgreatParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
362818ed1fa501139080a29f14805a7e
  ifParser :: Data.Attoparsec.Text.Internal.Parser Lexical.Stmt
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.ifParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.Stmt>_R)) -}
fcb3336b7e332a584c142dbaa63ae42c
  ifParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Stmt
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wifParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
459e91866be56c14619f6aa988df0193
  keywords :: Data.Set.Base.Set GHC.Base.String
  {- Unfolding: (Lexical.$sfromList Lexical.keywords1) -}
02b59b6b62b88d81d4db9f92bc6b38fc
  keywords1 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lexical.keywords26
                   Lexical.keywords2) -}
87c960ca6f6a86e5384648e67c2fc0dc
  keywords10 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lexical.keywords17
                   Lexical.keywords11) -}
24e8abbafe25b6851dbcd49d33175171
  keywords11 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lexical.keywords16
                   Lexical.keywords12) -}
29f5e6400ecbfd42eb4507399971ca02
  keywords12 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lexical.keywords15
                   Lexical.keywords13) -}
dc83b328599e624914f31b90d3ea0928
  keywords13 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lexical.keywords14
                   (GHC.Types.[] @ GHC.Base.String)) -}
64ab27d37724c7c2d68ff2a276d56a6d
  keywords14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "make"#) -}
6ee786ac75340a518dc377c5a3b619d7
  keywords15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "vector"#) -}
f3d9e2721c227bfcb9ba6366d5dae2db
  keywords16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "begin"#) -}
a0a97d707647f90ef77e332407bbcdc5
  keywords17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "skip"#) -}
089c9442b38a2aa9908496ea4c31097a
  keywords18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "while"#) -}
f03c36ff98e6d63cc1b52a6c9d22ae49
  keywords19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "if"#) -}
87d622b1a0fb983bc768c49faac70d34
  keywords2 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lexical.keywords25
                   Lexical.keywords3) -}
8b78615338a234cf021cf599b6c6fea3
  keywords20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "set!"#) -}
2ab1a25338bf595d6ee086f5b0ad1fb3
  keywords21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "cdr"#) -}
29b116e26626d248594177535d16a892
  keywords22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "car"#) -}
98dda8a927ab6a3bafcc9573fdf657cf
  keywords23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "cons"#) -}
fe14e840148bf67f79a92103701f33b5
  keywords24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "nil"#) -}
d344cd936557a58970f9e022d26afa89
  keywords25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "False"#) -}
3bad413e82413208d7adce3d24fc3482
  keywords26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "True"#) -}
4c63597f3e957203b5071479e79d98d0
  keywords3 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lexical.keywords24
                   Lexical.keywords4) -}
a6aff1875f44365cfff0ee42880582e3
  keywords4 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lexical.keywords23
                   Lexical.keywords5) -}
26e4164d54e566de88adadfad01646ad
  keywords5 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lexical.keywords22
                   Lexical.keywords6) -}
2994649981d0e88a4eace54ceb2bde20
  keywords6 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lexical.keywords21
                   Lexical.keywords7) -}
333b28010719694c620efb68a86da131
  keywords7 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lexical.keywords20
                   Lexical.keywords8) -}
5b882cbbbc5fd19c9e06e6ae64502e59
  keywords8 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lexical.keywords19
                   Lexical.keywords9) -}
f0a7d93d7646b2990a536e3dc1f7e6bb
  keywords9 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lexical.keywords18
                   Lexical.keywords10) -}
8342b4cf6782eeeddb7791551a2ccbb9
  leParser :: Data.Attoparsec.Text.Internal.Parser Lexical.NumExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.leParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.NumExpr>_R)) -}
7b5d336cf30c4bdba0918b2508150727
  leParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wleParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
a28f349e98af27fbd0afe09240271cf6
  lessParser :: Data.Attoparsec.Text.Internal.Parser Lexical.NumExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.lessParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.NumExpr>_R)) -}
83780a148a65e6f8150008baf43261b8
  lessParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wlessParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
65c9cd116bb2dc3f38f030de6feccfc6
  lexeme ::
    Data.Attoparsec.Text.Internal.Parser a
    -> Data.Attoparsec.Text.Internal.Parser a
  {- Arity: 6,
     Strictness: <L,C(C1(C1(C1(C1(U)))))><S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lexical.lexeme1
                  `cast`
                (forall (a :: <*>_N).
                 <Data.Attoparsec.Text.Internal.Parser a>_R
                 ->_R Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                               <Data.Text.Internal.Text>_N <a>_R)) -}
de8c43e894f74c8f7d1cd0564b7b21ef
  lexeme1 ::
    Data.Attoparsec.Text.Internal.Parser a
    -> forall r.
       Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
       -> Data.Attoparsec.Internal.Types.Pos
       -> Data.Attoparsec.Internal.Types.More
       -> Data.Attoparsec.Internal.Types.Failure
            Data.Text.Internal.Text
            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
            r
       -> Data.Attoparsec.Internal.Types.Success
            Data.Text.Internal.Text
            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
            a
            r
       -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 6,
     Strictness: <L,C(C1(C1(C1(C1(U)))))><S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, False)
                (\ @ a
                   (w :: Data.Attoparsec.Text.Internal.Parser a)
                   @ r
                   (w1 :: Data.Attoparsec.Internal.Types.State
                            Data.Text.Internal.Text)
                   (w2 :: Data.Attoparsec.Internal.Types.Pos)
                   (w3 :: Data.Attoparsec.Internal.Types.More)
                   (w4 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w5 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            a
                            r) ->
                 case w1
                        `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w2
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wlexeme @ a w @ r ww1 ww2 ww3 ww4 ww5 ww7 w3 w4 w5 } }) -}
13bb9a6aa3b593d576b000d694a35426
  lexpParser :: Data.Attoparsec.Text.Internal.Parser Lexical.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.lexpParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.Expr>_R)) -}
d93d2116453eb79bc93c348c1268fa5d
  lexpParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wlexpParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
b0d863ffd18d4ad062e679649fa10c09
  listExprParser ::
    Data.Attoparsec.Text.Internal.Parser Lexical.ListExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.listExprParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.ListExpr>_R)) -}
9edde7f751139cbcff0fdd2d32236d0b
  listExprParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.ListExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wlistExprParser
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   w2
                   w3
                   w4 } }) -}
cec576e269808779dd86963433c1080c
  listToStmt_list ::
    [Lexical.Stmt] -> Lexical.Stmt_list -> Lexical.Stmt_list
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
d8cfc8c5423ed6d53d8c728853c55d68
  listVarParser ::
    Data.Attoparsec.Text.Internal.Parser Lexical.ListExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.listVarParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.ListExpr>_R)) -}
7e6bc6272ef91ad0cc4c056aa52796e2
  listVarParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.ListExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wlistVarParser
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   w2
                   w3
                   w4 } }) -}
400772d9b15f636f110ce5d3aabeb2ec
  listVarParser_msg3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Failed reading: Pattern match failure in do expression at src/Lexical.hs:217:5-21"#) -}
d12207dfdf1f9ebb2e926df2c8caf354
  mulParser :: Data.Attoparsec.Text.Internal.Parser Lexical.NumExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.mulParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.NumExpr>_R)) -}
e85845f321a067324c936e1f22653801
  mulParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wmulParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
fbc727649dc45f73d7e5fa28b3997b63
  new_vecParser :: Data.Attoparsec.Text.Internal.Parser Lexical.Stmt
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.new_vecParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.Stmt>_R)) -}
4dd77a741d15b5ee7b0697c7e156d884
  new_vecParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Stmt
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wnew_vecParser
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   w2
                   w3
                   w4 } }) -}
d7c266bf732e515d4ffbb04eccce1be8
  nexpParser :: Data.Attoparsec.Text.Internal.Parser Lexical.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.nexpParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.Expr>_R)) -}
00ef9c74dfc83927f5cf80642039a493
  nexpParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wnexpParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
b557b7e46c2d3f695ec2b38086d3f682
  notParser :: Data.Attoparsec.Text.Internal.Parser Lexical.BoolExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.notParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.BoolExpr>_R)) -}
7501390ba810223f2977b8e811c1f855
  notParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.BoolExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wnotParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
c420282a821c202a7ca399d8a77f937a
  nullParser :: Data.Attoparsec.Text.Internal.Parser Lexical.ListExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.nullParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.ListExpr>_R)) -}
17fe7513801679f23b14b9fee714c136
  nullParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.ListExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wnullParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
5d87c4dcf123b87fd28bdc29f2c1d71f
  numExprParser ::
    Data.Attoparsec.Text.Internal.Parser Lexical.NumExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.numExprParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.NumExpr>_R)) -}
40c89ed8d1a2db0b17ee88c4c76e3a57
  numExprParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wnumExprParser
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   w2
                   w3
                   w4 } }) -}
fd2aa280bd6585ba1447dbc6875d982e
  numVarParser ::
    Data.Attoparsec.Text.Internal.Parser Lexical.NumExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.numVarParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.NumExpr>_R)) -}
7a35bfe4f3a199aa58f471896dcea1eb
  numVarParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wnumVarParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
161417f9fe215a735e44a66c9359208e
  numVarParser_msg3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Failed reading: Pattern match failure in do expression at src/Lexical.hs:113:5-21"#) -}
8f9d15d56566d40e9ea5e4f84a9d7562
  orParser :: Data.Attoparsec.Text.Internal.Parser Lexical.BoolExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.orParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.BoolExpr>_R)) -}
b06bbb1f1ee60590294cb9d3024c17ad
  orParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.BoolExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$worParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
dd9cc966023cde8d72716ccf1d59e63a
  set_vecParser :: Data.Attoparsec.Text.Internal.Parser Lexical.Stmt
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.set_vecParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.Stmt>_R)) -}
55279516ed6d217114dba62f09074274
  set_vecParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Stmt
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wset_vecParser
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   w2
                   w3
                   w4 } }) -}
a21fe272db4547dcacf07361a46b003d
  skipParser :: Data.Attoparsec.Text.Internal.Parser Lexical.Stmt
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.skipParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.Stmt>_R)) -}
2fcefb03e00e928d15d22e99952a5c87
  skipParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Stmt
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wskipParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
9f7f0d4c2b89b503384e8656e7718d87
  stmtExprParser :: Data.Attoparsec.Text.Internal.Parser Lexical.Stmt
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.stmtExprParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.Stmt>_R)) -}
ed09db7a31aa795c81e3779951fab7a3
  stmtExprParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Stmt
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wstmtExprParser
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   w2
                   w3
                   w4 } }) -}
d2469aca61feaad62e1d6a46d6b65c3f
  stmtListParser :: Data.Attoparsec.Text.Internal.Parser Lexical.Stmt
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.stmtListParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.Stmt>_R)) -}
056d47cb9c45924b508a1fa6d7fa09ff
  stmtListParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Stmt
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wstmtListParser
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   w2
                   w3
                   w4 } }) -}
dedf3286f5111231b112f7a6389d0e23
  stmtParser :: Data.Attoparsec.Text.Internal.Parser Lexical.Stmt
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.stmtParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.Stmt>_R)) -}
6b49222fe6cbe0f8401c8afb27f60fcf
  stmtParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Stmt
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wstmtParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
6a558c463e5c31d38ae4a5c9e2d0f25f
  stmt_listParser ::
    Data.Attoparsec.Text.Internal.Parser Lexical.Stmt_list
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.stmt_listParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.Stmt_list>_R)) -}
d5d58b7262247aee46f2ecfab46125cc
  stmt_listParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt_list
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Stmt_list
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wstmt_listParser
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   w2
                   w3
                   w4 } }) -}
1c78701d9d002903cdcd72084ffa47bc
  stringParser ::
    Data.Attoparsec.Text.Internal.Parser Lexical.ListExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.stringParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.ListExpr>_R)) -}
49d85b2e536da19c9076296843cc3f53
  stringParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.ListExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wstringParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
dc148a9a1ad82df3de4ee9d3d9a6619d
  subParser :: Data.Attoparsec.Text.Internal.Parser Lexical.NumExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.subParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.NumExpr>_R)) -}
c8637552222bd52b2b8ad3fcad5165ba
  subParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wsubParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
033b569783d3f31c234cfd1b31c832a5
  trueParser :: Data.Attoparsec.Text.Internal.Parser Lexical.BoolExpr
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Lexical.trueParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.BoolExpr>_R)) -}
52c92fe069569fc23b864c5750e5f48e
  trueParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Unfolding: (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.BoolExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wgo1
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   w2
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: ())[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww8 { Data.Attoparsec.Text.Buffer.Buf ww9 ww10 ww11 ww12 ww13 ->
                    Lexical.$wtrueParser
                      @ r
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ipv1
                      more'
                      w3
                      w4 } }) } }) -}
a60724e55d448f2d1bd0d4f08a0c8743
  varParser :: Data.Attoparsec.Text.Internal.Parser Lexical.Var
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.varParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.Var>_R)) -}
3b10456043b24e216e3f8d2f2792378d
  varParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Var
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Var
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wvarParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
370c404e26a9833bbe8fe5bc50e9f6ba
  vectorParser :: Data.Attoparsec.Text.Internal.Parser Lexical.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.vectorParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.Expr>_R)) -}
2d0de6d586e123f7df8cd03afa49c553
  vectorParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wvectorParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
7507603c7c8f57cd8395f9c9e2867014
  whileParser :: Data.Attoparsec.Text.Internal.Parser Lexical.Stmt
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.whileParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.Stmt>_R)) -}
93c8eb6bbddc9bdad185dab17b937ce6
  whileParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Stmt
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wwhileParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
instance GHC.Classes.Eq [Lexical.Var] = Lexical.$fEqVar
instance GHC.Show.Show [Lexical.BoolExpr] = Lexical.$fShowBoolExpr
instance GHC.Show.Show [Lexical.Expr] = Lexical.$fShowExpr
instance GHC.Show.Show [Lexical.ListExpr] = Lexical.$fShowListExpr
instance GHC.Show.Show [Lexical.NumExpr] = Lexical.$fShowNumExpr
instance GHC.Show.Show [Lexical.Stmt] = Lexical.$fShowStmt
instance GHC.Show.Show [Lexical.Stmt_list]
  = Lexical.$fShowStmt_list
instance GHC.Show.Show [Lexical.Var] = Lexical.$fShowVar
"SPEC/Lexical fromList @ String" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                             GHC.Base.String)
  Data.Set.Base.fromList @ [GHC.Types.Char] $dOrd
  = Lexical.$sfromList
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

