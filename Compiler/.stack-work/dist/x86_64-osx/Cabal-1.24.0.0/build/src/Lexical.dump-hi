
==================== FINAL INTERFACE ====================
2017-01-13 03:33:01.796391 UTC

interface Compiler-0.1.0.0-A5AqcFYQOeY4hOCoTusz4T:Lexical 8001
  interface hash: 6ed45b6c82bebb7942ca324ddfb97b4e
  ABI hash: ded13c5a7e534dd59e914c12b068fdb9
  export-list hash: adff915e72040da3ec2441897cc72692
  orphan hash: 1d25a4ca0d850695ece0a40f19a19210
  flag hash: db082111cc32dd58ed548dcc273abe68
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lexical.addParser
  Lexical.andParser
  Lexical.assignParser
  Lexical.bexpParser
  Lexical.boolExprParser
  Lexical.boolVarParser
  Lexical.carParser
  Lexical.cdrParser
  Lexical.charParser
  Lexical.conParser
  Lexical.divParser
  Lexical.equalParser
  Lexical.exprParser
  Lexical.falseParser
  Lexical.floatParser
  Lexical.geParser
  Lexical.greatParser
  Lexical.keywords
  Lexical.leParser
  Lexical.lessParser
  Lexical.lexeme
  Lexical.lexpParser
  Lexical.listExprParser
  Lexical.listVarParser
  Lexical.mulParser
  Lexical.nexpParser
  Lexical.notParser
  Lexical.nullParser
  Lexical.numExprParser
  Lexical.numVarParser
  Lexical.orParser
  Lexical.stmtExprParser
  Lexical.stmtParser
  Lexical.stringParser
  Lexical.subParser
  Lexical.trueParser
  Lexical.varParser
  Lexical.BoolExpr{Lexical.And Lexical.BVar Lexical.FalseLit Lexical.Not Lexical.Or Lexical.TrueLit}
  Lexical.Expr{Lexical.BExp Lexical.EVar Lexical.LExp Lexical.NExp}
  Lexical.ListExpr{Lexical.Car Lexical.Cdr Lexical.CharLit Lexical.Cons Lexical.LVar Lexical.Nil Lexical.StringLit}
  Lexical.NumExpr{Lexical.Add Lexical.Div Lexical.E Lexical.G Lexical.GE Lexical.L Lexical.LE Lexical.Mul Lexical.NVar Lexical.Number Lexical.Sub}
  Lexical.Stmt{Lexical.Assign Lexical.Exp}
  Lexical.Var{Lexical.TypeBool Lexical.TypeList Lexical.TypeNum Lexical.TypeUnknown}
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43
                      base-4.9.0.0 binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-Ctl752zbguF6QanxurLOm2
                      integer-gmp-1.0.0.1
                      integer-logarithms-1@integer-logarithms-1-E6LvTbkhTkGIa6wPB3rtJw
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      scientific-0.3.4.10@scientific-0.3.4.10-2Y658Wts4fDGgAkWhKOJwC
                      text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs
                      transformers-0.5.2.0@transformers-0.5.2.0
                      vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43:Data.Attoparsec.Text.Internal
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-Ctl752zbguF6QanxurLOm2:Data.Hashable.Generic
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Fusion.Bundle
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43:Data.Attoparsec.Internal.Types
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Functor.Identity base-4.9.0.0:Data.List.NonEmpty
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Semigroup
                         base-4.9.0.0:Data.Type.Equality base-4.9.0.0:Data.Version
                         base-4.9.0.0:Data.Void base-4.9.0.0:GHC.Exts
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text
                         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Lazy
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector
import  -/  attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43:Data.Attoparsec.Text d3cff0ad187398020adcebc8a0709b72
import  -/  attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43:Data.Attoparsec.Text.Internal fd0d5edacc9a9428b223517c76c5dd06
import  -/  base-4.9.0.0:Control.Applicative 7728b33d6969dce59e89474349eb1397
import  -/  base-4.9.0.0:Data.Functor 6fc476505db88d678632a4a838125f13
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Set 3ed2324fd1e757464a8ac2b636a64e5a
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base a8d226a906391942317c3409714bd02d
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text 1e73069de2859bae8530c14767b0c6af
import  -/  text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Internal bfb0ec5fde448272375be97e2314e47b
import  -/  text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Show f1f9b8deb132e3cc6c9369ebd9da68d2
84f1d68d568ac221a0f7a055af6faaa3
  $fEqVar :: GHC.Classes.Eq Lexical.Var
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lexical.Var Lexical.$fEqVar_$c== Lexical.$fEqVar_$c/= -}
84f1d68d568ac221a0f7a055af6faaa3
  $fEqVar_$c/= :: Lexical.Var -> Lexical.Var -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Lexical.Var) (y :: Lexical.Var) ->
                 GHC.Classes.not (Lexical.$fEqVar_$c== x y)) -}
84f1d68d568ac221a0f7a055af6faaa3
  $fEqVar_$c== :: Lexical.Var -> Lexical.Var -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lexical.Var) (b :: Lexical.Var) ->
                 GHC.Base.eqString
                   (Lexical.$fEqVar_$cshow a)
                   (Lexical.$fEqVar_$cshow b)) -}
84f1d68d568ac221a0f7a055af6faaa3
  $fEqVar_$cshow :: Lexical.Var -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
84f1d68d568ac221a0f7a055af6faaa3
  $fOrdVar :: GHC.Classes.Ord Lexical.Var
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lexical.Var
                  Lexical.$fEqVar
                  Lexical.$fOrdVar_$ccompare
                  Lexical.$fOrdVar_$c<
                  Lexical.$fOrdVar_$c<=
                  Lexical.$fOrdVar_$c>
                  Lexical.$fOrdVar_$c>=
                  Lexical.$fOrdVar_$cmax
                  Lexical.$fOrdVar_$cmin -}
84f1d68d568ac221a0f7a055af6faaa3
  $fOrdVar_$c< :: Lexical.Var -> Lexical.Var -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lexical.Var) (y :: Lexical.Var) ->
                 case Lexical.$fOrdVar_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
84f1d68d568ac221a0f7a055af6faaa3
  $fOrdVar_$c<= :: Lexical.Var -> Lexical.Var -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lexical.Var) (y :: Lexical.Var) ->
                 case Lexical.$fOrdVar_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
84f1d68d568ac221a0f7a055af6faaa3
  $fOrdVar_$c> :: Lexical.Var -> Lexical.Var -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lexical.Var) (y :: Lexical.Var) ->
                 case Lexical.$fOrdVar_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
84f1d68d568ac221a0f7a055af6faaa3
  $fOrdVar_$c>= :: Lexical.Var -> Lexical.Var -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lexical.Var) (y :: Lexical.Var) ->
                 case Lexical.$fOrdVar_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
84f1d68d568ac221a0f7a055af6faaa3
  $fOrdVar_$ccompare ::
    Lexical.Var -> Lexical.Var -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Lexical.Var) (b :: Lexical.Var) ->
                 case a of wild {
                   Lexical.TypeBool a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        Lexical.TypeBool b1 -> Data.Text.$fOrdText_$ccompare a1 b1 }
                   Lexical.TypeNum a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        Lexical.TypeBool ds -> GHC.Types.GT
                        Lexical.TypeNum b1 -> Data.Text.$fOrdText_$ccompare a1 b1 }
                   Lexical.TypeList a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Lexical.TypeList b1 -> Data.Text.$fOrdText_$ccompare a1 b1
                        Lexical.TypeUnknown ds -> GHC.Types.LT }
                   Lexical.TypeUnknown a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Lexical.TypeUnknown b1
                        -> Data.Text.$fOrdText_$ccompare a1 b1 } }) -}
84f1d68d568ac221a0f7a055af6faaa3
  $fOrdVar_$cmax :: Lexical.Var -> Lexical.Var -> Lexical.Var
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lexical.Var) (y :: Lexical.Var) ->
                 case Lexical.$fOrdVar_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
84f1d68d568ac221a0f7a055af6faaa3
  $fOrdVar_$cmin :: Lexical.Var -> Lexical.Var -> Lexical.Var
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lexical.Var) (y :: Lexical.Var) ->
                 case Lexical.$fOrdVar_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
71b7b2323e18460994b0d1cd717ba07c
  $fShowBoolExpr :: GHC.Show.Show Lexical.BoolExpr
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lexical.BoolExpr
                  Lexical.$fShowBoolExpr_$cshowsPrec
                  Lexical.$fShowBoolExpr_$cshow
                  Lexical.$fShowBoolExpr_$cshowList -}
71b7b2323e18460994b0d1cd717ba07c
  $fShowBoolExpr1 :: Lexical.BoolExpr -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Lexical.$fShowBoolExpr_$cshowsPrec
                   Lexical.$fShowBoolExpr2) -}
b20630f1a7d3996fb4b58f93a8f16c88
  $fShowBoolExpr2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
71b7b2323e18460994b0d1cd717ba07c
  $fShowBoolExpr_$cshow :: Lexical.BoolExpr -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lexical.BoolExpr) ->
                 Lexical.$fShowBoolExpr_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
71b7b2323e18460994b0d1cd717ba07c
  $fShowBoolExpr_$cshowList :: [Lexical.BoolExpr] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lexical.BoolExpr
                   Lexical.$fShowBoolExpr1) -}
71b7b2323e18460994b0d1cd717ba07c
  $fShowBoolExpr_$cshowsPrec ::
    GHC.Types.Int -> Lexical.BoolExpr -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
a5b053a35e99ae10936ec3b6c01f4253
  $fShowExpr :: GHC.Show.Show Lexical.Expr
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lexical.Expr
                  Lexical.$fShowExpr_$cshowsPrec1
                  Lexical.$fShowExpr_$cshow
                  Lexical.$fShowExpr_$cshowList -}
a5b053a35e99ae10936ec3b6c01f4253
  $fShowExpr1 :: Lexical.Expr -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Lexical.Expr) -> Lexical.$w$cshowsPrec 0# w) -}
52f1e5ee2faf312bba4108709bddc5a8
  $fShowExpr2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LExp "#) -}
ea5b7442414ef46fadafee9c3a8e5f13
  $fShowExpr3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NExp "#) -}
1e9b10316ae04c9dae2c7deafd610764
  $fShowExpr4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 11#) -}
be7d8d037dc1c9d36c867308ea9a049a
  $fShowExpr5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "BExp "#) -}
d41c555d739c3f6b839c8b1ca7c0f887
  $fShowExpr6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "EVar "#) -}
a5b053a35e99ae10936ec3b6c01f4253
  $fShowExpr_$cshow :: Lexical.Expr -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Lexical.Expr) ->
                 case x of wild {
                   Lexical.EVar b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Lexical.$fShowExpr6
                        (GHC.Base.++
                           @ GHC.Types.Char
                           (Lexical.$fEqVar_$cshow b1)
                           (GHC.Types.[] @ GHC.Types.Char))
                   Lexical.BExp b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Lexical.$fShowExpr5
                        (Lexical.$fShowBoolExpr_$cshowsPrec
                           Lexical.$fShowExpr4
                           b1
                           (GHC.Types.[] @ GHC.Types.Char))
                   Lexical.NExp b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Lexical.$fShowExpr3
                        (Lexical.$w$cshowsPrec1 11# b1 (GHC.Types.[] @ GHC.Types.Char))
                   Lexical.LExp b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Lexical.$fShowExpr2
                        (Lexical.$fShowExpr_$cshowsPrec
                           Lexical.$fShowExpr4
                           b1
                           (GHC.Types.[] @ GHC.Types.Char)) }) -}
a5b053a35e99ae10936ec3b6c01f4253
  $fShowExpr_$cshowList :: [Lexical.Expr] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lexical.Expr
                   Lexical.$fShowExpr1) -}
d070c5300eee747c23b50fd3670a8046
  $fShowExpr_$cshowsPrec ::
    GHC.Types.Int -> Lexical.ListExpr -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
a5b053a35e99ae10936ec3b6c01f4253
  $fShowExpr_$cshowsPrec1 ::
    GHC.Types.Int -> Lexical.Expr -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lexical.Expr) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Lexical.$w$cshowsPrec ww1 w1 }) -}
d070c5300eee747c23b50fd3670a8046
  $fShowListExpr :: GHC.Show.Show Lexical.ListExpr
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lexical.ListExpr
                  Lexical.$fShowExpr_$cshowsPrec
                  Lexical.$fShowListExpr_$cshow
                  Lexical.$fShowListExpr_$cshowList -}
d070c5300eee747c23b50fd3670a8046
  $fShowListExpr1 :: Lexical.ListExpr -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Lexical.$fShowExpr_$cshowsPrec
                   Lexical.$fShowBoolExpr2) -}
d070c5300eee747c23b50fd3670a8046
  $fShowListExpr_$cshow :: Lexical.ListExpr -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lexical.ListExpr) ->
                 Lexical.$fShowExpr_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
d070c5300eee747c23b50fd3670a8046
  $fShowListExpr_$cshowList :: [Lexical.ListExpr] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lexical.ListExpr
                   Lexical.$fShowListExpr1) -}
11be7d829d1ed81418e5c306782c3dec
  $fShowNumExpr :: GHC.Show.Show Lexical.NumExpr
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lexical.NumExpr
                  Lexical.$fShowNumExpr_$cshowsPrec
                  Lexical.$fShowNumExpr_$cshow
                  Lexical.$fShowNumExpr_$cshowList -}
11be7d829d1ed81418e5c306782c3dec
  $fShowNumExpr1 :: Lexical.NumExpr -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Lexical.NumExpr) ->
                 Lexical.$w$cshowsPrec1 0# w) -}
11be7d829d1ed81418e5c306782c3dec
  $fShowNumExpr_$cshow :: Lexical.NumExpr -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lexical.NumExpr) ->
                 Lexical.$fShowNumExpr_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
11be7d829d1ed81418e5c306782c3dec
  $fShowNumExpr_$cshowList :: [Lexical.NumExpr] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lexical.NumExpr
                   Lexical.$fShowNumExpr1) -}
11be7d829d1ed81418e5c306782c3dec
  $fShowNumExpr_$cshowsPrec ::
    GHC.Types.Int -> Lexical.NumExpr -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lexical.NumExpr) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Lexical.$w$cshowsPrec1 ww1 w1 }) -}
c83303050bc67f175a82e1e5219a4727
  $fShowStmt :: GHC.Show.Show Lexical.Stmt
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lexical.Stmt
                  Lexical.$fShowStmt_$cshowsPrec
                  Lexical.$fShowStmt_$cshow
                  Lexical.$fShowStmt_$cshowList -}
c83303050bc67f175a82e1e5219a4727
  $fShowStmt1 :: Lexical.Stmt -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Lexical.Stmt) ->
                 Lexical.$w$cshowsPrec2 0# w) -}
fab17fc6b47946fcbb254440464f0db1
  $fShowStmt2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Exp "#) -}
126610d7533119328889bb7346c11a2c
  $fShowStmt3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Assign "#) -}
c83303050bc67f175a82e1e5219a4727
  $fShowStmt_$cshow :: Lexical.Stmt -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
c83303050bc67f175a82e1e5219a4727
  $fShowStmt_$cshowList :: [Lexical.Stmt] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lexical.Stmt
                   Lexical.$fShowStmt1) -}
c83303050bc67f175a82e1e5219a4727
  $fShowStmt_$cshowsPrec ::
    GHC.Types.Int -> Lexical.Stmt -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lexical.Stmt) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Lexical.$w$cshowsPrec2 ww1 w1 }) -}
84f1d68d568ac221a0f7a055af6faaa3
  $fShowVar :: GHC.Show.Show Lexical.Var
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lexical.Var
                  Lexical.$fShowVar_$cshowsPrec
                  Lexical.$fEqVar_$cshow
                  Lexical.$fShowVar_$cshowList -}
84f1d68d568ac221a0f7a055af6faaa3
  $fShowVar1 :: Lexical.Var -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ (x :: Lexical.Var) (s :: GHC.Base.String)[OneShot] ->
                 GHC.Base.++ @ GHC.Types.Char (Lexical.$fEqVar_$cshow x) s) -}
84f1d68d568ac221a0f7a055af6faaa3
  $fShowVar_$cshowList :: [Lexical.Var] -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (ls :: [Lexical.Var]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Lexical.Var Lexical.$fShowVar1 ls s) -}
84f1d68d568ac221a0f7a055af6faaa3
  $fShowVar_$cshowsPrec ::
    GHC.Types.Int -> Lexical.Var -> GHC.Show.ShowS
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Lexical.Var)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c n (Lexical.$fEqVar_$cshow x))
                   s) -}
fcc1c273c94666e8fd07adbfa23755c3
  $sfromList ::
    [GHC.Base.String] -> Data.Set.Base.Set GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [GHC.Base.String]) ->
                 case ds of wild {
                   [] -> Data.Set.Base.Tip @ GHC.Base.String
                   : x ds1
                   -> case ds1 of wild1 {
                        []
                        -> case x of dt { DEFAULT ->
                           Data.Set.Base.Bin
                             @ GHC.Base.String
                             1#
                             dt
                             (Data.Set.Base.Tip @ GHC.Base.String)
                             (Data.Set.Base.Tip @ GHC.Base.String) }
                        : ipv ipv1
                        -> case GHC.Classes.$fOrd[]_$s$ccompare1 x ipv of wild2 {
                             DEFAULT
                             -> case x of dt { DEFAULT ->
                                Lexical.$sfromList_go5
                                  (Data.Set.Base.Bin
                                     @ GHC.Base.String
                                     1#
                                     dt
                                     (Data.Set.Base.Tip @ GHC.Base.String)
                                     (Data.Set.Base.Tip @ GHC.Base.String))
                                  wild1 }
                             GHC.Types.LT
                             -> case x of dt { DEFAULT ->
                                Lexical.$wgo5
                                  1#
                                  (Data.Set.Base.Bin
                                     @ GHC.Base.String
                                     1#
                                     dt
                                     (Data.Set.Base.Tip @ GHC.Base.String)
                                     (Data.Set.Base.Tip @ GHC.Base.String))
                                  wild1 } } } }) -}
2abdd24f36d78b9a9af67962503c34c6
  $sfromList_go5 ::
    Data.Set.Base.Set GHC.Base.String
    -> [GHC.Base.String] -> Data.Set.Base.Set GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
48eaa4c1baedb53e498e6ac4b2e38da3
  $sinsert_$sgo5 ::
    GHC.Base.String
    -> Data.Set.Base.Set GHC.Base.String
    -> Data.Set.Base.Set GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
88f357bcc5c149422afa94f4c0e25588
  $smember_go5 ::
    GHC.Base.String
    -> Data.Set.Base.Set GHC.Base.String -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
b613f68c6a02962de2e42cdac89e0d08
  $tc'Add :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18279963465063834104##
                   265201145431394597##
                   Lexical.$trModule
                   Lexical.$tc'Add1) -}
9df8a35c98612eba7f32afbc0e6dcd5e
  $tc'Add1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Add"#) -}
108a540ab33e424735025c102e107a24
  $tc'And :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13816928548359690602##
                   11497249424431927666##
                   Lexical.$trModule
                   Lexical.$tc'And1) -}
41458797397a10a9c9e4452619e6ec25
  $tc'And1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'And"#) -}
34481ab76036cd1a9dc39b33961e7594
  $tc'Assign :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10624596759208237405##
                   14815822818024468325##
                   Lexical.$trModule
                   Lexical.$tc'Assign1) -}
95296bf56b64b087031ac202da230ad3
  $tc'Assign1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Assign"#) -}
3a13f4c96bd387904c102c772b3a637a
  $tc'BExp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11183913836116955921##
                   10664658227060227615##
                   Lexical.$trModule
                   Lexical.$tc'BExp1) -}
178f1d005be1efba56bd17098e30f847
  $tc'BExp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'BExp"#) -}
7b26befc3c170fe3a1313f71507ce6c6
  $tc'BVar :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11029925364230176598##
                   9553610236647741165##
                   Lexical.$trModule
                   Lexical.$tc'BVar1) -}
d68cb72a948662ff691c5bb62d611d24
  $tc'BVar1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'BVar"#) -}
0b3674e2a807a36c7197c0ec1fada061
  $tc'Car :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10121079055910968409##
                   14965446435930999739##
                   Lexical.$trModule
                   Lexical.$tc'Car1) -}
5bb07dcd8bc8d046f50afc657f762782
  $tc'Car1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Car"#) -}
001696b6adf7bff0830d61763e3531e7
  $tc'Cdr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6177743463128873071##
                   15946212069801000971##
                   Lexical.$trModule
                   Lexical.$tc'Cdr1) -}
207232d4ba9bb751fcfcf817f8942b11
  $tc'Cdr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Cdr"#) -}
7cfd6ae16c7e28fb9c4e6b7e9daad8ef
  $tc'CharLit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17775617628415114068##
                   8226772873336127008##
                   Lexical.$trModule
                   Lexical.$tc'CharLit1) -}
52b91483295728bf453fb238bfdcec69
  $tc'CharLit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CharLit"#) -}
a5144689ef53020b445b99866fed8d02
  $tc'Cons :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1266492064432660039##
                   12219053287052492624##
                   Lexical.$trModule
                   Lexical.$tc'Cons1) -}
7f4c8d09fa259e0ec0e63cff3521e85a
  $tc'Cons1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Cons"#) -}
ff01c0dc66c9ad6ef5689120fe786345
  $tc'Div :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1742575732019838510##
                   11983611521396445897##
                   Lexical.$trModule
                   Lexical.$tc'Div1) -}
897ffad0a2ffc8da04319ef5292f7250
  $tc'Div1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Div"#) -}
0780c903a77651aa2a89d9e851b209b3
  $tc'E :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15763801364953911940##
                   1490107564187385193##
                   Lexical.$trModule
                   Lexical.$tc'E1) -}
ac309934f048e1197aa9a05abd07405f
  $tc'E1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'E"#) -}
87caba5fc6d1c0778a9b370d2255eae7
  $tc'EVar :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5479954520392295161##
                   43272173630104549##
                   Lexical.$trModule
                   Lexical.$tc'EVar1) -}
f434c2def42c02f84439d72bf58fdd9d
  $tc'EVar1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'EVar"#) -}
560cc69fe72d4d833ba313bce0a50b6b
  $tc'Exp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4108313845108735081##
                   591558315623913578##
                   Lexical.$trModule
                   Lexical.$tc'Exp1) -}
6a463b7582bcc7f54553da2219331447
  $tc'Exp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Exp"#) -}
8de3896e444dec380be3cfe82c45a707
  $tc'FalseLit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6988907318508096479##
                   8525371522408729915##
                   Lexical.$trModule
                   Lexical.$tc'FalseLit1) -}
4592eb25d4bc952231685be26aabc427
  $tc'FalseLit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'FalseLit"#) -}
0faf1fa9f23bc9521d3a85a26d276e25
  $tc'G :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5735165878401783492##
                   8510842884225628463##
                   Lexical.$trModule
                   Lexical.$tc'G1) -}
6387fa6dd25e81aa8a12549c0e0363c5
  $tc'G1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'G"#) -}
acac1ee24ff71aaf65cc5a21b3710c0a
  $tc'GE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10751579481036597075##
                   15855735573719621302##
                   Lexical.$trModule
                   Lexical.$tc'GE1) -}
f5c5acb3213d8d2635eea0c5214e4f12
  $tc'GE1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GE"#) -}
9849123ee71713beaba45d9031193673
  $tc'L :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8607368555380044112##
                   15769774080417336144##
                   Lexical.$trModule
                   Lexical.$tc'L1) -}
3fca1dac19e728fee3ab276620064e07
  $tc'L1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'L"#) -}
1123ab38b98b67b604e18ac7f9d3eb3a
  $tc'LE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4698840828837716811##
                   13779687218544240595##
                   Lexical.$trModule
                   Lexical.$tc'LE1) -}
3a2d6eec084715695aef5f8dc50ed50d
  $tc'LE1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'LE"#) -}
31b85baece6067b33fed5bcf2cac2bb1
  $tc'LExp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17491553174931636323##
                   17922888343711655664##
                   Lexical.$trModule
                   Lexical.$tc'LExp1) -}
b042f838e9e41ad15b50cffaee8328b1
  $tc'LExp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'LExp"#) -}
6fed31c2204f6e4900d5ac87b148929a
  $tc'LVar :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12300281370081284078##
                   11765533185508115563##
                   Lexical.$trModule
                   Lexical.$tc'LVar1) -}
3f1dc01c5274218c1d321bf7e0edee02
  $tc'LVar1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'LVar"#) -}
dee2d5156a25ac8fe8d8d18b9f0704f2
  $tc'Mul :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12128571956092823606##
                   13000707515032235395##
                   Lexical.$trModule
                   Lexical.$tc'Mul1) -}
4285504474dd7bae06e37bc45e5f2de1
  $tc'Mul1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Mul"#) -}
02a8b8dd6b903ee6eeaecced34224ea9
  $tc'NExp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9096202722575388986##
                   5800950536000150772##
                   Lexical.$trModule
                   Lexical.$tc'NExp1) -}
c4471efeae00844def9b4bd74f665ffc
  $tc'NExp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'NExp"#) -}
91b05fb260862f1a89ea2e4456f4317b
  $tc'NVar :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4365523727995989880##
                   7095780634423794856##
                   Lexical.$trModule
                   Lexical.$tc'NVar1) -}
972a4281b87e943f960b032c62c856da
  $tc'NVar1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'NVar"#) -}
3a28f0a5ea43ab103bdba325d13c9fa9
  $tc'Nil :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   864787864109741725##
                   5077293843304505182##
                   Lexical.$trModule
                   Lexical.$tc'Nil1) -}
68ac4c3fddc58838f523a89f472359fe
  $tc'Nil1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Nil"#) -}
9a17b37c5f09b527ba495162c2ea4cd0
  $tc'Not :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12635746911396818058##
                   4080611567724657169##
                   Lexical.$trModule
                   Lexical.$tc'Not1) -}
bea48133086e90927a7ced857c20c122
  $tc'Not1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Not"#) -}
f645ab32fa30746699a51aafb15743de
  $tc'Number :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2409114811577918954##
                   8694303860859894187##
                   Lexical.$trModule
                   Lexical.$tc'Number1) -}
c5ed95cf4cf81a616a7d065fce7b74a9
  $tc'Number1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Number"#) -}
f4742a2a9864e360aaa88cdc751fe209
  $tc'Or :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7831470710715227235##
                   12173977507840334719##
                   Lexical.$trModule
                   Lexical.$tc'Or1) -}
cc8f087bbd00401d4bcfe044c954e4ae
  $tc'Or1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Or"#) -}
1ee3356c61f526c04601c6590aaca5fa
  $tc'StringLit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6104378600926343876##
                   4317732751143637090##
                   Lexical.$trModule
                   Lexical.$tc'StringLit1) -}
2008531728f4aa99923909d0155a575b
  $tc'StringLit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'StringLit"#) -}
dce7cccf2addf6c0f9e24ef9b5fa1035
  $tc'Sub :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3075127598377919677##
                   578710938796124431##
                   Lexical.$trModule
                   Lexical.$tc'Sub1) -}
d2014b81fa5cbe3fb6a5678c14183975
  $tc'Sub1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Sub"#) -}
783c11472308b0e3ed557fdf8182b6ef
  $tc'TrueLit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16800712756092802675##
                   15217153158089193075##
                   Lexical.$trModule
                   Lexical.$tc'TrueLit1) -}
74be4cd6903ccb0aa82bf2a3df3669b6
  $tc'TrueLit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TrueLit"#) -}
1330e6bf0d443375e5291e6a01fb8a22
  $tc'TypeBool :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8092892214135312435##
                   756224841358019730##
                   Lexical.$trModule
                   Lexical.$tc'TypeBool1) -}
2e8245adad3968b4e94ab576d3ece3aa
  $tc'TypeBool1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TypeBool"#) -}
b49500653ed04edc2de100bd68f55776
  $tc'TypeList :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11384085708360487912##
                   3300651587192744952##
                   Lexical.$trModule
                   Lexical.$tc'TypeList1) -}
d1bd2ed93ad95d70b706b925a7ebf317
  $tc'TypeList1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TypeList"#) -}
c5a2208a72bac4f6f65b253da452a9e7
  $tc'TypeNum :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2328659442526498648##
                   8491133458674195159##
                   Lexical.$trModule
                   Lexical.$tc'TypeNum1) -}
bb872b8cea2387553bbc5779dd64304e
  $tc'TypeNum1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TypeNum"#) -}
dcc51135095faf43c8e5a6d0e45c290f
  $tc'TypeUnknown :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7785571058544598813##
                   14950112745289263758##
                   Lexical.$trModule
                   Lexical.$tc'TypeUnknown1) -}
4bef9eccbe7df0ff09dd4aa0ddd36c07
  $tc'TypeUnknown1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TypeUnknown"#) -}
c61d7343de7186f09191aaaffc52b983
  $tcBoolExpr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16989509553191326950##
                   8629897970801195380##
                   Lexical.$trModule
                   Lexical.$tcBoolExpr1) -}
ad3fd51305db3f36701314816ab2c774
  $tcBoolExpr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "BoolExpr"#) -}
7e52858efdb0ae40c0dab4aee9f93ce5
  $tcExpr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15561500806290834535##
                   8073118814525102177##
                   Lexical.$trModule
                   Lexical.$tcExpr1) -}
d66e159fe983119d2a83e63444c08d33
  $tcExpr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Expr"#) -}
0f5b38841e69e61cb47540dacdc0ac98
  $tcListExpr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5447090433609456475##
                   15934687528452179276##
                   Lexical.$trModule
                   Lexical.$tcListExpr1) -}
63296577d6b8e92fe26436a56725b99b
  $tcListExpr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "ListExpr"#) -}
50b8ac5bc486cb1f50baa05a3b8eec98
  $tcNumExpr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16544676392682986282##
                   16352396957409393402##
                   Lexical.$trModule
                   Lexical.$tcNumExpr1) -}
c01119a26199c25988ccce784e99836f
  $tcNumExpr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "NumExpr"#) -}
2f68fc040b1ee15faa47d13b22b300cc
  $tcStmt :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13160000569339082947##
                   12958156164033270290##
                   Lexical.$trModule
                   Lexical.$tcStmt1) -}
2185baa9b06f5ebddc76c1ae7ba0eb6e
  $tcStmt1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Stmt"#) -}
9c3cc0c809700543acecea01615168b2
  $tcVar :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5525862615665634807##
                   13274982621465528963##
                   Lexical.$trModule
                   Lexical.$tcVar1) -}
482f9ed05a4e0dbc9250e78681ab5120
  $tcVar1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Var"#) -}
38d7f4f5115e6b0f01653b14b8f0fa03
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Lexical.$trModule2
                   Lexical.$trModule1) -}
9f50600cbd7c95036019458f2538622b
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Lexical"#) -}
031205b3068f17d3e9c5ff6eddbdfbe6
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Compiler-0.1.0.0-A5AqcFYQOeY4hOCoTusz4T"#) -}
a5b053a35e99ae10936ec3b6c01f4253
  $w$cshowsPrec :: GHC.Prim.Int# -> Lexical.Expr -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) (w :: Lexical.Expr) ->
                 case w of wild {
                   Lexical.EVar b1
                   -> let {
                        lvl41 :: GHC.Base.String = Lexical.$fEqVar_$cshow b1
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Lexical.$fShowExpr6
                             (GHC.Base.++ @ GHC.Types.Char lvl41 x)
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Lexical.$fShowExpr6
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   lvl41
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 x))) }
                   Lexical.BExp b1
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Lexical.$fShowExpr5
                             (Lexical.$fShowBoolExpr_$cshowsPrec Lexical.$fShowExpr4 b1 x)
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Lexical.$fShowExpr5
                                (Lexical.$fShowBoolExpr_$cshowsPrec
                                   Lexical.$fShowExpr4
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 x))) }
                   Lexical.NExp b1
                   -> let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = Lexical.$w$cshowsPrec1 11# b1
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++ @ GHC.Types.Char Lexical.$fShowExpr3 (g x)
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Lexical.$fShowExpr3
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 x))) }
                   Lexical.LExp b1
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Lexical.$fShowExpr2
                             (Lexical.$fShowExpr_$cshowsPrec Lexical.$fShowExpr4 b1 x)
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Lexical.$fShowExpr2
                                (Lexical.$fShowExpr_$cshowsPrec
                                   Lexical.$fShowExpr4
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 x))) } }) -}
11be7d829d1ed81418e5c306782c3dec
  $w$cshowsPrec1 ::
    GHC.Prim.Int# -> Lexical.NumExpr -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
c83303050bc67f175a82e1e5219a4727
  $w$cshowsPrec2 :: GHC.Prim.Int# -> Lexical.Stmt -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) (w :: Lexical.Stmt) ->
                 case w of wild {
                   Lexical.Assign b1 b2
                   -> let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = Lexical.$w$cshowsPrec 11# b2
                      } in
                      let {
                        lvl41 :: GHC.Base.String = Lexical.$fEqVar_$cshow b1
                      } in
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ (x :: GHC.Base.String) ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            Lexical.$fShowStmt3
                            (GHC.Base.++
                               @ GHC.Types.Char
                               lvl41
                               (GHC.Types.: @ GHC.Types.Char GHC.Show.showSpace1 (g x)))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False -> p
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 x)) }
                   Lexical.Exp b1
                   -> let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = Lexical.$w$cshowsPrec 11# b1
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++ @ GHC.Types.Char Lexical.$fShowStmt2 (g x)
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Lexical.$fShowStmt2
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 x))) } }) -}
64840033862f6700055331b7ed3b6137
  $waddParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
891ea4b4f4db9ecd58694e8cc789f94e
  $wandParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
e5f1b68d4b7ddc4ad575b72e49eabc5c
  $wassignParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
6deb050ce85ac28c8ffa3d05f68e3c07
  $wbexpParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Expr
                            r) ->
                 Lexical.$wboolExprParser
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)
                      (more' :: Data.Attoparsec.Internal.Types.More)
                      (a1 :: Lexical.BoolExpr) ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    w2
                      t'
                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      (Lexical.BExp a1) })) -}
2876ea1202e743193e4f3c682f8d8eee
  $wboolExprParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,U>,
     Inline: [0] -}
44d2fed6b1dcd4df861b578b8c5a6f2b
  $wboolVarParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
18ef97ae0da9a65c68abd7bd6ceec082
  $wcarParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
0c5e728c49b433e979893a428a1730b7
  $wcdrParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
534e1cb250e56cadf4757f56add2dd78
  $wcharParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
8fc60716761e43d41f332f9469e81032
  $wconParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
45a649b068d069b68b8badf3a2fe7965
  $wdivParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
8dbd61cc12956e0e7a09a3372d91b2e5
  $wequalParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
71b626af2302ca48481cd67fb02b6b83
  $wexprParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Expr
                            r) ->
                 let {
                   pos :: GHC.Types.Int = GHC.Types.I# ww5
                 } in
                 let {
                   lose :: Data.Attoparsec.Internal.Types.Failure
                             Data.Text.Internal.Text
                             (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                             r
                     {- Arity: 5,
                        Strictness: <S(SSSLL),1*U(U,U,U,U,U)><L,A><L,U><L,A><L,A>,
                        Unfolding: InlineRule (5, True, True)
                                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                                               Data.Text.Internal.Text)
                                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                                      (more' :: Data.Attoparsec.Internal.Types.More)
                                      (_ctx :: [GHC.Base.String])
                                      (_msg :: GHC.Base.String) ->
                                    Lexical.exprParser3
                                      @ r
                                      t'
                                      pos `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                                      more'
                                      w1
                                      w2) -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.Text.Internal.Text)
                       (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                       (more' :: Data.Attoparsec.Internal.Types.More)
                       (_ctx :: [GHC.Base.String])
                       (_msg :: GHC.Base.String) ->
                     case t'
                            `cast`
                          (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww6 { Data.Attoparsec.Text.Buffer.Buf ww7 ww8 ww9 ww10 ww11 ->
                     Lexical.$wlexpParser @ r ww7 ww8 ww9 ww10 ww11 ww5 more' w1 w2 }
                 } in
                 let {
                   lose1 :: Data.Attoparsec.Internal.Types.Failure
                              Data.Text.Internal.Text
                              (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                              r
                     {- Arity: 5,
                        Strictness: <S(SSSLL),1*U(U,U,U,U,U)><L,A><L,U><L,A><L,A>,
                        Unfolding: InlineRule (5, True, True)
                                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                                               Data.Text.Internal.Text)
                                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                                      (more' :: Data.Attoparsec.Internal.Types.More)
                                      (_ctx :: [GHC.Base.String])
                                      (_msg :: GHC.Base.String) ->
                                    Lexical.exprParser2
                                      @ r
                                      t'
                                      pos `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                                      more'
                                      lose
                                      w2) -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.Text.Internal.Text)
                       (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                       (more' :: Data.Attoparsec.Internal.Types.More)
                       (_ctx :: [GHC.Base.String])
                       (_msg :: GHC.Base.String) ->
                     case t'
                            `cast`
                          (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww6 { Data.Attoparsec.Text.Buffer.Buf ww7 ww8 ww9 ww10 ww11 ->
                     Lexical.$wnexpParser @ r ww7 ww8 ww9 ww10 ww11 ww5 more' lose w2 }
                 } in
                 Lexical.$wvarParser
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                      (more' :: Data.Attoparsec.Internal.Types.More)
                      (_ctx :: [GHC.Base.String])
                      (_msg :: GHC.Base.String) ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww6 { Data.Attoparsec.Text.Buffer.Buf ww7 ww8 ww9 ww10 ww11 ->
                    Lexical.$wbexpParser
                      @ r
                      ww7
                      ww8
                      ww9
                      ww10
                      ww11
                      ww5
                      more'
                      lose1
                      w2 })
                   w2) -}
a0de76f1ff6329cbe041d63c891a5afb
  $wfalseParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
e5d8f3984f67c3d26c9620fa7813fc46
  $wfloatParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 let {
                   lvl41 :: Data.Attoparsec.Internal.Types.State
                              Data.Text.Internal.Text
                            -> Data.Attoparsec.Internal.Types.Pos
                            -> Data.Attoparsec.Internal.Types.More
                            -> GHC.Types.Double
                            -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
                     {- Arity: 4 -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.Text.Internal.Text)
                       (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                       (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                       (a1 :: GHC.Types.Double)[OneShot] ->
                     case pos'
                            `cast`
                          (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                     w2
                       t'
                       nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                       more'
                       (Lexical.Number a1) }
                 } in
                 Lexical.$wgo2
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: ())[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    Data.Attoparsec.Text.$wdouble @ r t' ipv1 more' w1 lvl41 })) -}
3f1fddbd43cc3c65d80413f9c0686cc1
  $wgeParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
8849b66b9e3a806db03a36db118b4f18
  $wgo1 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         ()
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 8,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
e7026cead973c8396a5194520e7aa792
  $wgo2 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         ()
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 8,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
75dcfc865d1bc5a25e87cff119c679d8
  $wgo5 ::
    GHC.Prim.Int#
    -> Data.Set.Base.Set GHC.Base.String
    -> [GHC.Base.String]
    -> Data.Set.Base.Set GHC.Base.String
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
810a19c87565d2d9de308813f0c4ed8b
  $wgreatParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
290d893146d420091e24ae45db2ed401
  $wleParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
30b97b8ee0e50b06b36202d5c3c09a27
  $wlessParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
2f9a6995ec8e4343755ab559593a9258
  $wlexeme ::
    Data.Attoparsec.Text.Internal.Parser a
    -> forall r.
       GHC.Prim.ByteArray#
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> Data.Attoparsec.Internal.Types.More
       -> Data.Attoparsec.Internal.Types.Failure
            Data.Text.Internal.Text
            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
            r
       -> Data.Attoparsec.Internal.Types.Success
            Data.Text.Internal.Text
            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
            a
            r
       -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 10,
     Strictness: <L,C(C1(C1(C1(C1(U)))))><S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: Data.Attoparsec.Text.Internal.Parser a)
                   @ r
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (w1 :: Data.Attoparsec.Internal.Types.More)
                   (w2 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w3 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            a
                            r) ->
                 Lexical.$wgo1
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: ())[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    w `cast`
                    (Data.Attoparsec.Internal.Types.N:Parser[0]
                         <Data.Text.Internal.Text>_N <a>_R)
                      @ r
                      t'
                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      w2
                      w3 })) -}
8362c5fba24392dbf8c70305995690f4
  $wlexpParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Expr
                            r) ->
                 Lexical.$wlistExprParser
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Lexical.ListExpr)[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    w2
                      t'
                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      (Lexical.LExp a1) })) -}
b4437f8952f4365c4a599f52aec06ab4
  $wlistExprParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
fcb40d15fef59343aac799899bcc2e2e
  $wlistVarParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
9ec1c6d1cae4eea52d3a75f0733d5c93
  $wmulParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
825fd9a2045cc98b097b2081f746797c
  $wnexpParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Expr
                            r) ->
                 Lexical.$wnumExprParser
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Lexical.NumExpr)[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    w2
                      t'
                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      (Lexical.NExp a1) })) -}
fbc9ab606a5e4236bac45c8cbc9b1c0f
  $wnotParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
484a8d5bf08397b1eb608055bbbff849
  $wnullParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
fb2e313a62aa148d8d8d224ead852f60
  $wnumExprParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
2059cdb4936c7953df8fb0092e3d5209
  $wnumVarParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
9104c069a89583c70fecef670093b747
  $worParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
80e7d9abfdb62880b96c46255c8926c3
  $wstmtExprParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Stmt
                            r) ->
                 Lexical.$wexprParser
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: Lexical.Expr)[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    w2
                      t'
                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      (Lexical.Exp a1) })) -}
62b78c7e5eaf5d0dcda504bd267d77e6
  $wstmtParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Stmt
                            r) ->
                 Lexical.$wstmtExprParser
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (_pos' :: Data.Attoparsec.Internal.Types.Pos)
                      (more' :: Data.Attoparsec.Internal.Types.More)
                      (_ctx :: [GHC.Base.String])
                      (_msg :: GHC.Base.String) ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww6 { Data.Attoparsec.Text.Buffer.Buf ww7 ww8 ww9 ww10 ww11 ->
                    Lexical.$wassignParser @ r ww7 ww8 ww9 ww10 ww11 ww5 more' w1 w2 })
                   w2) -}
3c9877caf63392e5ec1650416357455e
  $wstringParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
0e5970f38c7ca1b4682ed12ac2e57177
  $wsubParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
a91334dfc37597ec2435cca9dc373aa3
  $wtrueParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
b8bb22623cca82ca96ef9c4311c049ba
  $wvarParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
71b7b2323e18460994b0d1cd717ba07c
  data BoolExpr
    = BVar Lexical.Var
    | FalseLit
    | TrueLit
    | Not Lexical.BoolExpr
    | And Lexical.BoolExpr Lexical.BoolExpr
    | Or Lexical.BoolExpr Lexical.BoolExpr
a5b053a35e99ae10936ec3b6c01f4253
  data Expr
    = EVar Lexical.Var
    | BExp Lexical.BoolExpr
    | NExp Lexical.NumExpr
    | LExp Lexical.ListExpr
d070c5300eee747c23b50fd3670a8046
  data ListExpr
    = LVar Lexical.Var
    | Nil
    | Cons Lexical.ListExpr Lexical.ListExpr
    | Car Lexical.ListExpr
    | Cdr Lexical.ListExpr
    | CharLit GHC.Types.Char
    | StringLit GHC.Base.String
11be7d829d1ed81418e5c306782c3dec
  data NumExpr
    = NVar Lexical.Var
    | Number GHC.Types.Double
    | Add Lexical.NumExpr Lexical.NumExpr
    | Sub Lexical.NumExpr Lexical.NumExpr
    | Mul Lexical.NumExpr Lexical.NumExpr
    | Div Lexical.NumExpr Lexical.NumExpr
    | E Lexical.NumExpr Lexical.NumExpr
    | L Lexical.NumExpr Lexical.NumExpr
    | LE Lexical.NumExpr Lexical.NumExpr
    | G Lexical.NumExpr Lexical.NumExpr
    | GE Lexical.NumExpr Lexical.NumExpr
c83303050bc67f175a82e1e5219a4727
  data Stmt = Assign Lexical.Var Lexical.Expr | Exp Lexical.Expr
84f1d68d568ac221a0f7a055af6faaa3
  data Var
    = TypeBool Data.Text.Internal.Text
    | TypeNum Data.Text.Internal.Text
    | TypeList Data.Text.Internal.Text
    | TypeUnknown Data.Text.Internal.Text
c38299f4853d92019a2c18ae875a9b1a
  addParser :: Data.Attoparsec.Text.Internal.Parser Lexical.NumExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.addParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.NumExpr>_R)) -}
f289dfc67700c7b301ab99ca8ce4733c
  addParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$waddParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
cbf092b153f88274f612e4df461b47e3
  andParser :: Data.Attoparsec.Text.Internal.Parser Lexical.BoolExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.andParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.BoolExpr>_R)) -}
8660dfb8aa20183ca7483a26223db33e
  andParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.BoolExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wandParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
b856427b17e4e64e98ed19bea15ee633
  assignParser :: Data.Attoparsec.Text.Internal.Parser Lexical.Stmt
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.assignParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.Stmt>_R)) -}
2a3176a806e46c9a81fc5ccb0e8917f2
  assignParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Stmt
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wassignParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
a26f0a97160eb4dc2046b16f6e3b7432
  bexpParser :: Data.Attoparsec.Text.Internal.Parser Lexical.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.bexpParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.Expr>_R)) -}
6fdb3e035409140d7f1026579f77f194
  bexpParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wbexpParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
a0239851ea21c294bbb74c2db65cb9e3
  boolExprParser ::
    Data.Attoparsec.Text.Internal.Parser Lexical.BoolExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),U(U)><L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lexical.boolExprParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.BoolExpr>_R)) -}
0e7b236fbb1c0ee28b9bfb9b509b9518
  boolExprParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),U(U)><L,U><L,U><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.BoolExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wboolExprParser
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   w2
                   w3
                   w4 } }) -}
8cfc0a1d4c7a7e694b9707936b7e07da
  boolVarParser ::
    Data.Attoparsec.Text.Internal.Parser Lexical.BoolExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.boolVarParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.BoolExpr>_R)) -}
2647453fb7dfe12adbc2d94ef1b0584f
  boolVarParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.BoolExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wboolVarParser
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   w2
                   w3
                   w4 } }) -}
de8ff065422df336b86ea22c76be60c3
  carParser :: Data.Attoparsec.Text.Internal.Parser Lexical.ListExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.carParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.ListExpr>_R)) -}
7176a09f48285cb5b067d755b2d288d1
  carParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.ListExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wcarParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
4178a6f44435157b2dda242452dc1edd
  cdrParser :: Data.Attoparsec.Text.Internal.Parser Lexical.ListExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.cdrParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.ListExpr>_R)) -}
780029178abe4b6891c1e7dde0a214f4
  cdrParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.ListExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wcdrParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
f15ab19bf4ab301ae799a94be689500f
  charParser :: Data.Attoparsec.Text.Internal.Parser Lexical.ListExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.charParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.ListExpr>_R)) -}
b2e6f648c06f9901ca0326ecb6421af1
  charParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.ListExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wcharParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
93b933ff652c8e2ac9eca1cfb4735e94
  conParser :: Data.Attoparsec.Text.Internal.Parser Lexical.ListExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.conParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.ListExpr>_R)) -}
f38ffeefeed9bbb270c14f35004e528d
  conParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.ListExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wconParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
ecb82fcada7e31f5272dbc8bcb414832
  divParser :: Data.Attoparsec.Text.Internal.Parser Lexical.NumExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.divParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.NumExpr>_R)) -}
6a16da071181ec6324ccc415df3e294c
  divParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wdivParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
0b4f75a26022d344e0bba0c5d260454e
  equalParser :: Data.Attoparsec.Text.Internal.Parser Lexical.NumExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.equalParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.NumExpr>_R)) -}
1183bb5b08340b5f93895e4aac328ea5
  equalParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wequalParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
220b2bfdea7de7de138d34f2c457c13f
  exprParser :: Data.Attoparsec.Text.Internal.Parser Lexical.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.exprParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.Expr>_R)) -}
c3fc449db676054d1c55a24f3cb6d15e
  exprParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wexprParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
db2a95892fbfed15c4535e96ab20503f
  exprParser2 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wnexpParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
e17b4074f90bd0f9a592aeaeb64f9256
  exprParser3 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wlexpParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
3710e5fd070ff1c087c4e30763dee01b
  falseParser ::
    Data.Attoparsec.Text.Internal.Parser Lexical.BoolExpr
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Lexical.falseParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.BoolExpr>_R)) -}
c5ada72d1578871814ecd1584affde78
  falseParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Unfolding: (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.BoolExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wgo1
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   w2
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: ())[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww8 { Data.Attoparsec.Text.Buffer.Buf ww9 ww10 ww11 ww12 ww13 ->
                    Lexical.$wfalseParser
                      @ r
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ipv1
                      more'
                      w3
                      w4 } }) } }) -}
e6f27e64a3c8159c9effbe3ca1d8cf2c
  floatParser :: Data.Attoparsec.Text.Internal.Parser Lexical.NumExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.floatParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.NumExpr>_R)) -}
6753d70951ceddaa559681546f76a64e
  floatParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wfloatParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
cebe5fa90fc4264ed2d4e4ea0732bc24
  geParser :: Data.Attoparsec.Text.Internal.Parser Lexical.NumExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.geParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.NumExpr>_R)) -}
419181f623cbc95d2f3f6a9306e760ba
  geParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wgeParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
7987b5c003f65fccefbc434d8a2e56f0
  greatParser :: Data.Attoparsec.Text.Internal.Parser Lexical.NumExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.greatParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.NumExpr>_R)) -}
1499a42b5863b818e46b5174f3bf405a
  greatParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wgreatParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
4a6b488e75d3a6020438333cda575773
  keywords :: Data.Set.Base.Set GHC.Base.String
  {- Unfolding: (Lexical.$sfromList Lexical.keywords1) -}
8610c309ae961433d311e128e7dc5400
  keywords1 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lexical.keywords14
                   Lexical.keywords2) -}
d54ff98550a2814de06940a316994874
  keywords10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "car"#) -}
eb7465db4f9fb188d04faafcb2302ab4
  keywords11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "cons"#) -}
eb48dc841b465dd6327a5138bb7085d5
  keywords12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "nil"#) -}
6a61c831308b5dfe07c4067a97e83d4e
  keywords13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "False"#) -}
b7acd26bd255ea929806c643f3316c2c
  keywords14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "True"#) -}
bf01e9c34c1328751ab1da320db9b4fb
  keywords2 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lexical.keywords13
                   Lexical.keywords3) -}
7bc938ba2bcc9fd746710241c70abeec
  keywords3 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lexical.keywords12
                   Lexical.keywords4) -}
2eb746c0c291c1165ec0bf0f600ff930
  keywords4 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lexical.keywords11
                   Lexical.keywords5) -}
19f53ef11883bb8fbb7444bd26dde657
  keywords5 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lexical.keywords10
                   Lexical.keywords6) -}
07c78d902f8038191029b91fcbd79559
  keywords6 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lexical.keywords9
                   Lexical.keywords7) -}
c5ddd30e66772f400b17f33423fe2177
  keywords7 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lexical.keywords8
                   (GHC.Types.[] @ GHC.Base.String)) -}
e9ca6fc1c56906826b8c0a970b09cc59
  keywords8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "set!"#) -}
07cac8d07e8130b1bf429ae951677aaa
  keywords9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "cdr"#) -}
a16484566d638b1c86b395be022d5449
  leParser :: Data.Attoparsec.Text.Internal.Parser Lexical.NumExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.leParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.NumExpr>_R)) -}
37d674b28c905b9a2fb329b2d85c76ae
  leParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wleParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
d1bf7b083fdefec67a8c320d639dc4dc
  lessParser :: Data.Attoparsec.Text.Internal.Parser Lexical.NumExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.lessParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.NumExpr>_R)) -}
b65ed5824032e87975a60c207830559e
  lessParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wlessParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
b80edf2cfd4f06cb1da4c16afaea4ef4
  lexeme ::
    Data.Attoparsec.Text.Internal.Parser a
    -> Data.Attoparsec.Text.Internal.Parser a
  {- Arity: 6,
     Strictness: <L,C(C1(C1(C1(C1(U)))))><S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lexical.lexeme1
                  `cast`
                (forall (a :: <*>_N).
                 <Data.Attoparsec.Text.Internal.Parser a>_R
                 ->_R Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                               <Data.Text.Internal.Text>_N <a>_R)) -}
b85680ec65f2ba0fe99f62bdf1fa347c
  lexeme1 ::
    Data.Attoparsec.Text.Internal.Parser a
    -> forall r.
       Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
       -> Data.Attoparsec.Internal.Types.Pos
       -> Data.Attoparsec.Internal.Types.More
       -> Data.Attoparsec.Internal.Types.Failure
            Data.Text.Internal.Text
            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
            r
       -> Data.Attoparsec.Internal.Types.Success
            Data.Text.Internal.Text
            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
            a
            r
       -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 6,
     Strictness: <L,C(C1(C1(C1(C1(U)))))><S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, False)
                (\ @ a
                   (w :: Data.Attoparsec.Text.Internal.Parser a)
                   @ r
                   (w1 :: Data.Attoparsec.Internal.Types.State
                            Data.Text.Internal.Text)
                   (w2 :: Data.Attoparsec.Internal.Types.Pos)
                   (w3 :: Data.Attoparsec.Internal.Types.More)
                   (w4 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w5 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            a
                            r) ->
                 case w1
                        `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w2
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wlexeme @ a w @ r ww1 ww2 ww3 ww4 ww5 ww7 w3 w4 w5 } }) -}
215b525151acf55d0fca3235f52466e5
  lexpParser :: Data.Attoparsec.Text.Internal.Parser Lexical.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.exprParser3
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.Expr>_R)) -}
c7e0bfa8132e4306c74aaf9d81469c1f
  listExprParser ::
    Data.Attoparsec.Text.Internal.Parser Lexical.ListExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.listExprParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.ListExpr>_R)) -}
9e13cf7b124a036d442968de5c6ac81f
  listExprParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.ListExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wlistExprParser
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   w2
                   w3
                   w4 } }) -}
8eb1e6e97a16a7abde7e39bd577bc6fd
  listVarParser ::
    Data.Attoparsec.Text.Internal.Parser Lexical.ListExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.listVarParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.ListExpr>_R)) -}
025156de3de9d3261ff3b107703b719b
  listVarParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.ListExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wlistVarParser
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   w2
                   w3
                   w4 } }) -}
fad2f2d7f91b1b3cce2670eb09319ca5
  mulParser :: Data.Attoparsec.Text.Internal.Parser Lexical.NumExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.mulParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.NumExpr>_R)) -}
9a01924bf9d0cbf43b266a0b8d4f457f
  mulParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wmulParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
759094a214807d7a19f2bd1d5e09015c
  nexpParser :: Data.Attoparsec.Text.Internal.Parser Lexical.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.exprParser2
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.Expr>_R)) -}
34ae3631386b8028078f07dbcdcc4e38
  notParser :: Data.Attoparsec.Text.Internal.Parser Lexical.BoolExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.notParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.BoolExpr>_R)) -}
da9c4bc031fbae78d9fd651c0d009b8a
  notParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.BoolExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wnotParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
b899631879c63e604a0c56a271d46aae
  nullParser :: Data.Attoparsec.Text.Internal.Parser Lexical.ListExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.nullParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.ListExpr>_R)) -}
4c5fc2d1e933d9c9ec6540b94d9b4bbf
  nullParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.ListExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wnullParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
b9220bd006cb0aeea0e16f05bb8b602c
  numExprParser ::
    Data.Attoparsec.Text.Internal.Parser Lexical.NumExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.numExprParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.NumExpr>_R)) -}
b1d64e882c20d3dedadde58b6c9a9ee9
  numExprParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wnumExprParser
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   w2
                   w3
                   w4 } }) -}
09aaa5ea32b56bb16955193939172e11
  numVarParser ::
    Data.Attoparsec.Text.Internal.Parser Lexical.NumExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.numVarParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.NumExpr>_R)) -}
a3effc7def12932cbbcf7ecce76afd08
  numVarParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wnumVarParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
512bd48ec605294764e2465850eda0e9
  orParser :: Data.Attoparsec.Text.Internal.Parser Lexical.BoolExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.orParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.BoolExpr>_R)) -}
30c92afda4c0311805cb2a2b99746542
  orParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.BoolExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$worParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
a3727660c29e710984139688d29b2828
  stmtExprParser :: Data.Attoparsec.Text.Internal.Parser Lexical.Stmt
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.stmtExprParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.Stmt>_R)) -}
6b62ca46fd08754d42e1e6422018ae99
  stmtExprParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Stmt
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wstmtExprParser
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   w2
                   w3
                   w4 } }) -}
f7b28c8c04731185c428ad626a29e19f
  stmtParser :: Data.Attoparsec.Text.Internal.Parser Lexical.Stmt
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.stmtParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.Stmt>_R)) -}
05d9110039a74acdec1eac193435093c
  stmtParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Stmt
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Stmt
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wstmtParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
00b5c610137affa1c51b717a809c3593
  stringParser ::
    Data.Attoparsec.Text.Internal.Parser Lexical.ListExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.stringParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.ListExpr>_R)) -}
2d3b78bab92afd0c27c61521b75b961e
  stringParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.ListExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.ListExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wstringParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
144c9414d7200858c16116aa60a628d2
  subParser :: Data.Attoparsec.Text.Internal.Parser Lexical.NumExpr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.subParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.NumExpr>_R)) -}
33451cbc4753a234cc6b276f4ecffd20
  subParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.NumExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.NumExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wsubParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
1db7446f10d28ce12e58282b9b97af25
  trueParser :: Data.Attoparsec.Text.Internal.Parser Lexical.BoolExpr
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Lexical.trueParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.BoolExpr>_R)) -}
e49aa10d999e80ccc64d9aa85a7fbbe3
  trueParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.BoolExpr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Unfolding: (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.BoolExpr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wgo1
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   w2
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: ())[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww8 { Data.Attoparsec.Text.Buffer.Buf ww9 ww10 ww11 ww12 ww13 ->
                    Lexical.$wtrueParser
                      @ r
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ipv1
                      more'
                      w3
                      w4 } }) } }) -}
a94d5039a4914d6c8617232e522c6e82
  varParser :: Data.Attoparsec.Text.Internal.Parser Lexical.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lexical.varParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lexical.Expr>_R)) -}
dc96fee72193b2cb0c3d139e04eff827
  varParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lexical.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lexical.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lexical.$wvarParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
instance GHC.Classes.Eq [Lexical.Var] = Lexical.$fEqVar
instance GHC.Classes.Ord [Lexical.Var] = Lexical.$fOrdVar
instance GHC.Show.Show [Lexical.BoolExpr] = Lexical.$fShowBoolExpr
instance GHC.Show.Show [Lexical.Expr] = Lexical.$fShowExpr
instance GHC.Show.Show [Lexical.ListExpr] = Lexical.$fShowListExpr
instance GHC.Show.Show [Lexical.NumExpr] = Lexical.$fShowNumExpr
instance GHC.Show.Show [Lexical.Stmt] = Lexical.$fShowStmt
instance GHC.Show.Show [Lexical.Var] = Lexical.$fShowVar
"SPEC/Lexical fromList @ String" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                             GHC.Base.String)
  Data.Set.Base.fromList @ [GHC.Types.Char] $dOrd
  = Lexical.$sfromList
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

