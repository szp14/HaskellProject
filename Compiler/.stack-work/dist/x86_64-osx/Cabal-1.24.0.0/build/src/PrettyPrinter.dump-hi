
==================== FINAL INTERFACE ====================
2017-01-14 09:36:07.978472 UTC

interface Compiler-0.1.0.0-57coiQcmnJXARK4xYqZ5Rd:PrettyPrinter [orphan module] 8001
  interface hash: d3372237a6270a75a7f8212adbdbdf9a
  ABI hash: 94b7a10b3d2e718739a283ef4638dfa3
  export-list hash: 41d74f5a644d71dea58e42c2f5691932
  orphan hash: bba7c6cd358ed9a32fbbf1ad0b91aca6
  flag hash: f5b889281a3ec7e36516336dd527c22b
  sig of: Nothing
  used TH splices: False
  where
exports:
  PrettyPrinter.debuger
  PrettyPrinter.prettyPrinter
  PrettyPrinter.printBool
  PrettyPrinter.printExpr
  PrettyPrinter.printList
  PrettyPrinter.printNum
  PrettyPrinter.printSL
  PrettyPrinter.printStmt
module dependencies: Grammar
package dependencies: array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43
                      base-4.9.0.0 binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-Ctl752zbguF6QanxurLOm2
                      integer-gmp-1.0.0.1
                      integer-logarithms-1@integer-logarithms-1-E6LvTbkhTkGIa6wPB3rtJw
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      scientific-0.3.4.10@scientific-0.3.4.10-2Y658Wts4fDGgAkWhKOJwC
                      text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs
                      transformers-0.5.2.0@transformers-0.5.2.0
                      vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43:Data.Attoparsec.Text.Internal
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-Ctl752zbguF6QanxurLOm2:Data.Hashable.Generic
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Fusion.Bundle
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43:Data.Attoparsec.Internal.Types
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Functor.Identity base-4.9.0.0:Data.List.NonEmpty
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Semigroup
                         base-4.9.0.0:Data.Type.Equality base-4.9.0.0:Data.Version
                         base-4.9.0.0:Data.Void base-4.9.0.0:GHC.Exts
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text
                         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Lazy
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector
import  -/  Grammar 0e49269890a957871754979fc1cf94a7
  exports: 5a094fe8ecb7bd19ccbd179c56554a95
  Add 38b3c83707acfecda9cbc6924ebf67fc
  And 156422e1a089255131ecb070bd133709
  Assign 77fb038b2b41456029741afc130adde8
  BExp 91e31d55bae37d3765d68f74bcb93d70
  BVar 91d59379b3ab3247db630db76ea742f1
  BoolExpr 916f14c0d0e4787bb81877d92017786a
  Car 125222f7d16360ba2681cf409a8ed81e
  Cdr b0c722752bb1226256db9fce3038cb81
  CharLit 77f79bfbf25ecdbadeabeaac51cc66ae
  Cons 2230ba11749f7a317c5343eaac8abf3a
  Cycle c972101dc1d866874033d4e92d6cd539
  Div 3a79c7dcf305617768c8723ac3dc449b
  E 02fdb3084092a345575bf624a3f68929
  EVar 4bee3979415ff3ac17732e109c259710
  Exp 46c6a3cb406f57d5fd85c210b6e3d093
  Expr 916f14c0d0e4787bb81877d92017786a
  FalseLit b189796f629d14ed3ef4567617cf5f78
  G 01c581bcc12b25773200316c5a057616
  GE 057d12ef1f9618aa625a2870f5eb5bcd
  If ea8bcadd9b5e4310f68084221ef92bb4
  L 51908d6978b753b7d9bf8eed535ccd82
  LE f6167a3abd06653208a76c890c545737
  LExp 8efd4499e60d2b320d2e8fb12f0dc92c
  LVar 478ad56636e1f32fc0bb1cc99e7aa401
  ListExpr 916f14c0d0e4787bb81877d92017786a
  Mul f9133dc7bc88ca2593989ab9d690f92f
  NExp ad8fdbe97161412762d2ce40784d05e9
  NVar c103b90c80a00de799221fdf6f2ecf91
  New_vec 55f9328748df227ca1822948a8297fc2
  Nil 4cca6176dc56bc79b617b84624ecc51b
  Not 48ae145b482f55c348fe385c61b79bd9
  NumExpr 916f14c0d0e4787bb81877d92017786a
  Number 5f59d2443e8595ac827d6ad7b3561c84
  One 9430388d72ea9c0ae1c981f133e45c44
  Or 7c673e9004d9f3deb469ecae6660228a
  Set_vec b5301e1e4078631bc74b620f4d326d09
  Skip a72dd419f53156e56a02cf4dcabb38ae
  Stmt 498941a077b90556297a5f3954be9f70
  Stmt_cycle 20ec3c4650c77315863a021d0f78333e
  Stmt_list 498941a077b90556297a5f3954be9f70
  StringLit 7591db41b72703450233a6a4c40379d8
  Sub 6a224b0292cf8ce49cfbdb0f8a0db9aa
  TrueLit b5229c6abf3bd50e0bba4963104e417c
  While 0a690d30f4a938ffc8ee5595a4b3b5ec
  parse 72a0f204bbaffec576aa075481b3eeef
import  -/  attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43:Data.Attoparsec.Text d3cff0ad187398020adcebc8a0709b72
import  -/  base-4.9.0.0:Control.Applicative 7728b33d6969dce59e89474349eb1397
import  -/  base-4.9.0.0:Data.Either bd9f099b82d4ed2d98c56d7144ac6957
import  -/  base-4.9.0.0:Data.Functor 6fc476505db88d678632a4a838125f13
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Set 3ed2324fd1e757464a8ac2b636a64e5a
import  -/  pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint abe8aeb00d775221281f89090d9fbe2a
import  -/  pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ 605911b9dce2ae2537926ad94c7cbb11
import  -/  text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text 1e73069de2859bae8530c14767b0c6af
import  -/  text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Internal bfb0ec5fde448272375be97e2314e47b
50c8ba80ca88835e4732f6c198a9a966
  $fShowBoolExpr :: GHC.Show.Show Grammar.BoolExpr
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Grammar.BoolExpr
                  PrettyPrinter.$fShowBoolExpr_$cshowsPrec
                  PrettyPrinter.$fShowBoolExpr_$cshow
                  PrettyPrinter.$fShowBoolExpr_$cshowList -}
4b331487ff489dc5546dc26d40710bef
  $fShowBoolExpr1 ::
    Grammar.BoolExpr -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ (x :: Grammar.BoolExpr)
                   (s30 :: GHC.Base.String)[OneShot] ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (PrettyPrinter.$fShowBoolExpr_$cshow x)
                   s30) -}
da9cd38929d3bfeab63df0fa8dc75614
  $fShowBoolExpr2 ::
    Text.PrettyPrint.Annotated.HughesPJ.AnnotDetails ()
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ (ds :: Text.PrettyPrint.Annotated.HughesPJ.AnnotDetails
                            ())
                   (eta :: GHC.Base.String)[OneShot] ->
                 case ds of wild {
                   DEFAULT -> eta
                   Text.PrettyPrint.Annotated.HughesPJ.NoAnnot s30 dt1
                   -> case s30 of wild1 {
                        Text.PrettyPrint.Annotated.HughesPJ.Chr dt
                        -> GHC.Types.: @ GHC.Types.Char (GHC.Types.C# dt) eta
                        Text.PrettyPrint.Annotated.HughesPJ.Str s31
                        -> GHC.Base.++ @ GHC.Types.Char s31 eta
                        Text.PrettyPrint.Annotated.HughesPJ.PStr s31
                        -> GHC.Base.++ @ GHC.Types.Char s31 eta } }) -}
232f85bf8c67074769a7762a865cdd0f
  $fShowBoolExpr_$cshow :: Grammar.BoolExpr -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Grammar.BoolExpr) ->
                 Text.PrettyPrint.Annotated.HughesPJ.fullRenderAnn
                   @ ()
                   @ GHC.Base.String
                   Text.PrettyPrint.Annotated.HughesPJ.PageMode
                   Text.PrettyPrint.Annotated.HughesPJ.render3
                   Text.PrettyPrint.Annotated.HughesPJ.render2
                   PrettyPrinter.$fShowBoolExpr2
                   (GHC.Types.[] @ GHC.Types.Char)
                   (PrettyPrinter.$wprintBool x 0#)
                     `cast`
                   (Text.PrettyPrint.HughesPJ.N:Doc[0])) -}
4e38a7635a726d3cd6dc980b583a4427
  $fShowBoolExpr_$cshowList :: [Grammar.BoolExpr] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (ls :: [Grammar.BoolExpr])
                   (s30 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Grammar.BoolExpr
                   PrettyPrinter.$fShowBoolExpr1
                   ls
                   s30) -}
8fc78e1b0f33cbd5668371b8780fcde6
  $fShowBoolExpr_$cshowsPrec ::
    GHC.Types.Int -> Grammar.BoolExpr -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><L,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Grammar.BoolExpr)
                   (s30 :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (PrettyPrinter.$fShowBoolExpr_$cshow x))
                   s30) -}
787fac6b2d7948acf2a0d3f9dbd8f709
  $fShowExpr :: GHC.Show.Show Grammar.Expr
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Grammar.Expr
                  PrettyPrinter.$fShowExpr_$cshowsPrec
                  PrettyPrinter.$fShowExpr_$cshow
                  PrettyPrinter.$fShowExpr_$cshowList -}
3987d589b0f19f72495e70788c4b4290
  $fShowExpr1 :: Grammar.Expr -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ (x :: Grammar.Expr)
                   (s30 :: GHC.Base.String)[OneShot] ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (PrettyPrinter.$fShowExpr_$cshow x)
                   s30) -}
db46fb63c8fdfef204247a5d268d0112
  $fShowExpr10 :: Text.PrettyPrint.Annotated.HughesPJ.TextDetails
  {- Unfolding: (Text.PrettyPrint.Annotated.HughesPJ.Str
                   PrettyPrinter.$fShowExpr_s2) -}
35cfe3291a6ec69efabf7feb638323f4
  $fShowExpr11 :: Text.PrettyPrint.HughesPJ.Doc
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        PrettyPrinter.$fShowExpr_s3
                        0# of ww2 { DEFAULT ->
                 (Text.PrettyPrint.Annotated.HughesPJ.TextBeside
                    @ ()
                    (Text.PrettyPrint.Annotated.HughesPJ.NoAnnot
                       @ ()
                       PrettyPrinter.$fShowExpr12
                       ww2)
                    (Text.PrettyPrint.Annotated.HughesPJ.Empty @ ()))
                   `cast`
                 (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) }) -}
ced8a46b9c7d33c479d438465f9109bd
  $fShowExpr12 :: Text.PrettyPrint.Annotated.HughesPJ.TextDetails
  {- Unfolding: (Text.PrettyPrint.Annotated.HughesPJ.Str
                   PrettyPrinter.$fShowExpr_s3) -}
848ae53671df9a1f725fca75042f23d7
  $fShowExpr2 :: Text.PrettyPrint.Annotated.HughesPJ.RDoc ()
  {- Unfolding: (Text.PrettyPrint.Annotated.HughesPJ.reduceDoc
                   @ ()
                   PrettyPrinter.$fShowExpr3
                     `cast`
                   (Text.PrettyPrint.HughesPJ.N:Doc[0])) -}
b01f8ba634e4b649773b307a88e4bf15
  $fShowExpr3 :: Text.PrettyPrint.HughesPJ.Doc
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        PrettyPrinter.$fShowExpr_s
                        0# of ww2 { DEFAULT ->
                 (Text.PrettyPrint.Annotated.HughesPJ.TextBeside
                    @ ()
                    (Text.PrettyPrint.Annotated.HughesPJ.NoAnnot
                       @ ()
                       PrettyPrinter.$fShowExpr4
                       ww2)
                    (Text.PrettyPrint.Annotated.HughesPJ.Empty @ ()))
                   `cast`
                 (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) }) -}
e297c2af7b34cca39433f9bcf2cc72b8
  $fShowExpr4 :: Text.PrettyPrint.Annotated.HughesPJ.TextDetails
  {- Unfolding: (Text.PrettyPrint.Annotated.HughesPJ.Str
                   PrettyPrinter.$fShowExpr_s) -}
fa9760206cef7ee611b884e4ac836399
  $fShowExpr5 :: Text.PrettyPrint.Annotated.HughesPJ.RDoc ()
  {- Unfolding: (Text.PrettyPrint.Annotated.HughesPJ.reduceDoc
                   @ ()
                   PrettyPrinter.$fShowExpr6
                     `cast`
                   (Text.PrettyPrint.HughesPJ.N:Doc[0])) -}
bb25134ff05ad3f65e9878ab84c6e751
  $fShowExpr6 :: Text.PrettyPrint.HughesPJ.Doc
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        PrettyPrinter.$fShowExpr_s1
                        0# of ww2 { DEFAULT ->
                 (Text.PrettyPrint.Annotated.HughesPJ.TextBeside
                    @ ()
                    (Text.PrettyPrint.Annotated.HughesPJ.NoAnnot
                       @ ()
                       PrettyPrinter.$fShowExpr7
                       ww2)
                    (Text.PrettyPrint.Annotated.HughesPJ.Empty @ ()))
                   `cast`
                 (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) }) -}
411f86fef9459cca3c4e1feb2cd9e4ed
  $fShowExpr7 :: Text.PrettyPrint.Annotated.HughesPJ.TextDetails
  {- Unfolding: (Text.PrettyPrint.Annotated.HughesPJ.Str
                   PrettyPrinter.$fShowExpr_s1) -}
cf8d87602516e2a7178ff2e7e2a6e166
  $fShowExpr8 :: Text.PrettyPrint.Annotated.HughesPJ.RDoc ()
  {- Unfolding: (Text.PrettyPrint.Annotated.HughesPJ.reduceDoc
                   @ ()
                   PrettyPrinter.$fShowExpr9
                     `cast`
                   (Text.PrettyPrint.HughesPJ.N:Doc[0])) -}
0a0195d5c24d7482ee30b1a488d81433
  $fShowExpr9 :: Text.PrettyPrint.HughesPJ.Doc
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        PrettyPrinter.$fShowExpr_s2
                        0# of ww2 { DEFAULT ->
                 (Text.PrettyPrint.Annotated.HughesPJ.TextBeside
                    @ ()
                    (Text.PrettyPrint.Annotated.HughesPJ.NoAnnot
                       @ ()
                       PrettyPrinter.$fShowExpr10
                       ww2)
                    (Text.PrettyPrint.Annotated.HughesPJ.Empty @ ()))
                   `cast`
                 (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) }) -}
99550ee84d3d9032dad2b16067acd1f7
  $fShowExpr_$cshow :: Grammar.Expr -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Grammar.Expr) ->
                 Text.PrettyPrint.Annotated.HughesPJ.fullRenderAnn
                   @ ()
                   @ GHC.Base.String
                   Text.PrettyPrint.Annotated.HughesPJ.PageMode
                   Text.PrettyPrint.Annotated.HughesPJ.render3
                   Text.PrettyPrint.Annotated.HughesPJ.render2
                   PrettyPrinter.$fShowBoolExpr2
                   (GHC.Types.[] @ GHC.Types.Char)
                   (PrettyPrinter.$wprintExpr x 0#)
                     `cast`
                   (Text.PrettyPrint.HughesPJ.N:Doc[0])) -}
9145728cfb7a32f9fad67a137f1c32a3
  $fShowExpr_$cshowList :: [Grammar.Expr] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (ls :: [Grammar.Expr]) (s30 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Grammar.Expr
                   PrettyPrinter.$fShowExpr1
                   ls
                   s30) -}
699dfe77684ab377ff0c55526525b895
  $fShowExpr_$cshowsPrec ::
    GHC.Types.Int -> Grammar.Expr -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><L,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Grammar.Expr)
                   (s30 :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (PrettyPrinter.$fShowExpr_$cshow x))
                   s30) -}
fc9f8d79cf61d81f93131cf398929618
  $fShowExpr_s :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "list"#) -}
8cd127157764c768af211581add1360c
  $fShowExpr_s1 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "num"#) -}
3703e4181b7166205222d50d4802b6f4
  $fShowExpr_s2 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "bool"#) -}
66ef841daee6e161f476b4e43ac26fea
  $fShowExpr_s3 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "var"#) -}
15cf4d65cd60b0f6ab1043a874289c65
  $fShowListExpr :: GHC.Show.Show Grammar.ListExpr
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Grammar.ListExpr
                  PrettyPrinter.$fShowListExpr_$cshowsPrec
                  PrettyPrinter.$fShowListExpr_$cshow
                  PrettyPrinter.$fShowListExpr_$cshowList -}
a34e3b5d1ed0c282cec42bc33da5825a
  $fShowListExpr1 ::
    Grammar.ListExpr -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ (x :: Grammar.ListExpr)
                   (s30 :: GHC.Base.String)[OneShot] ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (PrettyPrinter.$fShowListExpr_$cshow x)
                   s30) -}
66c2f9b0d201b55e7dfae04b609362d2
  $fShowListExpr_$cshow :: Grammar.ListExpr -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Grammar.ListExpr) ->
                 Text.PrettyPrint.Annotated.HughesPJ.fullRenderAnn
                   @ ()
                   @ GHC.Base.String
                   Text.PrettyPrint.Annotated.HughesPJ.PageMode
                   Text.PrettyPrint.Annotated.HughesPJ.render3
                   Text.PrettyPrint.Annotated.HughesPJ.render2
                   PrettyPrinter.$fShowBoolExpr2
                   (GHC.Types.[] @ GHC.Types.Char)
                   (PrettyPrinter.$wprintList x 0#)
                     `cast`
                   (Text.PrettyPrint.HughesPJ.N:Doc[0])) -}
8916e55a5d67b47e47ebc8923bde42bd
  $fShowListExpr_$cshowList :: [Grammar.ListExpr] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (ls :: [Grammar.ListExpr])
                   (s30 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Grammar.ListExpr
                   PrettyPrinter.$fShowListExpr1
                   ls
                   s30) -}
076e3edfc77f2805ce43c8e0f431037c
  $fShowListExpr_$cshowsPrec ::
    GHC.Types.Int -> Grammar.ListExpr -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><L,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Grammar.ListExpr)
                   (s30 :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (PrettyPrinter.$fShowListExpr_$cshow x))
                   s30) -}
8f06af316464e2c1504730fdcbc0c62a
  $fShowNumExpr :: GHC.Show.Show Grammar.NumExpr
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Grammar.NumExpr
                  PrettyPrinter.$fShowNumExpr_$cshowsPrec
                  PrettyPrinter.$fShowNumExpr_$cshow
                  PrettyPrinter.$fShowNumExpr_$cshowList -}
e7f67d77991639df52cd02b0214602af
  $fShowNumExpr1 ::
    Grammar.NumExpr -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ (x :: Grammar.NumExpr)
                   (s30 :: GHC.Base.String)[OneShot] ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (PrettyPrinter.$fShowNumExpr_$cshow x)
                   s30) -}
9676098fb652d4b3bff90e0fa951b76b
  $fShowNumExpr_$cshow :: Grammar.NumExpr -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Grammar.NumExpr) ->
                 Text.PrettyPrint.Annotated.HughesPJ.fullRenderAnn
                   @ ()
                   @ GHC.Base.String
                   Text.PrettyPrint.Annotated.HughesPJ.PageMode
                   Text.PrettyPrint.Annotated.HughesPJ.render3
                   Text.PrettyPrint.Annotated.HughesPJ.render2
                   PrettyPrinter.$fShowBoolExpr2
                   (GHC.Types.[] @ GHC.Types.Char)
                   (PrettyPrinter.$wprintNum x 0#)
                     `cast`
                   (Text.PrettyPrint.HughesPJ.N:Doc[0])) -}
09522ba2b73a7d9f40132fc44d685367
  $fShowNumExpr_$cshowList :: [Grammar.NumExpr] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (ls :: [Grammar.NumExpr]) (s30 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Grammar.NumExpr
                   PrettyPrinter.$fShowNumExpr1
                   ls
                   s30) -}
15c3de58c79179b674c93b3fda233384
  $fShowNumExpr_$cshowsPrec ::
    GHC.Types.Int -> Grammar.NumExpr -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><L,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Grammar.NumExpr)
                   (s30 :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (PrettyPrinter.$fShowNumExpr_$cshow x))
                   s30) -}
8316516d16aa6230f1a57ee86c8eb644
  $fShowStmt :: GHC.Show.Show Grammar.Stmt
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Grammar.Stmt
                  PrettyPrinter.$fShowStmt_$cshowsPrec
                  PrettyPrinter.$fShowStmt_$cshow
                  PrettyPrinter.$fShowStmt_$cshowList -}
9b3b81bccd32db9b6bc0d6388786deed
  $fShowStmt1 :: Grammar.Stmt -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ (x :: Grammar.Stmt)
                   (s30 :: GHC.Base.String)[OneShot] ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (PrettyPrinter.$fShowStmt_$cshow x)
                   s30) -}
0082f10da57daab35ee6aa25e8314c12
  $fShowStmt_$cshow :: Grammar.Stmt -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Grammar.Stmt) ->
                 Text.PrettyPrint.Annotated.HughesPJ.fullRenderAnn
                   @ ()
                   @ GHC.Base.String
                   Text.PrettyPrint.Annotated.HughesPJ.PageMode
                   Text.PrettyPrint.Annotated.HughesPJ.render3
                   Text.PrettyPrint.Annotated.HughesPJ.render2
                   PrettyPrinter.$fShowBoolExpr2
                   (GHC.Types.[] @ GHC.Types.Char)
                   (PrettyPrinter.$wprintStmt x 0#)
                     `cast`
                   (Text.PrettyPrint.HughesPJ.N:Doc[0])) -}
42921c14edf80c6cdc2badd1037daffc
  $fShowStmt_$cshowList :: [Grammar.Stmt] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (ls :: [Grammar.Stmt]) (s30 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Grammar.Stmt
                   PrettyPrinter.$fShowStmt1
                   ls
                   s30) -}
25075509877b48d1d51a94c545f11379
  $fShowStmt_$cshowsPrec ::
    GHC.Types.Int -> Grammar.Stmt -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><L,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Grammar.Stmt)
                   (s30 :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (PrettyPrinter.$fShowStmt_$cshow x))
                   s30) -}
b328689bee11b12797de776741e37a94
  $fShowStmt_list :: GHC.Show.Show Grammar.Stmt_list
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Grammar.Stmt_list
                  PrettyPrinter.$fShowStmt_list_$cshowsPrec
                  PrettyPrinter.$fShowStmt_list_$cshow
                  PrettyPrinter.$fShowStmt_list_$cshowList -}
1654342bad7d32abe473426632cebc65
  $fShowStmt_list1 ::
    Grammar.Stmt_list -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ (x :: Grammar.Stmt_list)
                   (s30 :: GHC.Base.String)[OneShot] ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (PrettyPrinter.$fShowStmt_list_$cshow x)
                   s30) -}
877aa344299f1a4a329685efdf12142d
  $fShowStmt_list_$cshow :: Grammar.Stmt_list -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Grammar.Stmt_list) ->
                 Text.PrettyPrint.Annotated.HughesPJ.fullRenderAnn
                   @ ()
                   @ GHC.Base.String
                   Text.PrettyPrint.Annotated.HughesPJ.PageMode
                   Text.PrettyPrint.Annotated.HughesPJ.render3
                   Text.PrettyPrint.Annotated.HughesPJ.render2
                   PrettyPrinter.$fShowBoolExpr2
                   (GHC.Types.[] @ GHC.Types.Char)
                   (PrettyPrinter.$wprintSL x 0#)
                     `cast`
                   (Text.PrettyPrint.HughesPJ.N:Doc[0])) -}
03ce742f3baa168125946e8054c1bd8d
  $fShowStmt_list_$cshowList :: [Grammar.Stmt_list] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (ls :: [Grammar.Stmt_list])
                   (s30 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Grammar.Stmt_list
                   PrettyPrinter.$fShowStmt_list1
                   ls
                   s30) -}
6aacad88366c127fbfb5a819b30d0529
  $fShowStmt_list_$cshowsPrec ::
    GHC.Types.Int -> Grammar.Stmt_list -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><L,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Grammar.Stmt_list)
                   (s30 :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (PrettyPrinter.$fShowStmt_list_$cshow x))
                   s30) -}
040c25bba2323dba74aac1dc1269f725
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   PrettyPrinter.$trModule2
                   PrettyPrinter.$trModule1) -}
23715ef6567058611468301adc1af1d7
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "PrettyPrinter"#) -}
a921731e5c3acade7f2a1da009d43a9c
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Compiler-0.1.0.0-57coiQcmnJXARK4xYqZ5Rd"#) -}
652e77e5a89342bdb12489a5c37b42ca
  $wprintBool ::
    Grammar.BoolExpr -> GHC.Prim.Int# -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
2b42e62e97e511ac2da226205182b70a
  $wprintExpr ::
    Grammar.Expr -> GHC.Prim.Int# -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, Strictness: <S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (w :: Grammar.Expr) (ww :: GHC.Prim.Int#) ->
                 case w of wild {
                   Grammar.EVar v
                   -> let {
                        s30 :: GHC.Base.String = Grammar.$fEqVar_$cshow v
                      } in
                      case GHC.List.$wlenAcc @ GHC.Types.Char s30 0# of ww2 { DEFAULT ->
                      case PrettyPrinter.$fShowExpr11
                             `cast`
                           (Text.PrettyPrint.HughesPJ.N:Doc[0]) of wild1 {
                        DEFAULT
                        -> (Text.PrettyPrint.Annotated.HughesPJ.$wmkNest
                              @ ()
                              ww
                              (Text.PrettyPrint.Annotated.HughesPJ.reduceDoc_$sreduceDoc1
                                 @ ()
                                 wild1
                                 GHC.Types.True
                                 (Text.PrettyPrint.Annotated.HughesPJ.TextBeside
                                    @ ()
                                    (Text.PrettyPrint.Annotated.HughesPJ.NoAnnot
                                       @ ()
                                       (Text.PrettyPrint.Annotated.HughesPJ.Str s30)
                                       ww2)
                                    (Text.PrettyPrint.Annotated.HughesPJ.Empty @ ()))))
                             `cast`
                           (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0]))
                        Text.PrettyPrint.Annotated.HughesPJ.Empty
                        -> (Text.PrettyPrint.Annotated.HughesPJ.$wmkNest
                              @ ()
                              ww
                              (Text.PrettyPrint.Annotated.HughesPJ.reduceDoc
                                 @ ()
                                 (Text.PrettyPrint.Annotated.HughesPJ.TextBeside
                                    @ ()
                                    (Text.PrettyPrint.Annotated.HughesPJ.NoAnnot
                                       @ ()
                                       (Text.PrettyPrint.Annotated.HughesPJ.Str s30)
                                       ww2)
                                    (Text.PrettyPrint.Annotated.HughesPJ.Empty @ ()))))
                             `cast`
                           (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) } }
                   Grammar.BExp v
                   -> case (PrettyPrinter.$wprintBool v (GHC.Prim.+# ww 3#))
                             `cast`
                           (Text.PrettyPrint.HughesPJ.N:Doc[0]) of wild1 {
                        DEFAULT
                        -> case Text.PrettyPrint.Annotated.HughesPJ.$wmkNest
                                  @ ()
                                  ww
                                  PrettyPrinter.$fShowExpr8 of wild2 {
                             DEFAULT
                             -> (Text.PrettyPrint.Annotated.HughesPJ.Above
                                   @ ()
                                   wild2
                                   GHC.Types.True
                                   wild1)
                                  `cast`
                                (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0]))
                             Text.PrettyPrint.Annotated.HughesPJ.Empty
                             -> wild1 `cast` (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) }
                        Text.PrettyPrint.Annotated.HughesPJ.Empty
                        -> (Text.PrettyPrint.Annotated.HughesPJ.$wmkNest
                              @ ()
                              ww
                              PrettyPrinter.$fShowExpr8)
                             `cast`
                           (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) }
                   Grammar.NExp v
                   -> case (PrettyPrinter.$wprintNum v (GHC.Prim.+# ww 3#))
                             `cast`
                           (Text.PrettyPrint.HughesPJ.N:Doc[0]) of wild1 {
                        DEFAULT
                        -> case Text.PrettyPrint.Annotated.HughesPJ.$wmkNest
                                  @ ()
                                  ww
                                  PrettyPrinter.$fShowExpr5 of wild2 {
                             DEFAULT
                             -> (Text.PrettyPrint.Annotated.HughesPJ.Above
                                   @ ()
                                   wild2
                                   GHC.Types.True
                                   wild1)
                                  `cast`
                                (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0]))
                             Text.PrettyPrint.Annotated.HughesPJ.Empty
                             -> wild1 `cast` (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) }
                        Text.PrettyPrint.Annotated.HughesPJ.Empty
                        -> (Text.PrettyPrint.Annotated.HughesPJ.$wmkNest
                              @ ()
                              ww
                              PrettyPrinter.$fShowExpr5)
                             `cast`
                           (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) }
                   Grammar.LExp v
                   -> case (PrettyPrinter.$wprintList v (GHC.Prim.+# ww 3#))
                             `cast`
                           (Text.PrettyPrint.HughesPJ.N:Doc[0]) of wild1 {
                        DEFAULT
                        -> case Text.PrettyPrint.Annotated.HughesPJ.$wmkNest
                                  @ ()
                                  ww
                                  PrettyPrinter.$fShowExpr2 of wild2 {
                             DEFAULT
                             -> (Text.PrettyPrint.Annotated.HughesPJ.Above
                                   @ ()
                                   wild2
                                   GHC.Types.True
                                   wild1)
                                  `cast`
                                (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0]))
                             Text.PrettyPrint.Annotated.HughesPJ.Empty
                             -> wild1 `cast` (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) }
                        Text.PrettyPrint.Annotated.HughesPJ.Empty
                        -> (Text.PrettyPrint.Annotated.HughesPJ.$wmkNest
                              @ ()
                              ww
                              PrettyPrinter.$fShowExpr2)
                             `cast`
                           (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) } }) -}
d6018b3aefecc01991e02aac122bec85
  $wprintList ::
    Grammar.ListExpr -> GHC.Prim.Int# -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
3f4e893d25cd1a10e9f01f8cec2ea7d1
  $wprintNum ::
    Grammar.NumExpr -> GHC.Prim.Int# -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, Strictness: <S,1*U><S,U>, Inline: [0] -}
d99f7ed3f55af7b7d18c1f779b330efb
  $wprintSL ::
    Grammar.Stmt_list -> GHC.Prim.Int# -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, Strictness: <S,1*U><S,U>, Inline: [0] -}
e438862fa0233e32edfde8c3fa133f0a
  $wprintStmt ::
    Grammar.Stmt -> GHC.Prim.Int# -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
4c54c8c285e48c3512b9cdcf58a5978d
  debuger ::
    GHC.Show.Show t =>
    Data.Either.Either GHC.Base.String t -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(A,1*C1(U),A)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ t
                   ($dShow :: GHC.Show.Show t)
                   (ds :: Data.Either.Either GHC.Base.String t) ->
                 case ds of wild {
                   Data.Either.Left s30 -> s30
                   Data.Either.Right t1 -> GHC.Show.show @ t $dShow t1 }) -}
fa2be77e3c83dc1b70ff820779752155
  prettyPrinter ::
    [GHC.Base.String]
    -> Data.Either.Either GHC.Base.String [GHC.Base.String]
  {- Arity: 1, Strictness: <S,1*U> -}
4cd9daf679a72caf9036da60aa40c8d4
  printBool ::
    Grammar.BoolExpr -> GHC.Types.Int -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, Strictness: <S,1*U><S,U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Grammar.BoolExpr) (w1 :: GHC.Types.Int) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 PrettyPrinter.$wprintBool w ww1 }) -}
aa4b0368d257be274f20571d46a785f9
  printExpr ::
    Grammar.Expr -> GHC.Types.Int -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, Strictness: <S,1*U><S(S),U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Grammar.Expr) (w1 :: GHC.Types.Int) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 PrettyPrinter.$wprintExpr w ww1 }) -}
7cc7f5ff50919dd882b0d1ee7b769996
  printList ::
    Grammar.ListExpr -> GHC.Types.Int -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, Strictness: <S,1*U><S,U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Grammar.ListExpr) (w1 :: GHC.Types.Int) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 PrettyPrinter.$wprintList w ww1 }) -}
efdc60a467c4f641a5217e46996e099e
  printNum ::
    Grammar.NumExpr -> GHC.Types.Int -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, Strictness: <S,1*U><S(S),U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Grammar.NumExpr) (w1 :: GHC.Types.Int) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 PrettyPrinter.$wprintNum w ww1 }) -}
45328ca5076d297409784337a1062412
  printSL ::
    Grammar.Stmt_list -> GHC.Types.Int -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, Strictness: <S,1*U><S(S),U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Grammar.Stmt_list) (w1 :: GHC.Types.Int) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 PrettyPrinter.$wprintSL w ww1 }) -}
657ba45163676b21fc6c05ce980e1037
  printStmt ::
    Grammar.Stmt -> GHC.Types.Int -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, Strictness: <S,1*U><S,U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Grammar.Stmt) (w1 :: GHC.Types.Int) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 PrettyPrinter.$wprintStmt w ww1 }) -}
instance GHC.Show.Show [Grammar.BoolExpr]
  = PrettyPrinter.$fShowBoolExpr
instance GHC.Show.Show [Grammar.Expr] = PrettyPrinter.$fShowExpr
instance GHC.Show.Show [Grammar.ListExpr]
  = PrettyPrinter.$fShowListExpr
instance GHC.Show.Show [Grammar.NumExpr]
  = PrettyPrinter.$fShowNumExpr
instance GHC.Show.Show [Grammar.Stmt] = PrettyPrinter.$fShowStmt
instance GHC.Show.Show [Grammar.Stmt_list]
  = PrettyPrinter.$fShowStmt_list
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

