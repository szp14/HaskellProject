
==================== FINAL INTERFACE ====================
2017-01-15 11:29:53.685104 UTC

interface Compiler-0.1.0.0-5UkU68CXfZM1FpQsH03UZ5:PrettyPrinter [orphan module] 8001
  interface hash: f77bd34089db243abb11e1a635a0f485
  ABI hash: 30a556fbaa847c88a37bb0cf18c65fc8
  export-list hash: 0bcdb367f4debcb6a100b9db829d6460
  orphan hash: affdd571024a393f78822fa59e0b261f
  flag hash: f5b889281a3ec7e36516336dd527c22b
  sig of: Nothing
  used TH splices: False
  where
exports:
  PrettyPrinter.debuger
  PrettyPrinter.prettyPrinter
  PrettyPrinter.printBool
  PrettyPrinter.printExpr
  PrettyPrinter.printList
  PrettyPrinter.printNum
  PrettyPrinter.printSL
  PrettyPrinter.printStmt
module dependencies: Grammar
package dependencies: array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43
                      base-4.9.0.0 binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-Ctl752zbguF6QanxurLOm2
                      integer-gmp-1.0.0.1
                      integer-logarithms-1@integer-logarithms-1-E6LvTbkhTkGIa6wPB3rtJw
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      scientific-0.3.4.10@scientific-0.3.4.10-2Y658Wts4fDGgAkWhKOJwC
                      text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs
                      transformers-0.5.2.0@transformers-0.5.2.0
                      vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43:Data.Attoparsec.Text.Internal
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-Ctl752zbguF6QanxurLOm2:Data.Hashable.Generic
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Fusion.Bundle
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43:Data.Attoparsec.Internal.Types
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Functor.Identity base-4.9.0.0:Data.List.NonEmpty
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Semigroup
                         base-4.9.0.0:Data.Type.Equality base-4.9.0.0:Data.Version
                         base-4.9.0.0:Data.Void base-4.9.0.0:GHC.Exts
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text
                         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Lazy
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector
import  -/  Grammar c8061553502f022a04564e232ae9b458
  exports: 1350f875d0a40aa853f67f4d5395bf88
  Add 02ffe8ae482a2e823abdb10cf5daeb15
  And 8182603d5fdb828773e749ef15cfd34d
  Assign 65685e9466684d9cf2975bf2bfa07b41
  BExp 83afdb5dd8a54a685f557232e95e4957
  BVar ddb9cfb06bba139d6ea9b9a10b93c14e
  BoolExpr 0ab60214c669ea5b34bb5276af01520f
  Car 9a2ba8416fbfcbb13b843c81af636c90
  Cdr d5a908a3eaf67f494de236ff9e1a55df
  CharLit 876e71b41bb233265d58d30e0af7bd9e
  Cons 71c6fb9713f8481eb675fe2bd0f86df4
  Cycle 9980404884ec23d042e4de1612e2b94b
  Div 434e9a9c996a9d685d56fd9864dad03b
  E 4d609c767afefcd355f319f019be70b9
  EVar bc9f40668069c1613cc44a87a8b6767b
  Exp a418cbc73e5e4e8ac0a8df5dc3f75852
  Expr 0ab60214c669ea5b34bb5276af01520f
  FalseLit c2f809a6309b45c8ed3d95578eaae980
  G ff85c5698714fe23f3fbd7a2d5691566
  GE d7cc997c5dd0222a56daa1807c30bd0d
  If 610642bfd3717dbcbf3bceee60c5652f
  L 0ebb81ebd2baf75bc19fc990f723e1f3
  LE f0686d4ca66665ecdf903e3500ce7fcb
  LExp e0f51234986b521d75566d0fcb018b77
  LVar e968e7846f9060399476c93cfa2642ce
  ListExpr 0ab60214c669ea5b34bb5276af01520f
  Mul 9e53942963dd1cec170f49594563f08b
  NExp bcf7002436e718536441023240b75a75
  NVar e92e9d426eabcb0e1dd25f6a5e487246
  New_vec d676e3715c7dbec57fd9ad855bf5071d
  Nil ff939892725c6b8a9634b14a89c5e15f
  Not 62b2a03557ddc9c94639fca3b35de699
  NumExpr 0ab60214c669ea5b34bb5276af01520f
  Number e5d6d623b8cd425dd14b697444f0a5a0
  One 0e12df0dd9ca00e4d5e25cd83bfabeba
  Or 5a7826f44b52d55596477d8bfc7b5f66
  Set_vec e1e0c55474c2b67392574e57dec1cca6
  Skip 1ef2c6e0b1699a22cb20ceb920c62d73
  Stmt 9318de9adc155175705f6cef46b99c35
  Stmt_cycle 2ad6ab751a12956872390f07d153a84e
  Stmt_list 9318de9adc155175705f6cef46b99c35
  StringLit b0a78c5fb12727453b86f26cbd949ac1
  Sub 2aab8846af09cec45998ab4524612c99
  TrueLit 36329013255bd43ad86e4dc4a2f36db2
  While 8b70241fa5247e4e27eee92d470439e8
  parse b3170b25484e5ad439cbf4b8577ce7ec
import  -/  attoparsec-0.13.1.0@attoparsec-0.13.1.0-4RIYnAHyOmg6Dh17ENWi43:Data.Attoparsec.Text d3cff0ad187398020adcebc8a0709b72
import  -/  base-4.9.0.0:Control.Applicative 7728b33d6969dce59e89474349eb1397
import  -/  base-4.9.0.0:Data.Either bd9f099b82d4ed2d98c56d7144ac6957
import  -/  base-4.9.0.0:Data.Functor 6fc476505db88d678632a4a838125f13
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Set 3ed2324fd1e757464a8ac2b636a64e5a
import  -/  pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint abe8aeb00d775221281f89090d9fbe2a
import  -/  pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ 605911b9dce2ae2537926ad94c7cbb11
import  -/  text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text 1e73069de2859bae8530c14767b0c6af
import  -/  text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Internal bfb0ec5fde448272375be97e2314e47b
8b7f5cdeb61f507898cfd428cde5264c
  $fShowBoolExpr :: GHC.Show.Show Grammar.BoolExpr
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Grammar.BoolExpr
                  PrettyPrinter.$fShowBoolExpr_$cshowsPrec
                  PrettyPrinter.$fShowBoolExpr_$cshow
                  PrettyPrinter.$fShowBoolExpr_$cshowList -}
4c518c1ab4c4d37f81475dbe357a48ae
  $fShowBoolExpr1 ::
    Grammar.BoolExpr -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ (x :: Grammar.BoolExpr)
                   (s30 :: GHC.Base.String)[OneShot] ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (PrettyPrinter.$fShowBoolExpr_$cshow x)
                   s30) -}
8a9b63b54ebfa8c2eb0204a757d28c62
  $fShowBoolExpr2 ::
    Text.PrettyPrint.Annotated.HughesPJ.AnnotDetails ()
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ (ds :: Text.PrettyPrint.Annotated.HughesPJ.AnnotDetails
                            ())
                   (eta :: GHC.Base.String)[OneShot] ->
                 case ds of wild {
                   DEFAULT -> eta
                   Text.PrettyPrint.Annotated.HughesPJ.NoAnnot s30 dt1
                   -> case s30 of wild1 {
                        Text.PrettyPrint.Annotated.HughesPJ.Chr dt
                        -> GHC.Types.: @ GHC.Types.Char (GHC.Types.C# dt) eta
                        Text.PrettyPrint.Annotated.HughesPJ.Str s31
                        -> GHC.Base.++ @ GHC.Types.Char s31 eta
                        Text.PrettyPrint.Annotated.HughesPJ.PStr s31
                        -> GHC.Base.++ @ GHC.Types.Char s31 eta } }) -}
47ef2e5613484d95938a74de47305d28
  $fShowBoolExpr_$cshow :: Grammar.BoolExpr -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Grammar.BoolExpr) ->
                 Text.PrettyPrint.Annotated.HughesPJ.fullRenderAnn
                   @ ()
                   @ GHC.Base.String
                   Text.PrettyPrint.Annotated.HughesPJ.PageMode
                   Text.PrettyPrint.Annotated.HughesPJ.render3
                   Text.PrettyPrint.Annotated.HughesPJ.render2
                   PrettyPrinter.$fShowBoolExpr2
                   (GHC.Types.[] @ GHC.Types.Char)
                   (PrettyPrinter.$wprintBool x 0#)
                     `cast`
                   (Text.PrettyPrint.HughesPJ.N:Doc[0])) -}
04dc8b702b6ef69088c743b7bfe482ac
  $fShowBoolExpr_$cshowList :: [Grammar.BoolExpr] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (ls :: [Grammar.BoolExpr])
                   (s30 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Grammar.BoolExpr
                   PrettyPrinter.$fShowBoolExpr1
                   ls
                   s30) -}
236af8362db51ce616119eecc96c2858
  $fShowBoolExpr_$cshowsPrec ::
    GHC.Types.Int -> Grammar.BoolExpr -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><L,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Grammar.BoolExpr)
                   (s30 :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (PrettyPrinter.$fShowBoolExpr_$cshow x))
                   s30) -}
78c6e4cefba2a10171188311c593c3fa
  $fShowExpr :: GHC.Show.Show Grammar.Expr
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Grammar.Expr
                  PrettyPrinter.$fShowExpr_$cshowsPrec
                  PrettyPrinter.$fShowExpr_$cshow
                  PrettyPrinter.$fShowExpr_$cshowList -}
aacebec2a11a3b4b957af082f7d0d35e
  $fShowExpr1 :: Grammar.Expr -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ (x :: Grammar.Expr)
                   (s30 :: GHC.Base.String)[OneShot] ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (PrettyPrinter.$fShowExpr_$cshow x)
                   s30) -}
01e061a10ea6568ccdd156a10a42e35f
  $fShowExpr10 :: Text.PrettyPrint.Annotated.HughesPJ.TextDetails
  {- Unfolding: (Text.PrettyPrint.Annotated.HughesPJ.Str
                   PrettyPrinter.$fShowExpr_s2) -}
4c1f36f9a08b2905aa6439c7310a62d1
  $fShowExpr11 :: Text.PrettyPrint.HughesPJ.Doc
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        PrettyPrinter.$fShowExpr_s3
                        0# of ww2 { DEFAULT ->
                 (Text.PrettyPrint.Annotated.HughesPJ.TextBeside
                    @ ()
                    (Text.PrettyPrint.Annotated.HughesPJ.NoAnnot
                       @ ()
                       PrettyPrinter.$fShowExpr12
                       ww2)
                    (Text.PrettyPrint.Annotated.HughesPJ.Empty @ ()))
                   `cast`
                 (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) }) -}
7b46046d01a138dea87842092cf04a3d
  $fShowExpr12 :: Text.PrettyPrint.Annotated.HughesPJ.TextDetails
  {- Unfolding: (Text.PrettyPrint.Annotated.HughesPJ.Str
                   PrettyPrinter.$fShowExpr_s3) -}
2bb2f3de5280bbbdb6a62226ad4a3624
  $fShowExpr2 :: Text.PrettyPrint.Annotated.HughesPJ.RDoc ()
  {- Unfolding: (Text.PrettyPrint.Annotated.HughesPJ.reduceDoc
                   @ ()
                   PrettyPrinter.$fShowExpr3
                     `cast`
                   (Text.PrettyPrint.HughesPJ.N:Doc[0])) -}
b89f4d1c3f9f62ad9e3df5971431127c
  $fShowExpr3 :: Text.PrettyPrint.HughesPJ.Doc
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        PrettyPrinter.$fShowExpr_s
                        0# of ww2 { DEFAULT ->
                 (Text.PrettyPrint.Annotated.HughesPJ.TextBeside
                    @ ()
                    (Text.PrettyPrint.Annotated.HughesPJ.NoAnnot
                       @ ()
                       PrettyPrinter.$fShowExpr4
                       ww2)
                    (Text.PrettyPrint.Annotated.HughesPJ.Empty @ ()))
                   `cast`
                 (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) }) -}
268c3310a21d7cb7176778e013b4c87f
  $fShowExpr4 :: Text.PrettyPrint.Annotated.HughesPJ.TextDetails
  {- Unfolding: (Text.PrettyPrint.Annotated.HughesPJ.Str
                   PrettyPrinter.$fShowExpr_s) -}
58c134cd4cd51011cdaa770e9e998ae5
  $fShowExpr5 :: Text.PrettyPrint.Annotated.HughesPJ.RDoc ()
  {- Unfolding: (Text.PrettyPrint.Annotated.HughesPJ.reduceDoc
                   @ ()
                   PrettyPrinter.$fShowExpr6
                     `cast`
                   (Text.PrettyPrint.HughesPJ.N:Doc[0])) -}
117a4db35b4adce83166ece2de11ac8d
  $fShowExpr6 :: Text.PrettyPrint.HughesPJ.Doc
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        PrettyPrinter.$fShowExpr_s1
                        0# of ww2 { DEFAULT ->
                 (Text.PrettyPrint.Annotated.HughesPJ.TextBeside
                    @ ()
                    (Text.PrettyPrint.Annotated.HughesPJ.NoAnnot
                       @ ()
                       PrettyPrinter.$fShowExpr7
                       ww2)
                    (Text.PrettyPrint.Annotated.HughesPJ.Empty @ ()))
                   `cast`
                 (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) }) -}
0efd7fc276a7ab5cd16e60d3bdea4982
  $fShowExpr7 :: Text.PrettyPrint.Annotated.HughesPJ.TextDetails
  {- Unfolding: (Text.PrettyPrint.Annotated.HughesPJ.Str
                   PrettyPrinter.$fShowExpr_s1) -}
f25da19303a6a01dd1e6e085ce376b11
  $fShowExpr8 :: Text.PrettyPrint.Annotated.HughesPJ.RDoc ()
  {- Unfolding: (Text.PrettyPrint.Annotated.HughesPJ.reduceDoc
                   @ ()
                   PrettyPrinter.$fShowExpr9
                     `cast`
                   (Text.PrettyPrint.HughesPJ.N:Doc[0])) -}
8838ee8927bbe27f364e93e39258b6b8
  $fShowExpr9 :: Text.PrettyPrint.HughesPJ.Doc
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        PrettyPrinter.$fShowExpr_s2
                        0# of ww2 { DEFAULT ->
                 (Text.PrettyPrint.Annotated.HughesPJ.TextBeside
                    @ ()
                    (Text.PrettyPrint.Annotated.HughesPJ.NoAnnot
                       @ ()
                       PrettyPrinter.$fShowExpr10
                       ww2)
                    (Text.PrettyPrint.Annotated.HughesPJ.Empty @ ()))
                   `cast`
                 (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) }) -}
f056b7810a27e7ce3061eb7af2e47bc2
  $fShowExpr_$cshow :: Grammar.Expr -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Grammar.Expr) ->
                 Text.PrettyPrint.Annotated.HughesPJ.fullRenderAnn
                   @ ()
                   @ GHC.Base.String
                   Text.PrettyPrint.Annotated.HughesPJ.PageMode
                   Text.PrettyPrint.Annotated.HughesPJ.render3
                   Text.PrettyPrint.Annotated.HughesPJ.render2
                   PrettyPrinter.$fShowBoolExpr2
                   (GHC.Types.[] @ GHC.Types.Char)
                   (PrettyPrinter.$wprintExpr x 0#)
                     `cast`
                   (Text.PrettyPrint.HughesPJ.N:Doc[0])) -}
6c35734a79ad7d83a610acca1889e1f0
  $fShowExpr_$cshowList :: [Grammar.Expr] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (ls :: [Grammar.Expr]) (s30 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Grammar.Expr
                   PrettyPrinter.$fShowExpr1
                   ls
                   s30) -}
9556312d8bf13b71b0dad71f89b926b2
  $fShowExpr_$cshowsPrec ::
    GHC.Types.Int -> Grammar.Expr -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><L,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Grammar.Expr)
                   (s30 :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (PrettyPrinter.$fShowExpr_$cshow x))
                   s30) -}
09cc6ff2f2963a7159d33699bc9ec81d
  $fShowExpr_s :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "list"#) -}
45e057ce9ea3df26d346f7e57ef7c905
  $fShowExpr_s1 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "num"#) -}
75981cbec6c25fd331aec0011d1772a1
  $fShowExpr_s2 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "bool"#) -}
170683f611a014c613284263b66443d2
  $fShowExpr_s3 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "var"#) -}
40e4b447d482463da6a7c754158d08d1
  $fShowListExpr :: GHC.Show.Show Grammar.ListExpr
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Grammar.ListExpr
                  PrettyPrinter.$fShowListExpr_$cshowsPrec
                  PrettyPrinter.$fShowListExpr_$cshow
                  PrettyPrinter.$fShowListExpr_$cshowList -}
25fe570824812c87bfd9d1fb7b28c2e5
  $fShowListExpr1 ::
    Grammar.ListExpr -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ (x :: Grammar.ListExpr)
                   (s30 :: GHC.Base.String)[OneShot] ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (PrettyPrinter.$fShowListExpr_$cshow x)
                   s30) -}
133113a99c5023e08e1bbbc09d962099
  $fShowListExpr_$cshow :: Grammar.ListExpr -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Grammar.ListExpr) ->
                 Text.PrettyPrint.Annotated.HughesPJ.fullRenderAnn
                   @ ()
                   @ GHC.Base.String
                   Text.PrettyPrint.Annotated.HughesPJ.PageMode
                   Text.PrettyPrint.Annotated.HughesPJ.render3
                   Text.PrettyPrint.Annotated.HughesPJ.render2
                   PrettyPrinter.$fShowBoolExpr2
                   (GHC.Types.[] @ GHC.Types.Char)
                   (PrettyPrinter.$wprintList x 0#)
                     `cast`
                   (Text.PrettyPrint.HughesPJ.N:Doc[0])) -}
f35fab4c15f024a53255fa76c36c8a24
  $fShowListExpr_$cshowList :: [Grammar.ListExpr] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (ls :: [Grammar.ListExpr])
                   (s30 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Grammar.ListExpr
                   PrettyPrinter.$fShowListExpr1
                   ls
                   s30) -}
97cb3297db6c34da69576b148756d941
  $fShowListExpr_$cshowsPrec ::
    GHC.Types.Int -> Grammar.ListExpr -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><L,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Grammar.ListExpr)
                   (s30 :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (PrettyPrinter.$fShowListExpr_$cshow x))
                   s30) -}
161143b5ca5eff58d966fcad111878d4
  $fShowNumExpr :: GHC.Show.Show Grammar.NumExpr
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Grammar.NumExpr
                  PrettyPrinter.$fShowNumExpr_$cshowsPrec
                  PrettyPrinter.$fShowNumExpr_$cshow
                  PrettyPrinter.$fShowNumExpr_$cshowList -}
1661c386b2fbcadffb4c74f341dd4e61
  $fShowNumExpr1 ::
    Grammar.NumExpr -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ (x :: Grammar.NumExpr)
                   (s30 :: GHC.Base.String)[OneShot] ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (PrettyPrinter.$fShowNumExpr_$cshow x)
                   s30) -}
9eaca8cb3dad0c72b818ed99ebc5b417
  $fShowNumExpr_$cshow :: Grammar.NumExpr -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Grammar.NumExpr) ->
                 Text.PrettyPrint.Annotated.HughesPJ.fullRenderAnn
                   @ ()
                   @ GHC.Base.String
                   Text.PrettyPrint.Annotated.HughesPJ.PageMode
                   Text.PrettyPrint.Annotated.HughesPJ.render3
                   Text.PrettyPrint.Annotated.HughesPJ.render2
                   PrettyPrinter.$fShowBoolExpr2
                   (GHC.Types.[] @ GHC.Types.Char)
                   (PrettyPrinter.$wprintNum x 0#)
                     `cast`
                   (Text.PrettyPrint.HughesPJ.N:Doc[0])) -}
ee32aac4de3fb5d30414d495cbb809a2
  $fShowNumExpr_$cshowList :: [Grammar.NumExpr] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (ls :: [Grammar.NumExpr]) (s30 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Grammar.NumExpr
                   PrettyPrinter.$fShowNumExpr1
                   ls
                   s30) -}
765f5c3d2089007e14428f5f21540076
  $fShowNumExpr_$cshowsPrec ::
    GHC.Types.Int -> Grammar.NumExpr -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><L,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Grammar.NumExpr)
                   (s30 :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (PrettyPrinter.$fShowNumExpr_$cshow x))
                   s30) -}
9266896823cac73c8ee0c33faee09fcd
  $fShowStmt :: GHC.Show.Show Grammar.Stmt
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Grammar.Stmt
                  PrettyPrinter.$fShowStmt_$cshowsPrec
                  PrettyPrinter.$fShowStmt_$cshow
                  PrettyPrinter.$fShowStmt_$cshowList -}
9d972e2f6ac0927e9a3ee1b7d9cd86b3
  $fShowStmt1 :: Grammar.Stmt -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ (x :: Grammar.Stmt)
                   (s30 :: GHC.Base.String)[OneShot] ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (PrettyPrinter.$fShowStmt_$cshow x)
                   s30) -}
aeab1fe61dbcb0a49bb2816cb693ff36
  $fShowStmt_$cshow :: Grammar.Stmt -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Grammar.Stmt) ->
                 Text.PrettyPrint.Annotated.HughesPJ.fullRenderAnn
                   @ ()
                   @ GHC.Base.String
                   Text.PrettyPrint.Annotated.HughesPJ.PageMode
                   Text.PrettyPrint.Annotated.HughesPJ.render3
                   Text.PrettyPrint.Annotated.HughesPJ.render2
                   PrettyPrinter.$fShowBoolExpr2
                   (GHC.Types.[] @ GHC.Types.Char)
                   (PrettyPrinter.$wprintStmt x 0#)
                     `cast`
                   (Text.PrettyPrint.HughesPJ.N:Doc[0])) -}
490cb730440c55b119302127ecd2fed9
  $fShowStmt_$cshowList :: [Grammar.Stmt] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (ls :: [Grammar.Stmt]) (s30 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Grammar.Stmt
                   PrettyPrinter.$fShowStmt1
                   ls
                   s30) -}
7574f3ea7b0091f1066712dd5f80a2a7
  $fShowStmt_$cshowsPrec ::
    GHC.Types.Int -> Grammar.Stmt -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><L,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Grammar.Stmt)
                   (s30 :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (PrettyPrinter.$fShowStmt_$cshow x))
                   s30) -}
0a8eb5ed2cef67d0332c2d3b2d0483a5
  $fShowStmt_list :: GHC.Show.Show Grammar.Stmt_list
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Grammar.Stmt_list
                  PrettyPrinter.$fShowStmt_list_$cshowsPrec
                  PrettyPrinter.$fShowStmt_list_$cshow
                  PrettyPrinter.$fShowStmt_list_$cshowList -}
ee2f43c40f9f8529a5cfd0a44b4b8efa
  $fShowStmt_list1 ::
    Grammar.Stmt_list -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ (x :: Grammar.Stmt_list)
                   (s30 :: GHC.Base.String)[OneShot] ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (PrettyPrinter.$fShowStmt_list_$cshow x)
                   s30) -}
089b3e3adbdc96ec28028acc525572dc
  $fShowStmt_list_$cshow :: Grammar.Stmt_list -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Grammar.Stmt_list) ->
                 Text.PrettyPrint.Annotated.HughesPJ.fullRenderAnn
                   @ ()
                   @ GHC.Base.String
                   Text.PrettyPrint.Annotated.HughesPJ.PageMode
                   Text.PrettyPrint.Annotated.HughesPJ.render3
                   Text.PrettyPrint.Annotated.HughesPJ.render2
                   PrettyPrinter.$fShowBoolExpr2
                   (GHC.Types.[] @ GHC.Types.Char)
                   (PrettyPrinter.$wprintSL x 0#)
                     `cast`
                   (Text.PrettyPrint.HughesPJ.N:Doc[0])) -}
cc7495db1085fb34a54bfc9f16957ade
  $fShowStmt_list_$cshowList :: [Grammar.Stmt_list] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (ls :: [Grammar.Stmt_list])
                   (s30 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Grammar.Stmt_list
                   PrettyPrinter.$fShowStmt_list1
                   ls
                   s30) -}
e68a12348d533282873451c7e606ba7d
  $fShowStmt_list_$cshowsPrec ::
    GHC.Types.Int -> Grammar.Stmt_list -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><L,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Grammar.Stmt_list)
                   (s30 :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (PrettyPrinter.$fShowStmt_list_$cshow x))
                   s30) -}
8835fee2b8a04fb287c959ce37ba49d3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   PrettyPrinter.$trModule2
                   PrettyPrinter.$trModule1) -}
334c8f4f096cac2f506e2d480c5a839e
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "PrettyPrinter"#) -}
8de05023deb058514b911e4a0f74bdeb
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Compiler-0.1.0.0-5UkU68CXfZM1FpQsH03UZ5"#) -}
3b50f9332b2654b98acf57bd0c8c1bb9
  $wprintBool ::
    Grammar.BoolExpr -> GHC.Prim.Int# -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
fb056df1dda027172effaf7972a73c8b
  $wprintExpr ::
    Grammar.Expr -> GHC.Prim.Int# -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, Strictness: <S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (w :: Grammar.Expr) (ww :: GHC.Prim.Int#) ->
                 case w of wild {
                   Grammar.EVar v
                   -> let {
                        s30 :: GHC.Base.String = Grammar.$fEqVar_$cshow v
                      } in
                      case GHC.List.$wlenAcc @ GHC.Types.Char s30 0# of ww2 { DEFAULT ->
                      case PrettyPrinter.$fShowExpr11
                             `cast`
                           (Text.PrettyPrint.HughesPJ.N:Doc[0]) of wild1 {
                        DEFAULT
                        -> (Text.PrettyPrint.Annotated.HughesPJ.$wmkNest
                              @ ()
                              ww
                              (Text.PrettyPrint.Annotated.HughesPJ.reduceDoc_$sreduceDoc1
                                 @ ()
                                 wild1
                                 GHC.Types.True
                                 (Text.PrettyPrint.Annotated.HughesPJ.TextBeside
                                    @ ()
                                    (Text.PrettyPrint.Annotated.HughesPJ.NoAnnot
                                       @ ()
                                       (Text.PrettyPrint.Annotated.HughesPJ.Str s30)
                                       ww2)
                                    (Text.PrettyPrint.Annotated.HughesPJ.Empty @ ()))))
                             `cast`
                           (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0]))
                        Text.PrettyPrint.Annotated.HughesPJ.Empty
                        -> (Text.PrettyPrint.Annotated.HughesPJ.$wmkNest
                              @ ()
                              ww
                              (Text.PrettyPrint.Annotated.HughesPJ.reduceDoc
                                 @ ()
                                 (Text.PrettyPrint.Annotated.HughesPJ.TextBeside
                                    @ ()
                                    (Text.PrettyPrint.Annotated.HughesPJ.NoAnnot
                                       @ ()
                                       (Text.PrettyPrint.Annotated.HughesPJ.Str s30)
                                       ww2)
                                    (Text.PrettyPrint.Annotated.HughesPJ.Empty @ ()))))
                             `cast`
                           (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) } }
                   Grammar.BExp v
                   -> case (PrettyPrinter.$wprintBool v (GHC.Prim.+# ww 3#))
                             `cast`
                           (Text.PrettyPrint.HughesPJ.N:Doc[0]) of wild1 {
                        DEFAULT
                        -> case Text.PrettyPrint.Annotated.HughesPJ.$wmkNest
                                  @ ()
                                  ww
                                  PrettyPrinter.$fShowExpr8 of wild2 {
                             DEFAULT
                             -> (Text.PrettyPrint.Annotated.HughesPJ.Above
                                   @ ()
                                   wild2
                                   GHC.Types.True
                                   wild1)
                                  `cast`
                                (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0]))
                             Text.PrettyPrint.Annotated.HughesPJ.Empty
                             -> wild1 `cast` (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) }
                        Text.PrettyPrint.Annotated.HughesPJ.Empty
                        -> (Text.PrettyPrint.Annotated.HughesPJ.$wmkNest
                              @ ()
                              ww
                              PrettyPrinter.$fShowExpr8)
                             `cast`
                           (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) }
                   Grammar.NExp v
                   -> case (PrettyPrinter.$wprintNum v (GHC.Prim.+# ww 3#))
                             `cast`
                           (Text.PrettyPrint.HughesPJ.N:Doc[0]) of wild1 {
                        DEFAULT
                        -> case Text.PrettyPrint.Annotated.HughesPJ.$wmkNest
                                  @ ()
                                  ww
                                  PrettyPrinter.$fShowExpr5 of wild2 {
                             DEFAULT
                             -> (Text.PrettyPrint.Annotated.HughesPJ.Above
                                   @ ()
                                   wild2
                                   GHC.Types.True
                                   wild1)
                                  `cast`
                                (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0]))
                             Text.PrettyPrint.Annotated.HughesPJ.Empty
                             -> wild1 `cast` (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) }
                        Text.PrettyPrint.Annotated.HughesPJ.Empty
                        -> (Text.PrettyPrint.Annotated.HughesPJ.$wmkNest
                              @ ()
                              ww
                              PrettyPrinter.$fShowExpr5)
                             `cast`
                           (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) }
                   Grammar.LExp v
                   -> case (PrettyPrinter.$wprintList v (GHC.Prim.+# ww 3#))
                             `cast`
                           (Text.PrettyPrint.HughesPJ.N:Doc[0]) of wild1 {
                        DEFAULT
                        -> case Text.PrettyPrint.Annotated.HughesPJ.$wmkNest
                                  @ ()
                                  ww
                                  PrettyPrinter.$fShowExpr2 of wild2 {
                             DEFAULT
                             -> (Text.PrettyPrint.Annotated.HughesPJ.Above
                                   @ ()
                                   wild2
                                   GHC.Types.True
                                   wild1)
                                  `cast`
                                (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0]))
                             Text.PrettyPrint.Annotated.HughesPJ.Empty
                             -> wild1 `cast` (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) }
                        Text.PrettyPrint.Annotated.HughesPJ.Empty
                        -> (Text.PrettyPrint.Annotated.HughesPJ.$wmkNest
                              @ ()
                              ww
                              PrettyPrinter.$fShowExpr2)
                             `cast`
                           (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) } }) -}
cf45af1ec54401033485957498ba805b
  $wprintList ::
    Grammar.ListExpr -> GHC.Prim.Int# -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
cf1eb229a1e3a0fbb8d68ddc9bef09b6
  $wprintNum ::
    Grammar.NumExpr -> GHC.Prim.Int# -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, Strictness: <S,1*U><S,U>, Inline: [0] -}
839e69625e1aaae90284762511526388
  $wprintSL ::
    Grammar.Stmt_list -> GHC.Prim.Int# -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, Strictness: <S,1*U><S,U>, Inline: [0] -}
6ddac7534490260fdf62c407531bf5e7
  $wprintStmt ::
    Grammar.Stmt -> GHC.Prim.Int# -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
1fbbd0694d6a4d4d85a1d6ff0150059a
  debuger ::
    GHC.Show.Show t =>
    Data.Either.Either GHC.Base.String t -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(A,1*C1(U),A)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ t
                   ($dShow :: GHC.Show.Show t)
                   (ds :: Data.Either.Either GHC.Base.String t) ->
                 case ds of wild {
                   Data.Either.Left s30 -> s30
                   Data.Either.Right t1 -> GHC.Show.show @ t $dShow t1 }) -}
f4c6687b3f86ccff27aeb538e3f784a6
  prettyPrinter ::
    [GHC.Base.String]
    -> Data.Either.Either GHC.Base.String [GHC.Base.String]
  {- Arity: 1, Strictness: <S,1*U> -}
b0af0d9b109d50a9ca0c86f4f6af2641
  printBool ::
    Grammar.BoolExpr -> GHC.Types.Int -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, Strictness: <S,1*U><S,U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Grammar.BoolExpr) (w1 :: GHC.Types.Int) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 PrettyPrinter.$wprintBool w ww1 }) -}
0e99751c1c2aa11717a591a366d80364
  printExpr ::
    Grammar.Expr -> GHC.Types.Int -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, Strictness: <S,1*U><S(S),U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Grammar.Expr) (w1 :: GHC.Types.Int) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 PrettyPrinter.$wprintExpr w ww1 }) -}
9e7e5aa8954a5c585303c0dde48198dc
  printList ::
    Grammar.ListExpr -> GHC.Types.Int -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, Strictness: <S,1*U><S,U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Grammar.ListExpr) (w1 :: GHC.Types.Int) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 PrettyPrinter.$wprintList w ww1 }) -}
806b9f5d24f8ccab2e3760df2fd4457b
  printNum ::
    Grammar.NumExpr -> GHC.Types.Int -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, Strictness: <S,1*U><S(S),U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Grammar.NumExpr) (w1 :: GHC.Types.Int) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 PrettyPrinter.$wprintNum w ww1 }) -}
6a96e99980e670002f14edd44a18a6cd
  printSL ::
    Grammar.Stmt_list -> GHC.Types.Int -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, Strictness: <S,1*U><S(S),U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Grammar.Stmt_list) (w1 :: GHC.Types.Int) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 PrettyPrinter.$wprintSL w ww1 }) -}
42647d051e38aa6d553a84dc4b51eb49
  printStmt ::
    Grammar.Stmt -> GHC.Types.Int -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, Strictness: <S,1*U><S,U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Grammar.Stmt) (w1 :: GHC.Types.Int) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 PrettyPrinter.$wprintStmt w ww1 }) -}
instance GHC.Show.Show [Grammar.BoolExpr]
  = PrettyPrinter.$fShowBoolExpr
instance GHC.Show.Show [Grammar.Expr] = PrettyPrinter.$fShowExpr
instance GHC.Show.Show [Grammar.ListExpr]
  = PrettyPrinter.$fShowListExpr
instance GHC.Show.Show [Grammar.NumExpr]
  = PrettyPrinter.$fShowNumExpr
instance GHC.Show.Show [Grammar.Stmt] = PrettyPrinter.$fShowStmt
instance GHC.Show.Show [Grammar.Stmt_list]
  = PrettyPrinter.$fShowStmt_list
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

